/*!
 * jodit - Jodit is awesome and usefully wysiwyg editor with filebrowser
 * Author: Chupurnov <chupurnov@gmail.com> (https://xdsoft.net/)
 * Version: v3.24.9
 * Url: https://xdsoft.net/jodit/
 * License(s): MIT
 */
	
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 90643:
/***/ (function(module) {

module.exports["default"] = ["إبدأ في الكتابة...","حول جوديت","محرر جوديت","دليل مستخدم جوديت","يحتوي على مساعدة مفصلة للاستخدام","للحصول على معلومات حول الترخيص، يرجى الذهاب لموقعنا:","شراء النسخة الكاملة","حقوق الطبع والنشر © XDSoft.net - Chupurnov Valeriy. كل الحقوق محفوظة.","مِرْساة","فتح في نافذة جديدة","فتح المحرر في الحجم الكامل","مسح التنسيق","ملء اللون أو تعيين لون النص","إعادة","تراجع","عريض","مائل","إدراج قائمة غير مرتبة","إدراج قائمة مرتبة","محاذاة للوسط","محاذاة مثبتة","محاذاة لليسار","محاذاة لليمين","إدراج خط أفقي","إدراج صورة","ادخال الملف","إدراج فيديو يوتيوب/فيميو ","إدراج رابط","حجم الخط","نوع الخط","إدراج كتلة تنسيق","عادي","عنوان 1","عنوان 2","عنوان 3","عنوان 4","إقتباس","كود","إدراج","إدراج جدول","تقليل المسافة البادئة","زيادة المسافة البادئة","تحديد أحرف خاصة","إدراج حرف خاص","تنسيق الرسم","تغيير الوضع","هوامش","أعلى","يمين","أسفل","يسار","الأنماط","الطبقات","محاذاة","اليمين","الوسط","اليسار","--غير مضبوط--","Src","العنوان","العنوان البديل","الرابط","افتح الرابط في نافذة جديدة","الصورة","ملف","متقدم","خصائص الصورة","إلغاء","حسنا","متصفح الملفات","حدث خطأ في تحميل القائمة ","حدث خطأ في تحميل المجلدات","هل أنت واثق؟","أدخل اسم المجلد","إنشاء مجلد","أكتب إسم","إسقاط صورة","إسقاط الملف","أو أنقر","النص البديل","رفع","تصفح","الخلفية","نص","أعلى","الوسط","الأسفل","إدراج عمود قبل","إدراج عمود بعد","إدراج صف أعلى","إدراج صف أسفل","حذف الجدول","حذف الصف","حذف العمود","خلية فارغة","%d حرف","%d كلام","اضرب من خلال","أكد","حرف فوقي","مخطوطة","قطع الاختيار","اختر الكل","استراحة","البحث عن","استبدل ب","محل","معجون","اختر محتوى للصق","مصدر","بالخط العريض","مائل","شغل","صلة","إلغاء","كرر","طاولة","صورة","نظيف","فقرة","حجم الخط","فيديو","الخط","حول المحرر","طباعة","أكد","شطب","المسافة البادئة","نتوء","ملء الشاشة","الحجم التقليدي","الخط","قائمة","قائمة مرقمة","قطع","اختر الكل","قانون","فتح الرابط","تعديل الرابط","سمة Nofollow","إزالة الرابط","تحديث","لتحرير","مراجعة","URL","تحرير","محاذاة أفقية","فلتر","عن طريق التغيير","بالاسم","حسب الحجم","إضافة مجلد","إعادة","احتفظ","حفظ باسم","تغيير الحجم","حجم القطع","عرض","ارتفاع","حافظ على النسب","أن","لا","حذف","تميز","تميز %s","محاذاة عمودية","انشق، مزق","اذهب","أضف العمود","اضف سطر","رخصة %s","حذف","انقسام عمودي","تقسيم أفقي","الحدود","يشبه الكود الخاص بك HTML. تبقي كما HTML؟","الصق ك HTML","احتفظ","إدراج كنص","إدراج النص فقط","يمكنك فقط تحرير صورك الخاصة. تحميل هذه الصورة على المضيف؟","تم تحميل الصورة بنجاح على الخادم!","لوحة","لا توجد ملفات في هذا الدليل.","إعادة تسمية","أدخل اسم جديد","معاينة","تحميل","لصق من الحافظة","متصفحك لا يدعم إمكانية الوصول المباشر إلى الحافظة.","نسخ التحديد","نسخ","دائرة نصف قطرها الحدود","عرض كل","تطبيق","يرجى ملء هذا المجال","يرجى إدخال عنوان ويب","الافتراضي","دائرة","نقطة","المربعة","البحث","تجد السابقة","تجد التالي","للصق المحتوى قادم من Microsoft Word/Excel الوثيقة. هل تريد أن تبقي شكل أو تنظيفه ؟ ","كلمة لصق الكشف عن","نظيفة","أدخل اسم الفصل","اضغط البديل لتغيير حجم مخصص"]

/***/ }),

/***/ 52532:
/***/ (function(module) {

module.exports["default"] = ["Napiš něco","O Jodit","Editor Jodit","Jodit Uživatelská příručka","obsahuje detailní nápovědu","Pro informace o licenci, prosím, přejděte na naši stránku:","Koupit plnou verzi","Copyright © XDSoft.net - Chupurnov Valeriy. Všechna práva vyhrazena.","Anchor","Otevřít v nové záložce","Otevřít v celoobrazovkovém režimu","Vyčistit formátování","Barva výplně a písma","Vpřed","Zpět","Tučné","Kurzíva","Odrážky","Číslovaný seznam","Zarovnat na střed","Zarovnat do bloku","Zarovnat vlevo","Zarovnat vpravo","Vložit horizontální linku","Vložit obrázek","Vložit soubor","Vložit video (YT/Vimeo)","Vložit odkaz","Velikost písma","Typ písma","Formátovat blok","Normální text","Nadpis 1","Nadpis 2","Nadpis 3","Nadpis 4","Citát","Kód","Vložit","Vložit tabulku","Zmenšit odsazení","Zvětšit odsazení","Vybrat speciální symbol","Vložit speciální symbol","Použít formát","Změnit mód","Okraje","horní","pravý","spodní","levý","Styly","Třídy","Zarovnání","Vpravo","Na střed","Vlevo","--nenastaveno--","src","Titulek","Alternativní text (alt)","Link","Otevřít link v nové záložce","Obrázek","soubor","Rozšířené","Vlastnosti obrázku","Zpět","Ok","Prohlížeč souborů","Chyba při načítání seznamu souborů","Chyba při načítání složek","Jste si jistý(á)?","Název složky","Vytvořit složku","název","Přetáhněte sem obrázek","Přetáhněte sem soubor","nebo klikněte","Alternativní text","Nahrát","Server","Pozadí","Text","Nahoru","Na střed","Dolu","Vložit sloupec před","Vložit sloupec za","Vložit řádek nad","Vložit řádek pod","Vymazat tabulku","Vymazat řádku","Vymazat sloupec","Vyčistit buňku","Znaky: %d","Slova: %d","Přeškrtnuto","Podtrženo","Horní index","Dolní index","Vyjmout označené","Označit vše","Zalomení","Najdi","Nahradit za","Vyměňte","Vložit","Vyber obsah pro vložení","HTML","tučně","kurzíva","štětec","odkaz","zpět","vpřed","tabulka","obrázek","guma","odstavec","velikost písma","video","písmo","о editoru","tisk","podtrženo","přeškrtnuto","zvětšit odsazení","zmenšit odsazení","celoobrazovkový režim","smrsknout","Linka","Odrážka","Číslovaný seznam","Vyjmout","Označit vše","Kód","Otevřít odkaz","Upravit odkaz","Atribut no-follow","Odstranit odkaz","Aktualizovat","Chcete-li upravit","Zobrazit","URL","Editovat","Horizontální zarovnání","Filtr","Dle poslední změny","Dle názvu","Dle velikosti","Přidat složku","Reset","Uložit","Uložit jako...","Změnit rozměr","Ořezat","Šířka","Výška","Ponechat poměr","Ano","Ne","Vyjmout","Označit","Označit %s","Vertikální zarovnání","Rozdělit","Spojit","Přidat sloupec","Přidat řádek","Licence: %s","Vymazat","Rozdělit vertikálně","Rozdělit horizontálně","Okraj","Váš text se podobá HTML. Vložit ho jako HTML?","Vložit jako HTML","Ponechat originál","Vložit jako TEXT","Vložit pouze TEXT","Můžete upravovat pouze své obrázky. Načíst obrázek?","Obrázek byl úspěšně nahrán!","paleta","V tomto adresáři nejsou žádné soubory.","přejmenovat","Zadejte nový název","náhled","Stažení","Vložit ze schránky","Váš prohlížeč nepodporuje přímý přístup do schránky.","Kopírovat výběr","kopírování","Border radius","Zobrazit všechny","Platí","Prosím, vyplňte toto pole","Prosím, zadejte webovou adresu","Výchozí","Kruh","Dot","Quadrate","Najít","Najít Předchozí","Najít Další","Obsah, který vkládáte, je pravděpodobně z Microsoft Word / Excel. Chcete ponechat formát nebo vložit pouze text?","Detekován fragment z Wordu nebo Excelu","Vyčistit","Vložte název třídy","Stiskněte Alt pro vlastní změnu velikosti"]

/***/ }),

/***/ 75178:
/***/ (function(module) {

module.exports["default"] = ["Bitte geben Sie einen Text ein","Über Jodit","Jodit Editor","Das Jodit Benutzerhandbuch","beinhaltet ausführliche Informationen wie Sie den Editor verwenden können.","Für Informationen zur Lizenz, besuchen Sie bitte unsere Web-Präsenz:","Vollversion kaufen","Copyright © XDSoft.net - Chupurnov Valeriy. Alle Rechte vorbehalten.","Anker","In neuer Registerkarte öffnen","Editor in voller Größe öffnen","Formatierung löschen","Füllfarbe oder Textfarbe ändern","Wiederholen","Rückgängig machen","Fett","Kursiv","Unsortierte Liste einfügen","Nummerierte Liste einfügen","Mittig ausrichten","Blocksatz","Links ausrichten","Rechts ausrichten","Horizontale Linie einfügen","Bild einfügen","Datei einfügen","Youtube/vimeo Video einfügen","Link einfügen","Schriftgröße","Schriftfamilie","Formatblock einfügen","Normal","Überschrift 1","Überschrift 2","Überschrift 3","Überschrift 4","Zitat","Code","Einfügen","Tabelle einfügen","Einzug verkleinern","Einzug vergrößern","Sonderzeichen auswählen","Sonderzeichen einfügen","Format kopieren","Änderungsmodus","Ränder","Oben","Rechts","Unten","Links","CSS Stil","CSS Klassen","Ausrichtung","Rechts","Zentriert","Links","Keine","Pfad","Titel","Alternativer Text","Link","Link in neuem Tab öffnen","Bild","Datei","Fortgeschritten","Bildeigenschaften","Abbrechen","OK","Dateibrowser","Fehler beim Laden der Liste","Fehler beim Laden der Ordner","Sind Sie sicher?","Geben Sie den Verzeichnisnamen ein","Verzeichnis erstellen","Typname","Bild hier hinziehen","Datei löschen","oder hier klicken","Alternativtext","Hochladen","Auswählen","Hintergrund","Text","Oben","Mittig","Unten","Spalte davor einfügen","Spalte danach einfügen","Zeile oberhalb einfügen","Zeile unterhalb einfügen","Tabelle löschen","Zeile löschen","Spalte löschen","Zelle leeren","Zeichen: %d","Wörter: %d","Durchstreichen","Unterstreichen","Hochstellen","Tiefstellen","Auswahl ausschneiden","Alles markieren","Pause","Suche nach","Ersetzen durch","Ersetzen","Einfügen","Wählen Sie den Inhalt zum Einfügen aus","HTML","Fett gedruckt","Kursiv","Bürste","Verknüpfung","Rückgängig machen","Wiederholen","Tabelle","Bild","Radiergummi","Absatz","Schriftgröße","Video","Schriftart","Über","Drucken","Unterstreichen","Durchstreichen","Einzug","Herausstellen","Vollgröße","Schrumpfen","die Linie","Liste von","Nummerierte Liste","Schneiden","Wählen Sie Alle aus","Code einbetten","Link öffnen","Link bearbeiten","Nofollow-Attribut","Link entfernen","Aktualisieren","Bearbeiten","Ansehen","URL","Bearbeiten","Horizontale Ausrichtung","Filter","Sortieren nach geändert","Nach Name sortieren","Nach Größe sortiert","Ordner hinzufügen","Wiederherstellen","Speichern","Speichern als","Größe ändern","Größe anpassen","Breite","Höhe","Seitenverhältnis beibehalten","Ja","Nein","Entfernen","Markieren","Markieren: %s","Vertikale Ausrichtung","Unterteilen","Vereinen","Spalte hinzufügen","Zeile hinzufügen",null,"Löschen","Vertikal unterteilen","Horizontal unterteilen","Rand","Ihr Text ähnelt HTML-Code. Als HTML beibehalten?","Als HTML einfügen?","Original speichern","Als Text einfügen","Nur Text einfügen","Sie können nur Ihre eigenen Bilder bearbeiten. Dieses Bild auf den Host herunterladen?","Das Bild wurde erfolgreich auf den Server hochgeladen!","Palette","In diesem Verzeichnis befinden sich keine Dateien.","Umbenennen","Geben Sie einen neuen Namen ein","Vorschau","Herunterladen","Aus Zwischenablage einfügen","Ihr Browser unterstützt keinen direkten Zugriff auf die Zwischenablage.","Auswahl kopieren","Kopieren","Radius für abgerundete Ecken","Alle anzeigen","Anwenden","Bitte füllen Sie dieses Feld aus","Bitte geben Sie eine Web-Adresse ein","Standard","Kreis","Punkte","Quadrate","Suchen","Suche vorherige","Weitersuchen","Der Inhalt, den Sie einfügen, stammt aus einem Microsoft Word / Excel-Dokument. Möchten Sie das Format erhalten oder bereinigen?","In Word formatierter Text erkannt","Säubern","className (CSS) einfügen","Drücken Sie Alt für benutzerdefinierte Größenanpassung"]

/***/ }),

/***/ 51048:
/***/ (function(module) {

module.exports["default"] = {"Type something":"Start writing...","pencil":"Edit","Quadrate":"Square"}

/***/ }),

/***/ 22999:
/***/ (function(module) {

module.exports["default"] = ["Escriba algo...","Acerca de Jodit","Jodit Editor","Guía de usuario Jodit","contiene ayuda detallada para el uso.","Para información sobre la licencia, por favor visite nuestro sitio:","Compre la versión completa","Copyright © XDSoft.net - Chupurnov Valeriy. Todos los derechos reservados.","Anclar","Abrir en nueva pestaña","Abrir editor en pantalla completa","Limpiar formato","Color de relleno o de letra","Rehacer","Deshacer","Negrita","Cursiva","Insertar lista no ordenada","Insertar lista ordenada","Alinear Centrado","Alinear Justificado","Alinear Izquierda","Alinear Derecha","Insertar línea horizontal","Insertar imagen","Insertar archivo","Insertar video de Youtube/vimeo","Insertar vínculo","Tamaño de letra","Familia de letra","Insertar bloque","Normal","Encabezado 1","Encabezado 2","Encabezado 3","Encabezado 4","Cita","Código","Insertar","Insertar tabla","Disminuir sangría","Aumentar sangría","Seleccionar caracter especial","Insertar caracter especial","Copiar formato","Cambiar modo","Márgenes","arriba","derecha","abajo","izquierda","Estilos CSS","Clases CSS","Alinear","Derecha","Centrado","Izquierda","--No Establecido--","Fuente","Título","Texto Alternativo","Vínculo","Abrir vínculo en nueva pestaña","Imagen","Archivo","Avanzado","Propiedades de imagen","Cancelar","Aceptar","Buscar archivo","Error al cargar la lista","Error al cargar las carpetas","¿Está seguro?","Entre nombre de carpeta","Crear carpeta","Entre el nombre","Soltar imagen","Soltar archivo","o click","Texto alternativo","Subir","Buscar","Fondo","Texto","Arriba","Centro","Abajo","Insertar columna antes","Interar columna después","Insertar fila arriba","Insertar fila debajo","Borrar tabla","Borrar fila","Borrar columna","Vaciar celda","Caracteres: %d","Palabras: %d","Tachado","Subrayado","superíndice","subíndice","Cortar selección","Seleccionar todo","Pausa","Buscar","Reemplazar con","Reemplazar","Pegar","Seleccionar contenido para pegar","HTML","negrita","cursiva","Brocha","Vínculo","deshacer","rehacer","Tabla","Imagen","Borrar","Párrafo","Tamaño de letra","Video","Letra","Acerca de","Imprimir","subrayar","tachar","sangría","quitar sangría","Tamaño completo","encoger","línea horizontal","lista sin ordenar","lista ordenada","Cortar","Seleccionar todo","Incluir código","Abrir vínculo","Editar vínculo","No seguir","Desvincular","Actualizar","Para editar","Ver","URL","Editar","Alineación horizontal","Filtrar","Ordenar por fecha modificación","Ordenar por nombre","Ordenar por tamaño","Agregar carpeta","Resetear","Guardar","Guardar como...","Redimensionar","Recortar","Ancho","Alto","Mantener relación de aspecto","Si","No","Quitar","Seleccionar","Seleccionar: %s","Alineación vertical","Dividir","Mezclar","Agregar columna","Agregar fila",null,"Borrar","Dividir vertical","Dividir horizontal","Borde","El código es similar a HTML. ¿Mantener como HTML?","Pegar como HTML?","Mantener","Insertar como texto","Insertar solo texto","Solo puedes editar tus propias imágenes. ¿Descargar esta imagen en el servidor?","¡La imagen se ha subido correctamente al servidor!","paleta","No hay archivos en este directorio.","renombrar","Ingresa un nuevo nombre","avance","Descargar","Pegar desde el portapapeles","Su navegador no soporta el acceso directo en el portapapeles.","Selección de copia","copia","Radio frontera","Mostrar todos los","Aplicar","Por favor, rellene este campo","Por favor, introduzca una dirección web","Predeterminado","Círculo","Punto","Cuadro","Encontrar","Buscar Anterior","Buscar Siguiente","El contenido pegado proviene de un documento de Microsoft Word/Excel. ¿Desea mantener el formato o limpiarlo?","Pegado desde Word detectado","Limpiar","Insertar nombre de clase","Presione Alt para cambiar el tamaño personalizado"]

/***/ }),

/***/ 34145:
/***/ (function(module) {

module.exports["default"] = ["Ecrivez ici","A propos de Jodit","Editeur Jodit","Guide de l'utilisateur","Aide détaillée à l'utilisation","Consulter la licence sur notre site web:","Acheter la version complète","Copyright © XDSoft.net - Chupurnov Valeriy. Tous droits réservés.","Ancre","Ouvrir dans un nouvel onglet","Ouvrir l'éditeur en pleine page","Supprimer le formattage","Modifier la couleur du fond ou du texte","Refaire","Défaire","Gras","Italique","Liste non ordonnée","Liste ordonnée","Centrer","Justifier","Aligner à gauche ","Aligner à droite","Insérer une ligne horizontale","Insérer une image","Insérer un fichier","Insérer une vidéo","Insérer un lien","Taille des caractères","Famille des caractères","Bloc formatté","Normal","Titre 1","Titre 2","Titre 3","Titre 4","Citation","Code","Insérer","Insérer un tableau","Diminuer le retrait","Retrait plus","Sélectionnez un caractère spécial","Insérer un caractère spécial","Cloner le format","Mode wysiwyg <-> code html","Marges","haut","droite","Bas","gauche","Styles","Classes","Alignement","Droite","Centre","Gauche","--Non disponible--","Source","Titre","Alternative","Lien","Ouvrir le lien dans un nouvel onglet","Image","fichier","Avancé","Propriétés de l'image","Annuler","OK","Explorateur de fichiers","Erreur de liste de chargement","Erreur de dossier de chargement","Etes-vous sûrs ?","Entrer le nom de dossier","Créer un dossier","type de fichier","Coller une image","Déposer un fichier","ou cliquer","Texte de remplacemement","Charger","Chercher","Arrière-plan","Texte","Haut","Milieu","Bas","Insérer une colonne avant","Insérer une colonne après","Insérer une ligne au dessus","Insérer une ligne en dessous","Supprimer le tableau","Supprimer la ligne","Supprimer la colonne","Vider la cellule","Symboles: %d","Mots: %d","Barrer","Souligner","exposant","indice","Couper la sélection","Tout sélectionner","Pause","Rechercher","Remplacer par","Remplacer","Coller","Choisissez le contenu à coller","la source","gras","italique","pinceau","lien","annuler","refaire","tableau","image","gomme","clause","taille de police","Video","police","à propos de l'éditeur","impression","souligné","barré","indentation","retrait","taille réelle","taille conventionnelle","la ligne","Liste","Liste numérotée","Couper","Sélectionner tout",null,"Ouvrir le lien","Modifier le lien","Attribut Nofollow","Supprimer le lien","Mettre à jour","Pour éditer","Voir","URL",null,"Alignement horizontal","Filtre","Trier par modification","Trier par nom","Trier par taille","Créer le dossier","Restaurer","Sauvegarder","Enregistrer sous","Changer la taille","Taille de garniture","Largeur","Hauteur","Garder les proportions","Oui","Non","Supprimer","Mettre en évidence","Mettre en évidence: %s","Alignement vertical","Split","aller","Ajouter une colonne","Ajouter une rangée",null,"Effacer","Split vertical","Split horizontal","Bordure","Votre texte que vous essayez de coller est similaire au HTML. Collez-le en HTML?","Coller en HTML?","Sauvegarder l'original","Coller en tant que texte","Coller le texte seulement","Vous ne pouvez éditer que vos propres images. Téléchargez cette image sur l'hôte?","L'image a été téléchargée avec succès sur le serveur!","Palette","Il n'y a aucun fichier dans ce répertoire.","renommer","Entrez un nouveau nom","Aperçu","Télécharger","Coller à partir du presse-papiers","Votre navigateur ne prend pas en charge l'accès direct au presse-papiers.","Copier la sélection","copie","Rayon des bordures","Afficher tous","Appliquer","Veuillez remplir ce champ","Veuillez entrer une adresse web","Par défaut","Cercle","Point","Quadratique","Trouver","Précédent","Suivant","Le contenu que vous insérez provient d'un document Microsoft Word / Excel. Voulez-vous enregistrer le format ou l'effacer?","C'est peut-être un fragment de Word ou Excel","Nettoyer","Insérer un nom de classe","Appuyez sur Alt pour un redimensionnement personnalisé"]

/***/ }),

/***/ 40272:
/***/ (function(module) {

module.exports["default"] = ["הקלד משהו...","About Jodit","Jodit Editor","Jodit User's Guide","contains detailed help for using.","For information about the license, please go to our website:","Buy full version","Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.","מקום עיגון","פתח בכרטיסיה חדשה","פתח את העורך בחלון חדש","נקה עיצוב","שנה צבע טקסט או רקע","בצע שוב","בטל","מודגש","נטוי","הכנס רשימת תבליטים","הכנס רשימה ממוספרת","מרכז","ישר ","ישר לשמאל","ישר לימין","הכנס קו אופקי","הכנס תמונה","הכנס קובץ","הכנס סרטון וידאו מYouTube/Vimeo","הכנס קישור","גודל גופן","גופן","מעוצב מראש","רגיל","כותרת 1","כותרת 2","כותרת 3","כותרת 4","ציטוט","קוד","הכנס","הכנס טבלה","הקטן כניסה","הגדל כניסה","בחר תו מיוחד","הכנס תו מיוחד","העתק עיצוב","החלף מצב","ריווח","עליון","ימין","תחתון","שמאל","עיצוב CSS","מחלקת CSS","יישור","ימין","מרכז","שמאל","--לא נקבע--","מקור","כותרת","כיתוב חלופי","קישור","פתח בכרטיסיה חדשה","תמונה","קובץ","מתקדם","מאפייני תמונה","ביטול","אישור","סייר הקבצים","שגיאה  בזמן טעינת רשימה","שגיאה בזמן טעינת תקיות","האם אתה בטוח?","הכנס שם תקיה","צור תקיה","סוג הקובץ","הסר תמונה","הסר קובץ","או לחץ","כיתוב חלופי","העלה","סייר","רקע","טקסט","עליון","מרכז","תחתון","הכנס עמודה לפני","הכנס עמודה אחרי","הכנס שורה מעל","הכנס שורה מתחת","מחק טבלה","מחק שורה","מחק עמודה","רוקן תא","תווים: %d","מילים: %d","קו חוצה","קו תחתון","superscript","subscript","גזור בחירה","בחר הכל","שבירת שורה","חפש","החלף ב","להחליף","הדבק","בחר תוכן להדבקה","HTML","מודגש","נטוי","מברשת","קישור","בטל","בצע שוב","טבלה","תמונה","מחק","פסקה","גודל גופן","וידאו","גופן","עלינו","הדפס","קו תחתון","קו חוצה","הגדל כניסה","הקטן כניסה","גודל מלא","כווץ","קו אופקי","רשימת תבליטים","רשימה ממוספרת","חתוך","בחר הכל","הוסף קוד","פתח קישור","ערוך קישור","ללא מעקב","בטל קישור","עדכן","כדי לערוך","הצג","כתובת","ערוך","יישור אופקי","סנן","מין לפי שינוי","מיין לפי שם","מיין לפי גודל","הוסף תקייה","אפס","שמור","שמור בשם...","שנה גודל","חתוך","רוחב","גובה","שמור יחס","כן","לא","הסר","בחר","נבחר: %s","יישור אנכי","פיצול","מזג","הוסף עמודה","הוסף שורה",null,"מחק","פיצול אנכי","פיצול אופקי","מסגרת","הקוד דומה לHTML, האם להשאיר כHTML","הדבק כHTML","השאר","הכנס כטקסט","הכנס טקסט בלבד","רק קבצים המשוייכים שלך ניתנים לעריכה. האם להוריד את הקובץ?","התמונה עלתה בהצלחה!","לוח","אין קבצים בספריה זו.","הונגרית","הזן שם חדש","תצוגה מקדימה","הורד","להדביק מהלוח","הדפדפן שלך לא תומך גישה ישירה ללוח.","העתק בחירה","העתק","רדיוס הגבול","הצג את כל","החל","נא למלא שדה זה","אנא הזן כתובת אינטרנט","ברירת המחדל","מעגל","נקודה","הריבוע הזה","למצוא","מצא את הקודם","חפש את הבא","התוכן המודבק מגיע ממסמך וורד/אקסל. האם ברצונך להשאיר את העיצוב או לנקותו","זוהתה הדבקה מ\"וורד\"","נקה","הכנס את שם הכיתה","לחץ על אלט לשינוי גודל מותאם אישית"]

/***/ }),

/***/ 2978:
/***/ (function(module) {

module.exports["default"] = ["Írjon be valamit","Joditról","Jodit Editor","Jodit útmutató","további segítséget tartalmaz","További licence információkért látogassa meg a weboldalunkat:","Teljes verzió megvásárlása","Copyright © XDSoft.net - Chupurnov Valeriy. Minden jog fenntartva.","Horgony","Megnyitás új lapon","Megnyitás teljes méretben","Formázás törlése","Háttér/szöveg szín","Újra","Visszavon","Félkövér","Dőlt","Pontozott lista","Számozott lista","Középre zárt","Sorkizárt","Balra zárt","Jobbra zárt","Vízszintes vonal beszúrása","Kép beszúrás","Fájl beszúrás","Youtube videó beszúrása","Link beszúrás","Betűméret","Betűtípus","Formázott blokk beszúrása","Normál","Fejléc 1","Fejléc 2","Fejléc 3","Fejléc 4","Idézet","Kód","Beszúr","Táblázat beszúrása","Behúzás csökkentése","Behúzás növelése","Speciális karakter kiválasztása","Speciális karakter beszúrása","Kép formázása","Nézet váltása","Szegélyek","felső","jobb","alsó","bal","CSS stílusok","CSS osztályok","Igazítás","Jobbra","Középre","Balra","Nincs","Forrás","Cím","Helyettesítő szöveg","Link","Link megnyitása új lapon","Kép","Fájl","Haladó","Kép tulajdonságai","Mégsem","OK","Fájl tallózó","Hiba a lista betöltése közben","Hiba a mappák betöltése közben","Biztosan ezt szeretné?","Írjon be egy mappanevet","Mappa létrehozása","írjon be bevet","Húzza ide a képet","Húzza ide a fájlt","vagy kattintson","Helyettesítő szöveg","Feltölt","Tallóz","Háttér","Szöveg","Fent","Középen","Lent","Oszlop beszúrás elé","Oszlop beszúrás utána","Sor beszúrás fölé","Sor beszúrás alá","Táblázat törlése","Sor törlése","Oszlop törlése","Cella tartalmának törlése","Karakterek száma: %d","Szavak száma: %d","Áthúzott","Aláhúzott","Felső index","Alsó index","Kivágás","Összes kijelölése","Szünet","Keresés","Csere erre","Cserélje ki","Beillesztés","Válasszon tartalmat a beillesztéshez","HTML","Félkövér","Dőlt","Ecset","Link","Visszavon","Újra","Táblázat","Kép","Törlés","Paragráfus","Betűméret","Videó","Betű","Rólunk","Nyomtat","Aláhúzott","Áthúzott","Behúzás","Aussenseiter","Teljes méret","Összenyom","Egyenes vonal","Lista","Számozott lista","Kivág","Összes kijelölése","Beágyazott kód","Link megnyitása","Link szerkesztése","Nincs követés","Link leválasztása","Frissít","Szerkesztés","felülvizsgálat","URL","Szerkeszt","Vízszintes igazítás","Szűrő","Rendezés módosítás szerint","Rendezés név szerint","Rendezés méret szerint","Mappa hozzáadás","Visszaállít","Mentés","Mentés másként...","Átméretezés","Kivág","Szélesség","Magasság","Képarány megtartása","Igen","Nem","Eltávolít","Kijelöl","Kijelöl: %s","Függőleges igazítás","Felosztás","Összevonás","Oszlop hozzáadás","Sor hozzáadás",null,"Törlés","Függőleges felosztás","Vízszintes felosztás","Szegély","A beillesztett szöveg HTML-nek tűnik. Megtartsuk HTML-ként?","Beszúrás HTML-ként","Megtartás","Beszúrás szövegként","Csak szöveg beillesztése","Csak a saját képeit tudja szerkeszteni. Letölti ezt a képet?","Kép sikeresen feltöltve!","Palette","Er zijn geen bestanden in deze map.","átnevezés","Adja meg az új nevet","előnézet","Letöltés","Illessze be a vágólap","A böngésző nem támogatja a közvetlen hozzáférést biztosít a vágólapra.","Másolás kiválasztása","másolás","Határ sugár","Összes","Alkalmazni","Kérjük, töltse ki ezt a mezőt,","Kérjük, írja be a webcímet","Alapértelmezett","Kör","Pont","Quadrate","Találni","Megtalálja Előző","Következő Keresése","A beillesztett tartalom Microsoft Word/Excel dokumentumból származik. Meg szeretné tartani a formátumát?","Word-ből másolt szöveg","Elvetés","Helyezze be az osztály nevét","Nyomja meg az Alt egyéni átméretezés"]

/***/ }),

/***/ 99113:
/***/ (function(module) {

module.exports["default"] = ["Ketik sesuatu","Tentang Jodit","Editor Jodit","Panduan Pengguna Jodit","mencakup detail bantuan penggunaan","Untuk informasi tentang lisensi, silakan kunjungi website:","Beli versi lengkap","Hak Cipta © XDSoft.net - Chupurnov Valeriy. Hak cipta dilindungi undang-undang.","Tautan","Buka di tab baru","Buka editor dalam ukuran penuh","Hapus Pemformatan","Isi warna atau atur warna teks","Ulangi","Batalkan","Tebal","Miring","Sisipkan Daftar Tidak Berurut","Sisipkan Daftar Berurut","Tengah","Penuh","Kiri","Kanan","Sisipkan Garis Horizontal","Sisipkan Gambar","Sisipkan Berkas","Sisipkan video youtube/vimeo","Sisipkan tautan","Ukuran font","Keluarga font","Sisipkan blok format","Normal","Heading 1","Heading 2","Heading 3","Heading 4","Kutip","Kode","Sisipkan","Sisipkan tabel","Kurangi Indentasi","Tambah Indentasi","Pilih Karakter Spesial","Sisipkan Karakter Spesial","Formar warna","Ubah mode","Batas","atas","kanan","bawah","kiri","Gaya","Class","Rata","Kanan","Tengah","Kiri","--Tidak diset--","Src","Judul","Teks alternatif","Tautan","Buka tautan di tab baru","Gambar","berkas","Lanjutan","Properti gambar","Batal","Ya","Penjelajah Berkas","Error ketika memuat list","Error ketika memuat folder","Apakah Anda yakin?","Masukkan nama Direktori","Buat direktori","ketik nama","Letakkan gambar","Letakkan berkas","atau klik","Teks alternatif","Unggah","Jelajahi","Latar Belakang","Teks","Atas","Tengah","Bawah","Sisipkan kolom sebelumnya","Sisipkan kolom setelahnya","Sisipkan baris di atasnya","Sisipkan baris di bawahnya","Hapus tabel","Hapus baris","Hapus kolom","Kosongkan cell","Karakter: %d","Kata: %d","Coret","Garis Bawah","Superskrip","Subskrip","Potong pilihan","Pilih semua","Berhenti","Mencari","Ganti dengan","Mengganti","Paste","Pilih konten untuk dipaste","sumber","tebal","miring","sikat","tautan","batalkan","ulangi","tabel","gambar","penghapus","paragraf","ukuran font","video","font","tentang","cetak","garis bawah","coret","menjorok ke dalam","menjorok ke luar","ukuran penuh","menyusut","hr","ul","ol","potong","Pilih semua","Kode embed","Buka tautan","Edit tautan","No follow","Hapus tautan","Perbarui","pensil","Mata","URL","Edit","Perataan horizontal","Filter","Urutkan berdasarkan perubahan","Urutkan berdasarkan nama","Urutkan berdasarkan ukuran","Tambah folder","Reset","Simpan","Simpan sebagai...","Ubah ukuran","Crop","Lebar","Tinggi","Jaga aspek rasio","Ya","Tidak","Copot","Pilih","Pilih %s","Rata vertikal","Bagi","Gabungkan","Tambah kolom","tambah baris","Lisensi: %s","Hapus","Bagi secara vertikal","Bagi secara horizontal","Bingkai","Kode Anda cenderung ke HTML. Biarkan sebagai HTML?","Paste sebagai HTML","Jaga","Sisipkan sebagai teks","Sisipkan hanya teks","Anda hanya dapat mengedit gambar Anda sendiri. Unduh gambar ini di host?","Gambar telah sukses diunggah ke host!","palet","Tidak ada berkas","ganti nama","Masukkan nama baru","pratinjau","Unduh","Paste dari clipboard","Browser anda tidak mendukung akses langsung ke clipboard.","Copy seleksi","copy","Border radius","Tampilkan semua","Menerapkan","Silahkan mengisi kolom ini","Silahkan masukkan alamat web","Default","Lingkaran","Dot","Kuadrat","Menemukan","Menemukan Sebelumnya","Menemukan Berikutnya","Konten dipaste dari dokumen Microsoft Word/Excel. Apakah Anda ingin tetap menjaga format atau membersihkannya?","Terdeteksi paste dari Word","Bersih","Masukkan nama kelas","Tekan Alt untuk mengubah ukuran kustom"]

/***/ }),

/***/ 51923:
/***/ (function(module) {

module.exports["default"] = ["Scrivi qualcosa...","A proposito di Jodit","Jodit Editor","Guida utente di Jodit","contiene una guida dettagliata per l'uso.","Per informazioni sulla licenza, si prega di visitare il nostro sito:","Acquista la versione completa","Copyright © XDSoft.net - Chupurnov Valeriy. Alle Rechte vorbehalten.","Ancora","Apri in una nuova scheda","Apri l'editor a schermo intero","Formato chiaro","Riempi colore o lettera","Ripristina","Annulla","Grassetto","Corsivo","Inserisci lista non ordinata","Inserisci l'elenco ordinato","Allinea Centra","Allineare Giustificato","Allinea a Sinistra","Allinea a Destra","Inserisci la linea orizzontale","Inserisci immagine","Inserisci un file","Inserisci video Youtube/Vimeo","Inserisci il link","Dimensione del carattere","Tipo di font","Inserisci blocco","Normale","Heading 1","Heading 2","Heading 3","Heading 4","Citazione","Codice","Inserisci","Inserisci tabella","Riduci il rientro","Aumenta il rientro","Seleziona una funzione speciale","Inserisci un carattere speciale","Copia formato","Cambia modo","Margini","su","destra","giù","sinistra","Stili CSS","Classi CSS","Allinea","Destra","Centro","Sinistra","--Non Impostato--","Fonte","Titolo","Testo Alternativo","Link","Apri il link in una nuova scheda","Immagine","Archivio","Avanzato","Proprietà dell'immagine","Annulla","Accetta","Cerca il file","Errore durante il caricamento dell'elenco","Errore durante il caricamento delle cartelle","Sei sicuro?","Inserisci il nome della cartella","Crea cartella","Entre el nombre","Rilascia l'immagine","Rilascia file","o click","Testo alternativo","Carica","Sfoglia","Sfondo","Testo","Su","Centro","Sotto","Inserisci prima la colonna","Inserisci colonna dopo","Inserisci la riga sopra","Inserisci la riga sotto","Elimina tabella","Elimina riga","Elimina colonna","Cella vuota","Caratteri: %d","Parole: %d","Barrato","Sottolineato","indice","deponente","Taglia la selezione","Seleziona tutto","Pausa","Cerca","Sostituisci con","Sostituire","Incolla","Seleziona il contenuto da incollare","HTML","Grassetto","Corsivo","Pennello","Link","Annulla","Ripristina","Tabella","Immagine","Gomma","Paragrafo","Dimensione del carattere","Video","Font","Approposito di","Stampa","Sottolineato","Barrato","trattino","annulla rientro","A grandezza normale","comprimere","linea orizzontale","lista non ordinata","lista ordinata","Taglia","Seleziona tutto","Includi codice","Apri link","Modifica link","Non seguire","Togli link","Aggiornare","Per modificare","Recensione"," URL","Modifica","Allineamento orizzontale","Filtro","Ordina per data di modifica","Ordina per nome","Ordina per dimensione","Aggiungi cartella","Reset","Salva","Salva con nome...","Ridimensiona","Tagliare","Larghezza","Altezza","Mantenere le proporzioni","Si","No","Rimuovere","Seleziona","Seleziona: %s","Allineamento verticala","Dividere","Fondi","Aggiungi colonna","Aggiungi riga",null,"Cancella","Dividere verticalmente","Diviso orizzontale","Bordo","Il codice è simile all'HTML. Mantieni come HTML?","Incolla come HTML?","Mantieni","Inserisci come testo","Inserisci solo il testo","Puoi modificare solo le tue immagini. Scarica questa immagine sul server?","L'immagine è stata caricata con successo sul server!","tavolozza","Non ci sono file in questa directory.","ungherese","Inserisci un nuovo nome","anteprima","Scaricare","Incolla dagli appunti","Il tuo browser non supporta l'accesso diretto agli appunti.","Selezione di copia","copia","Border radius","Mostra tutti","Applicare","Si prega di compilare questo campo","Si prega di inserire un indirizzo web","Di Default","Cerchio","Dot","Quadrate","Trovare","Trova Precedente","Trova Successivo","Il contenuto incollato proviene da un documento Microsoft Word / Excel. Vuoi mantenere il formato o pulirlo?","Incollato da Word rilevato","Pulisci","Inserisci il nome della classe","Premere Alt per il ridimensionamento personalizzato"]

/***/ }),

/***/ 21268:
/***/ (function(module) {

module.exports["default"] = ["なにかタイプしてください","Joditについて","Jodit Editor","Jodit ユーザーズ・ガイド","詳しい使い方","ライセンス詳細についてはJodit Webサイトを確認ください：","フルバージョンを購入","Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.","Anchor","新しいタブで開く","エディターのサイズ（フル/ノーマル）","書式をクリア","テキストの色","やり直し","元に戻す","太字","斜体","箇条書き","番号付きリスト","中央揃え","両端揃え","左揃え","右揃え","区切り線を挿入","画像を挿入","ファイルを挿入","Youtube/Vimeo 動画","リンクを挿入","フォントサイズ","フォント","テキストのスタイル","指定なし","タイトル1","タイトル2","タイトル3","タイトル4","引用","コード","挿入","表を挿入","インデント減","インデント増","特殊文字を選択","特殊文字を挿入","書式を貼付け","編集モード切替え","マージン","上","右","下","左","スタイル","クラス","配置","右寄せ","中央寄せ","左寄せ","指定なし","ソース","タイトル","代替テキスト","リンク","新しいタブで開く","画像","ファイル","高度な設定","画像のプロパティー","キャンセル","確定","File Browser","Error on load list","Error on load folders","Are you sure?","Enter Directory name","Create directory","type name","ここに画像をドロップ","ここにファイルをドロップ","or クリック","代替テキスト","アップロード","ブラウズ","背景","文字","上","中央","下","左に列を挿入","右に列を挿入","上に行を挿入","下に行を挿入","表を削除","行を削除","列を削除","セルを空にする","文字数: %d","単語数: %d","取り消し線","下線","上付き文字","下付き文字","切り取り","すべて選択","Pause","検索","置換","交換","貼付け","選択した内容を貼付け","source","bold","italic","brush","link","undo","redo","table","image","eraser","paragraph","fontsize","video","font","about","print","underline","strikethrough","indent","outdent","fullsize","shrink","分割線","箇条書き","番号付きリスト","切り取り","すべて選択","埋め込みコード","リンクを開く","リンクを編集","No follow","リンク解除","更新","鉛筆","サイトを確認","URL","編集","水平方向の配置","Filter","Sort by changed","Sort by name","Sort by size","Add folder","リセット","保存","Save as ...","リサイズ","Crop","幅","高さ","縦横比を保持","はい","いいえ","移除","選択","選択: %s","垂直方向の配置","分割","セルの結合","列を追加","行を追加",null,"削除","セルの分割（垂直方向）","セルの分割（水平方向）","境界線","HTMLコードを保持しますか？","HTMLで貼付け","HTMLを保持","HTMLをテキストにする","テキストだけ","You can only edit your own images. Download this image on the host?","The image has been successfully uploaded to the host!","パレット","There are no files","Rename","Enter new name","プレビュー","ダウンロード","貼り付け","お使いのブラウザはクリップボードを使用できません","コピー","copy","角の丸み","全て表示","適用","まだこの分野","を入力してくださいウェブアドレス","デフォルト","白丸","黒丸","四角","見","探前","由来","The pasted content is coming from a Microsoft Word/Excel document. Do you want to keep the format or clean it up?","Word Paste Detected","Clean","クラス名を挿入","カスタムサイズ変更のためのAltキーを押します"]

/***/ }),

/***/ 11399:
/***/ (function(module) {

module.exports["default"] = ["Type something","About Jodit","Jodit Editor","Jodit User's Guide","contains detailed help for using","For information about the license, please go to our website:","Buy full version","Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.","Anchor","Open in new tab","Open in fullsize","Clear Formatting","Fill color or set the text color","Redo","Undo","Bold","Italic","Insert Unordered List","Insert Ordered List","Align Center","Align Justify","Align Left","Align Right","Insert Horizontal Line","Insert Image","Insert file","Insert youtube/vimeo video","Insert link","Font size","Font family","Insert format block","Normal","Heading 1","Heading 2","Heading 3","Heading 4","Quote","Code","Insert","Insert table","Decrease Indent","Increase Indent","Select Special Character","Insert Special Character","Paint format","Change mode","Margins","top","right","bottom","left","Styles","Classes","Align","Right","Center","Left","--Not Set--","Src","Title","Alternative","Link","Open link in new tab","Image","file","Advanced","Image properties","Cancel","Ok","File Browser","Error on load list","Error on load folders","Are you sure?","Enter Directory name","Create directory","type name","Drop image","Drop file","or click","Alternative text","Upload","Browse","Background","Text","Top","Middle","Bottom","Insert column before","Insert column after","Insert row above","Insert row below","Delete table","Delete row","Delete column","Empty cell","Chars: %d","Words: %d","Strike through","Underline","superscript","subscript","Cut selection","Select all","Break","Search for","Replace with","Replace","Paste","Choose Content to Paste","source","bold","italic","brush","link","undo","redo","table","image","eraser","paragraph","fontsize","video","font","about","print","underline","strikethrough","indent","outdent","fullsize","shrink","hr","ul","ol","cut","selectall","Embed code","Open link","Edit link","No follow","Unlink","Update","pencil","Eye"," URL","Edit","Horizontal align","Filter","Sort by changed","Sort by name","Sort by size","Add folder","Reset","Save","Save as ...","Resize","Crop","Width","Height","Keep Aspect Ratio","Yes","No","Remove","Select","Select %s","Vertical align","Split","Merge","Add column","Add row","License: %s","Delete","Split vertical","Split horizontal","Border","Your code is similar to HTML. Keep as HTML?","Paste as HTML","Keep","Insert as Text","Insert only Text","You can only edit your own images. Download this image on the host?","The image has been successfully uploaded to the host!","palette","There are no files","Rename","Enter new name","preview","download","Paste from clipboard","Your browser doesn't support direct access to the clipboard.","Copy selection","copy","Border radius","Show all","Apply","Please fill out this field","Please enter a web address","Default","Circle","Dot","Quadrate","Find","Find Previous","Find Next","The pasted content is coming from a Microsoft Word/Excel document. Do you want to keep the format or clean it up?","Word Paste Detected","Clean","Insert className","Press Alt for custom resizing"]

/***/ }),

/***/ 37289:
/***/ (function(module) {

module.exports["default"] = ["무엇이든 입력하세요","Jodit에 대하여","Jodit Editor","Jodit 사용자 안내서","자세한 도움말이 들어있어요","라이센스에 관해서는 Jodit 웹 사이트를 방문해주세요：","풀 버전 구입하기","© XDSoft.net - Chupurnov Valeriy. 에게 저작권과 모든 권리가 있습니다.","Anchor","새 탭에서 열기","전체 크기로 보기","서식 지우기","글씨 색상","재실행","실행 취소","굵게","기울임","글머리 목록","번호 목록","가운데 정렬","양쪽 정렬","왼쪽 정렬","오른쪽 정렬","수평 구분선 넣기","이미지 넣기","파일 넣기","Youtube/Vimeo 동영상","링크 넣기","글꼴 크기","글꼴","블록 요소 넣기","일반 텍스트","제목 1","제목 2","제목 3","제목 4","인용","코드","붙여 넣기","테이블","들여쓰기 감소","들여쓰기 증가","특수문자 선택","특수문자 입력","페인트 형식","편집모드 변경","마진","위","오른쪽","아래","왼쪽","스타일","클래스","정렬","오른쪽으로","가운데로","왼쪽으로","--지정 안 함--","경로(src)","제목","대체 텍스트(alt)","링크","새 탭에서 열기",null,"파일","고급","이미지 속성","취소","확인","파일 탐색기","목록 불러오기 에러","폴더 불러오기","정말 진행할까요?","디렉토리 이름 입력","디렉토리 생성","이름 입력","이미지 드래그","파일 드래그","혹은 클릭","대체 텍스트","업로드","탐색","배경","텍스트","위","중앙","아래","이전 열에 삽입","다음 열에 삽입","위 행에 삽입","아래 행에 삽입","테이블 삭제","행 삭제","열 삭제","빈 셀","문자수: %d","단어수: %d","취소선","밑줄","윗첨자","아래첨자","선택 잘라내기","모두 선택","구분자","검색","대체하기","대체","붙여넣기","붙여넣을 내용 선택","HTML 소스","볼드","이탤릭","브러시","링크","실행 취소","재실행","테이블","이미지","지우개","문단","글꼴 크기","비디오","글꼴","편집기 정보","프린트","밑줄","취소선","들여쓰기","내어쓰기","전체 화면","일반 화면","구분선","글머리 목록","번호 목록","잘라내기","모두 선택","Embed 코드","링크 열기","링크 편집","No follow","링크 제거","갱신","연필","사이트 확인","URL","편집","수평 정렬","필터","변경일 정렬","이름 정렬","크기 정렬","새 폴더","초기화","저장","새로 저장하기 ...","리사이즈","크롭","가로 길이","세로 높이","비율 유지하기","네","아니오","제거","선택","선택: %s","수직 정렬","분할","셀 병합","열 추가","행 추가","라이센스: %s","삭제","세로 셀 분할","가로 셀 분할","외곽선","HTML 코드로 감지했어요. 코드인채로 붙여넣을까요?","HTML로 붙여넣기","원본 유지","텍스트로 넣기","텍스트만 넣기","외부 이미지는 편집할 수 없어요. 외부 이미지를 다운로드 할까요?","이미지를 무사히 업로드 했어요!","팔레트","파일이 없어요","이름 변경","새 이름 입력","미리보기","다운로드","클립보드 붙여넣기","사용중인 브라우저가 클립보드 접근을 지원하지 않아요.","선택 복사","복사","둥근 테두리","모두 보기","적용","이 항목을 입력해주세요!","웹 URL을 입력해주세요.","기본","원","점","정사각형","찾기","이전 찾기","다음 찾기","Microsoft Word/Excel 문서로 감지했어요. 서식을 유지한채로 붙여넣을까요?","Word 붙여넣기 감지","지우기","className 입력","사용자 지정 크기 조정에 대 한 고도 누르십시오"]

/***/ }),

/***/ 26501:
/***/ (function(module) {

module.exports["default"] = ["Бичээд үзээрэй","Jodit-ын талаар ","Jodit програм","Jodit гарын авлага","хэрэглээний талаар дэлгэрэнгүй мэдээллийг агуулна","Лицензийн мэдээллийг манай вэб хуудаснаас авна уу:","Бүрэн хувилбар худалдан авах","Зохиогчийн эрх хамгаалагдсан © XDSoft.net - Chupurnov Valeriy. Бүх эрхийг эзэмшинэ.","Холбоо барих","Шинэ табаар нээх","Бүтэн дэлгэцээр нээх","Форматыг арилгах","Өнгөөр будах эсвэл текстийн өнгө сонгох","Дахих","Буцаах","Тод","Налуу","Тэмдэгт жагсаалт нэмэх","Дугаарт жагсаалт нэмэх","Голлож байрлуулах","Тэгшитгэн байрлуулах","Зүүнд байрлуулах","Баруунд байрлуулах","Хэвтээ зураас нэмэх","Зураг нэмэх","Файл нэмэх","Youtube/Vimeo видео нэмэх","Холбоос нэмэх","Фонтын хэмжээ","Фонтын бүл","Блок нэмэх","Хэвийн","Гарчиг 1","Гарчиг 2","Гарчиг 3","Гарчиг 4","Ишлэл","Код","Оруулах","Хүснэгт оруулах","Доголын зай хасах","Доголын зай нэмэх","Тусгай тэмдэгт сонгох","Тусгай тэмдэгт нэмэх","Зургийн формат","Горим өөрчлөх","Цаасны зай","Дээрээс","Баруунаас","Доороос","Зүүнээс","CSS стиль","CSS анги","Байрлуулах","Баруун","Төв","Зүүн","--Тодорхойгүй--","Эх үүсвэр","Гарчиг","Алтернатив текст","Холбоос","Холбоосыг шинэ хавтсанд нээх","Зураг","Файл","Дэвшилтэт","Зургийн үзүүлэлт","Цуцлах","Ok","Файлын цонх","Жагсаалт татах үед алдаа гарлаа","Хавтас татах үед алдаа гарлаа","Итгэлтэй байна уу?","Хавтсын нэр оруулах","Хавтас үүсгэх","Нэр бичих","Зураг буулгах","Файл буулгах","эсвэл товш","Алтернатив текст","Байршуулах","Үзэх","Арын зураг","Текст","Дээр","Дунд","Доор","Урд нь багана нэмэх","Ард нь багана нэмэх","Дээр нь мөр нэмэх","Доор нь мөр нэмэх","Хүснэгт устгах","Мөр устгах","Багана устгах","Нүд цэвэрлэх","Тэмдэгт: %d","Үг: %d","Дээгүүр зураас","Доогуур зураас","Дээд индекс","Доод индекс","Сонголтыг таслах","Бүгдийг сонго","Мөрийг таслах","Хайх","Үүгээр солих","Солих","Буулгах","Буулгах агуулгаа сонгоно уу","Эх үүсвэр","Тод","Налуу","Будах","Холбоос","Буцаах","Дахих","Хүснэгт","Зураг","Баллуур","Параграф","Фонтын хэмжээ","Видео","Фонт","Тухай","Хэвлэх","Доогуур зураас","Дээгүүр зураас","Догол нэмэх","Догол багасгах","Бүтэн дэлгэц","Багасга","Хаалт","Тэмдэгт жагсаалт","Дугаарласан жагсаалт","Таслах","Бүгдийг сонго","Код оруулах","Холбоос нээх","Холбоос засах","Nofollow özelliği","Холбоос салгах","Шинэчлэх","Засах","Нүд","URL","Засах","Хэвтээ эгнүүлэх","Шүүх","Сүүлд өөрчлөгдсөнөөр жагсаах","Нэрээр жагсаах","Хэмжээгээр жагсаах","Хавтас нэмэх","Буцаах","Хадгалах","Өөрөөр хадгалах","Хэмжээг өөрчил","Тайрах","Өргөн","Өндөр","Харьцааг хадгал","Тийм","Үгүй","Арилга","Сонго","Сонго: %s","Босоо эгнүүлэх","Задлах","Нэгтгэх","Багана нэмэх","Мөр нэмэх",null,"Устгах","Баганаар задлах","Мөрөөр задлах","Хүрээ","Таны код HTML кодтой адил байна. HTML форматаар үргэлжлүүлэх үү?","HTML байдлаар буулгах","Хадгалах","Текст байдлаар нэмэх","Зөвхөн текст оруулах","Та зөвхөн өөрийн зургуудаа янзлах боломжтой. Энэ зургийг өөр лүүгээ татмаар байна уу?","Зургийг хост руу амжилттай хадгалсан","Палет","Энд ямар нэг файл алга","Шинээр нэрлэх","Шинэ нэр оруулна уу","Урьдчилан харах","Татах","Самбараас хуулах ","Энэ вэб хөтчөөс самбарт хандах эрх алга.","Сонголтыг хуул","Хуулах","Хүрээний радиус","Бүгдийг харуулах","Хэрэгжүүл","Энэ талбарыг бөглөнө үү","Вэб хаягаа оруулна уу","Үндсэн","Дугуй","Цэг","Дөрвөлжин","Хайх","Өмнөхийг ол","Дараагийнхийг ол","Буулгасан агуулга Microsoft Word/Excel форматтай байна. Энэ форматыг хэвээр хадгалах уу эсвэл арилгах уу?","Word байдлаар буулгасан байна","Цэвэрлэх","Бүлгийн нэрээ оруулна уу","Хэмжээсийг шинээр өөчрлөхийн тулд Alt товчин дээр дарна уу"]

/***/ }),

/***/ 17084:
/***/ (function(module) {

module.exports["default"] = ["Begin met typen..","Over Jodit","Jodit Editor","Jodit gebruikershandleiding","bevat gedetailleerde informatie voor gebruik.","Voor informatie over de licentie, ga naar onze website:","Volledige versie kopen","Copyright © XDSoft.net - Chupurnov Valeriy. Alle rechten voorbehouden.","Anker","Open in nieuwe tab","Editor in volledig scherm openen","Opmaak verwijderen","Vulkleur of tekstkleur aanpassen","Opnieuw","Ongedaan maken","Vet","Cursief","Geordende list invoegen","Ongeordende lijst invoegen","Centreren","Uitlijnen op volledige breedte","Links uitlijnen","Rechts uitlijnen","Horizontale lijn invoegen","Afbeelding invoegen","Bestand invoegen","Youtube/Vimeo video invoegen","Link toevoegen","Tekstgrootte","Lettertype","Format blok invoegen","Normaal","Koptekst 1","Koptekst 2","Koptekst 3","Koptekst 4","Citaat","Code","Invoegen","Tabel invoegen","Inspringing verkleinen","Inspringing vergroten","Symbool selecteren","Symbool invoegen","Opmaak kopieren","Modus veranderen","Marges","Boven","Rechts","Onder","Links","CSS styles","CSS classes","Uitlijning","Rechts","Gecentreerd","Links","--Leeg--","Src","Titel","Alternatieve tekst","Link","Link in nieuwe tab openen","Afbeelding","Bestand","Geavanceerd","Afbeeldingseigenschappen","Annuleren","OK","Bestandsbrowser","Fout bij het laden van de lijst","Fout bij het laden van de mappenlijst","Weet je het zeker?","Geef de map een naam","Map aanmaken","Type naam","Sleep hier een afbeelding naartoe","Sleep hier een bestand naartoe","of klik","Alternatieve tekst","Uploaden","Bladeren","Achtergrond","Tekst","Boven","Midden","Onder","Kolom invoegen (voor)","Kolom invoegen (na)","Rij invoegen (boven)","Rij invoegen (onder)","Tabel verwijderen","Rij verwijderen","Kolom verwijderen","Cel leegmaken","Tekens: %d","Woorden: %d","Doorstrepen","Onderstrepen","Superscript","Subscript","Selectie knippen","Selecteer alles","Enter","Zoek naar","Vervangen door","Vervangen","Plakken","Kies content om te plakken","Broncode","vet","cursief","kwast","link","ongedaan maken","opnieuw","tabel","afbeelding","gum","paragraaf","lettergrootte","video","lettertype","over","afdrukken","onderstreept","doorgestreept","inspringen","minder inspringen","volledige grootte","kleiner maken","horizontale lijn","lijst","genummerde lijst","knip","alles selecteren","Embed code","link openen","link aanpassen","niet volgen","link verwijderen","Updaten","Om te bewerken","Recensie"," URL","Bewerken","Horizontaal uitlijnen","Filteren","Sorteren op wijzigingsdatum","Sorteren op naam","Sorteren op grootte","Map toevoegen","Herstellen","Opslaan","Opslaan als ...","Grootte aanpassen","Bijknippen","Breedte","Hoogte","Verhouding behouden","Ja","Nee","Verwijderen","Selecteren","Selecteer: %s","Verticaal uitlijnen","Splitsen","Samenvoegen","Kolom toevoegen","Rij toevoegen",null,"Verwijderen","Verticaal splitsen","Horizontaal splitsen","Rand","Deze code lijkt op HTML. Als HTML behouden?","Invoegen als HTML","Origineel behouden","Als tekst invoegen","Als onopgemaakte tekst invoegen","Je kunt alleen je eigen afbeeldingen aanpassen. Deze afbeelding downloaden?","De afbeelding is succesvol geüploadet!","Palette","Er zijn geen bestanden in deze map.","Hongaars","Voer een nieuwe naam in","voorvertoning","Download","Plakken van klembord","Uw browser ondersteunt geen directe toegang tot het klembord.","Selectie kopiëren","kopiëren","Border radius","Toon alle","Toepassing","Vul dit veld","Voer een webadres","Standaard","Cirkel","Dot","Quadrate","Zoeken","Vorige Zoeken","Volgende Zoeken","De geplakte tekst is afkomstig van een Microsoft Word/Excel document. Wil je de opmaak behouden of opschonen?","Word-tekst gedetecteerd","Opschonen","Voeg de klassenaam in","Druk op Alt voor aangepaste grootte"]

/***/ }),

/***/ 96891:
/***/ (function(module) {

module.exports["default"] = ["Napisz coś","O Jodit","Edytor Jodit","Instrukcja Jodit","zawiera szczegółowe informacje dotyczące użytkowania.","Odwiedź naszą stronę, aby uzyskać więcej informacji na temat licencji:","Zakup pełnej wersji","Copyright © XDSoft.net - Chupurnov Valeriy. Wszystkie prawa zastrzeżone.","Kotwica","Otwórz w nowej zakładce","Otwórz edytor w pełnym rozmiarze","Wyczyść formatowanie","Kolor wypełnienia lub ustaw kolor tekstu","Ponów","Cofnij","Pogrubienie","Kursywa","Wstaw listę wypunktowaną","Wstaw listę numeryczną","Wyśrodkuj","Wyjustuj","Wyrównaj do lewej","Wyrównaj do prawej","Wstaw linię poziomą","Wstaw grafikę","Wstaw plik","Wstaw film Youtube/vimeo","Wstaw link","Rozmiar tekstu","Krój czcionki","Wstaw formatowanie","Normalne","Nagłówek 1","Nagłówek 2","Nagłówek 3","Nagłówek 4","Cytat","Kod","Wstaw","Wstaw tabelę","Zmniejsz wcięcie","Zwiększ wcięcie","Wybierz znak specjalny","Wstaw znak specjalny","Malarz formatów","Zmień tryb","Marginesy","Górny","Prawy","Dolny","Levy","Style CSS","Klasy CSS","Wyrównanie","Prawa","środek","Lewa","brak","Źródło","Tytuł","Tekst alternatywny","Link","Otwórz w nowej zakładce","Grafika","Plik","Zaawansowane","Właściwości grafiki","Anuluj","OK","Przeglądarka plików","Błąd ładowania listy plików","Błąd ładowania folderów","Czy jesteś pewien?","Wprowadź nazwę folderu","Utwórz folder","wprowadź nazwę","Upuść plik graficzny","Upuść plik","lub kliknij tu","Tekst alternatywny","Wczytaj","Przeglądaj","Tło","Treść","Góra","Środek","Dół","Wstaw kolumnę przed","Wstaw kolumnę po","Wstaw wiersz przed","Wstaw wiersz po","Usuń tabelę","Usuń wiersz","Usuń kolumnę","Wyczyść komórkę","Znaki: %d","Słowa: %d","Przekreślenie","Podkreślenie","indeks górny","index dolny","Wytnij zaznaczenie","Wybierz wszystko","Przerwa","Szukaj","Zamień na","Wymienić","Wklej","Wybierz zawartość do wklejenia","HTML","pogrubienie","kursywa","pędzel","link","cofnij","ponów","tabela","grafika","wyczyść","akapit","rozmiar czcionki","wideo","czcionka","O programie","drukuj","podkreślenie","przekreślenie","wcięcie","wycięcie","pełen rozmiar","przytnij","linia pozioma","lista","lista numerowana","wytnij","zaznacz wszystko","Wstaw kod","otwórz link","edytuj link","Atrybut no-follow","Usuń link","Aktualizuj","edytuj","szukaj","URL","Edytuj","Wyrównywanie w poziomie","Filtruj","Sortuj wg zmiany","Sortuj wg nazwy","Sortuj wg rozmiaru","Dodaj folder","wyczyść","zapisz","zapisz jako","Zmień rozmiar","Przytnij","Szerokość","Wysokość","Zachowaj proporcje","Tak","Nie","Usuń","Wybierz","Wybierz: %s","Wyrównywanie w pionie","Podziel","Scal","Dodaj kolumnę","Dodaj wiersz",null,"Usuń","Podziel w pionie","Podziel w poziomie","Obramowanie","Twój kod wygląda jak HTML. Zachować HTML?","Wkleić jako HTML?","Oryginalny tekst","Wstaw jako tekst","Wstaw tylko treść","Możesz edytować tylko swoje grafiki. Czy chcesz pobrać tą grafikę?","Grafika została pomyślnienie dodana na serwer","Paleta","Brak plików.","zmień nazwę","Wprowadź nową nazwę","podgląd","pobierz","Wklej ze schowka","Twoja przeglądarka nie obsługuje schowka","Kopiuj zaznaczenie","kopiuj","Zaokrąglenie krawędzi","Pokaż wszystkie","Zastosuj","Proszę wypełnić to pole","Proszę, wpisz adres sieci web","Domyślnie","Koło","Punkt","Kwadrat","Znaleźć","Znaleźć Poprzednie","Znajdź Dalej","Wklejany tekst pochodzi z dokumentu Microsoft Word/Excel. Chcesz zachować ten format czy wyczyścić go? ","Wykryto tekst w formacie Word","Wyczyść","Wstaw nazwę zajęć","Naciśnij Alt, aby zmienić rozmiar"]

/***/ }),

/***/ 31211:
/***/ (function(module) {

module.exports["default"] = ["Escreva algo...","Sobre o Jodit","Editor Jodit","Guia de usuário Jodit","contém ajuda detalhada para o uso.","Para informação sobre a licença, por favor visite nosso site:","Compre a versão completa","Copyright © XDSoft.net - Chupurnov Valeriy. Todos os direitos reservados.","Link","Abrir em nova aba","Abrir editor em tela cheia","Limpar formatação","Cor de preenchimento ou cor do texto","Refazer","Desfazer","Negrito","Itálico","Inserir lista não ordenada","Inserir lista ordenada","Centralizar","Justificar","Alinhar à Esquerda","Alinhar à Direita","Inserir linha horizontal","Inserir imagem","Inserir arquivo","Inserir vídeo do Youtube/vimeo","Inserir link","Tamanho da letra","Fonte","Inserir bloco","Normal","Cabeçalho 1","Cabeçalho 2","Cabeçalho 3","Cabeçalho 4","Citação","Código","Inserir","Inserir tabela","Diminuir recuo","Aumentar recuo","Selecionar caractere especial","Inserir caractere especial","Copiar formato","Mudar modo","Margens","cima","direta","baixo","esquerda","Estilos CSS","Classes CSS","Alinhamento","Direita","Centro","Esquerda","--Não Estabelecido--","Fonte","Título","Texto Alternativo","Link","Abrir link em nova aba","Imagem","Arquivo","Avançado","Propriedades da imagem","Cancelar","Ok","Procurar arquivo","Erro ao carregar a lista","Erro ao carregar as pastas","Você tem certeza?","Escreva o nome da pasta","Criar pasta","Escreva seu nome","Soltar imagem","Soltar arquivo","ou clique","Texto alternativo","Upload","Explorar","Fundo","Texto","Cima","Meio","Baixo","Inserir coluna antes","Inserir coluna depois","Inserir linha acima","Inserir linha abaixo","Excluir tabela","Excluir linha","Excluir coluna","Limpar célula","Caracteres: %d","Palavras: %d","Tachado","Sublinhar","sobrescrito","subscrito","Cortar seleção","Selecionar tudo","Pausa","Procurar por","Substituir com","Substituir","Colar","Escolher conteúdo para colar","HTML","negrito","itálico","pincel","link","desfazer","refazer","tabela","imagem","apagar","parágrafo","tamanho da letra","vídeo","fonte","Sobre de","Imprimir","sublinhar","tachado","recuar","diminuir recuo","Tamanho completo","diminuir","linha horizontal","lista não ordenada","lista ordenada","Cortar","Selecionar tudo","Incluir código","Abrir link","Editar link","Não siga","Remover link","Atualizar","Editar","Visualizar","URL","Editar","Alinhamento horizontal","filtrar","Ordenar por modificação","Ordenar por nome","Ordenar por tamanho","Adicionar pasta","Resetar","Salvar","Salvar como...","Redimensionar","Recortar","Largura","Altura","Manter a proporção","Sim","Não","Remover","Selecionar","Selecionar: %s","Alinhamento vertical","Dividir","Mesclar","Adicionar coluna","Adicionar linha",null,"Excluir","Dividir vertical","Dividir horizontal","Borda","Seu código é similar ao HTML. Manter como HTML?","Colar como HTML?","Manter","Inserir como Texto","Inserir somente o Texto","Você só pode editar suas próprias imagens. Baixar essa imagem pro servidor?","A imagem foi enviada com sucesso para o servidor!","Palette","Não há arquivos nesse diretório.","Húngara","Digite um novo nome","preview","Baixar","Colar da área de transferência","O seu navegador não oferece suporte a acesso direto para a área de transferência.","Selecção de cópia","cópia","Border radius","Mostrar todos os","Aplicar","Por favor, preencha este campo","Por favor introduza um endereço web","Padrão","Círculo","Ponto","Quadro","Encontrar","Encontrar Anteriores","Localizar Próxima","O conteúdo colado veio de um documento Microsoft Word/Excel. Você deseja manter o formato ou limpa-lo?","Colado do Word Detectado","Limpar","Insira o nome da classe","Pressione Alt para redimensionamento personalizado"]

/***/ }),

/***/ 31109:
/***/ (function(module) {

module.exports["default"] = ["Напишите что-либо","О Jodit","Редактор Jodit","Jodit Руководство пользователя","содержит детальную информацию по использованию","Для получения сведений о лицензии , пожалуйста, перейдите на наш сайт:","Купить полную версию","Авторские права © XDSoft.net - Чупурнов Валерий. Все права защищены.","Анкор","Открывать ссылку в новой вкладке","Открыть редактор в полном размере","Очистить форматирование","Цвет заливки или цвет текста","Повтор","Отмена","Жирный","Наклонный","Вставка маркированного списка","Вставить нумерованный список","Выровнять по центру","Выровнять по ширине","Выровнять по левому краю","Выровнять по правому краю","Вставить горизонтальную линию","Вставить изображение","Вставить файл","Вставьте видео","Вставить ссылку","Размер шрифта","Шрифт","Вставить блочный элемент","Нормальный текст","Заголовок 1","Заголовок 2","Заголовок 3","Заголовок 4","Цитата","Код","Вставить","Вставить таблицу","Уменьшить отступ","Увеличить отступ","Выберите специальный символ","Вставить специальный символ","Формат краски","Источник","Отступы","сверху","справа","снизу","слева","Стили","Классы","Выравнивание","По правому краю","По центру","По левому краю","--не устанавливать--","src","Заголовок","Альтернативный текст (alt)","Ссылка","Открывать ссылку в новом окне",null,"Файл","Расширенные","Свойства изображения","Отмена","Ок","Браузер файлов","Ошибка при загрузке списка изображений","Ошибка при загрузке списка директорий","Вы уверены?","Введите название директории","Создать директорию","введите название","Перетащите сюда изображение","Перетащите сюда файл","или нажмите","Альтернативный текст","Загрузка","Сервер","Фон","Текст"," К верху","По середине","К низу","Вставить столбец до","Вставить столбец после","Вставить ряд выше","Вставить ряд ниже","Удалить таблицу","Удалять ряд","Удалить столбец","Очистить ячейку","Символов: %d","Слов: %d","Перечеркнуть","Подчеркивание","верхний индекс","индекс","Вырезать","Выделить все","Разделитель","Найти","Заменить на","Заменить","Вставить","Выбрать контент для вставки","HTML","жирный","курсив","заливка","ссылка","отменить","повторить","таблица","Изображение","очистить","параграф","размер шрифта","видео","шрифт","о редакторе","печать","подчеркнутый","перечеркнутый","отступ","выступ","во весь экран","обычный размер","линия","Список","Нумерованный список","Вырезать","Выделить все","Код","Открыть ссылку","Редактировать ссылку","Атрибут nofollow","Убрать ссылку","Обновить","Редактировать","Просмотр","URL","Редактировать","Горизонтальное выравнивание","Фильтр","По изменению","По имени","По размеру","Добавить папку","Восстановить","Сохранить","Сохранить как","Изменить размер","Обрезать размер","Ширина","Высота","Сохранять пропорции","Да","Нет","Удалить","Выделить","Выделить: %s","Вертикальное выравнивание","Разделить","Объединить в одну","Добавить столбец","Добавить строку","Лицензия: %s","Удалить","Разделить по вертикали","Разделить по горизонтали","Рамка","Ваш текст, который вы пытаетесь вставить похож на HTML. Вставить его как HTML?","Вставить как HTML?","Сохранить оригинал","Вставить как текст","Вставить только текст","Вы можете редактировать только свои собственные изображения. Загрузить это изображение на ваш сервер?","Изображение успешно загружено на сервер!","палитра","В данном каталоге нет файлов","Переименовать","Введите новое имя","Предпросмотр","Скачать","Вставить из буфера обмена","Ваш браузер не поддерживает прямой доступ к буферу обмена.","Скопировать выделенное","копия","Радиус границы","Показать все","Применить","Пожалуйста, заполните это поле","Пожалуйста, введите веб-адрес","По умолчанию","Круг","Точка","Квадрат","Найти","Найти Предыдущие","Найти Далее","Контент который вы вставляете поступает из документа Microsoft Word / Excel. Вы хотите сохранить формат или очистить его?","Возможно это фрагмент Word или Excel","Почистить","Вставить название класса","Нажмите Alt для изменения пользовательского размера"]

/***/ }),

/***/ 79375:
/***/ (function(module) {

module.exports["default"] = ["Bir şeyler yaz","Jodit Hakkında","Jodit Editor","Jodit Kullanım Kılavuzu","kullanım için detaylı bilgiler içerir","Lisans hakkında bilgi için lütfen web sitemize gidin:","Tam versiyonunu satın al","Copyright © XDSoft.net - Chupurnov Valeriy. Tüm hakları saklıdır.","Bağlantı","Yeni sekmede aç","Editörü tam ekranda aç","Stili temizle","Renk doldur veya yazı rengi seç","Yinele","Geri Al","Kalın","İtalik","Sırasız Liste Ekle","Sıralı Liste Ekle","Ortala","Kenarlara Yasla","Sola Yasla","Sağa Yasla","Yatay Çizgi Ekle","Resim Ekle","Dosya Ekle","Youtube/Vimeo Videosu Ekle","Bağlantı Ekle","Font Boyutu","Font Ailesi","Blok Ekle","Normal","Başlık 1","Başlık 2","Başlık 3","Başlık 4","Alıntı","Kod","Ekle","Tablo Ekle","Girintiyi Azalt","Girintiyi Arttır","Özel Karakter Seç","Özel Karakter Ekle","Resim Biçimi","Mod Değiştir","Boşluklar","Üst","Sağ","Alt","Sol","CSS Stilleri","CSS Sınıfları","Hizalama","Sağ","Ortalı","Sol","Belirsiz","Kaynak","Başlık","Alternatif Yazı","Link","Bağlantıyı yeni sekmede aç","Resim","Dosya","Gelişmiş","Resim özellikleri","İptal","Tamam","Dosya Listeleyici","Liste yüklenirken hata oluştu","Klasörler yüklenirken hata oluştur","Emin misiniz?","Dizin yolu giriniz","Dizin oluştur","İsim yaz","Resim bırak","Dosya bırak","veya tıkla","Alternatif yazı","Yükle","Gözat","Arka plan","Yazı","Üst","Orta","Aşağı","Öncesine kolon ekle","Sonrasına kolon ekle","Üstüne satır ekle","Altına satır ekle","Tabloyu sil","Satırı sil","Kolonu sil","Hücreyi temizle","Harfler: %d","Kelimeler: %d","Üstü çizili","Alt çizgi","Üst yazı","Alt yazı","Seçilimi kes","Tümünü seç","Satır sonu","Ara","Şununla değiştir","Değiştir","Yapıştır","Yapıştırılacak içerik seç","Kaynak","Kalın","italik","Fırça","Bağlantı","Geri al","Yinele","Tablo","Resim","Silgi","Paragraf","Font boyutu","Video","Font","Hakkında","Yazdır","Alt çizgi","Üstü çizili","Girinti","Çıkıntı","Tam ekran","Küçült","Ayraç","Sırasız liste","Sıralı liste","Kes","Tümünü seç","Kod ekle","Bağlantıyı aç","Bağlantıyı düzenle","Nofollow özelliği","Bağlantıyı kaldır","Güncelle","Düzenlemek için","Yorumu","URL","Düzenle","Yatay hizala","Filtre","Değişime göre sırala","İsme göre sırala","Boyuta göre sırala","Klasör ekle","Sıfırla","Kaydet","Farklı kaydet","Boyutlandır","Kırp","Genişlik","Yükseklik","En boy oranını koru","Evet","Hayır","Sil","Seç","Seç: %s","Dikey hizala","Ayır","Birleştir","Kolon ekle","Satır ekle",null,"Sil","Dikey ayır","Yatay ayır","Kenarlık","Kodunuz HTML koduna benziyor. HTML olarak devam etmek ister misiniz?","HTML olarak yapıştır","Sakla","Yazı olarak ekle","Sadece yazıyı ekle","Sadece kendi resimlerinizi düzenleyebilirsiniz. Bu görseli kendi hostunuza indirmek ister misiniz?","Görsel başarıyla hostunuza yüklendi","Palet","Bu dizinde dosya yok","Yeniden isimlendir","Yeni isim girin","Ön izleme","İndir","Panodan yapıştır ","Tarayıcınız panoya doğrudan erişimi desteklemiyor.","Seçimi kopyala","Kopyala","Sınır yarıçapı","Tümünü Göster","Uygula","Lütfen bu alanı doldurun","Lütfen bir web adresi girin","Varsayılan","Daire","Nokta","Kare","Bul","Öncekini Bul","Sonrakini Bul","Der Inhalt, den Sie einfügen, stammt aus einem Microsoft Word / Excel-Dokument. Möchten Sie das Format erhalten oder löschen?","Word biçiminde yapıştırma algılandı","Temizle","Sınıf adı girin","Özel yeniden boyutlandırma için Alt tuşuna basın"]

/***/ }),

/***/ 21042:
/***/ (function(module) {

module.exports["default"] = ["输入一些内容","关于Jodit","Jodit Editor","开发者指南","使用帮助","有关许可证的信息，请访问我们的网站：","购买完整版本","Copyright © XDSoft.net - Chupurnov Valeriy. 版权所有","Anchor","在新窗口打开","全屏编辑","清除样式","颜色","重做","撤销","粗体","斜体","符号列表","编号","居中","对齐文本","左对齐","右对齐","分割线","图片","文件","视频","链接","字号","字体","格式块","默认","标题1","标题2","标题3","标题4","引用","代码","插入","表格","减少缩进","增加缩进","选择特殊符号","特殊符号","格式复制","改变模式","外边距（Margins）","top","right","bottom","left","样式","Classes","对齐方式","居右","居中","居左","无","Src","Title","Alternative","Link","在新窗口打开链接","图片","file","高级","图片属性","取消","确定","文件管理","加载list错误","加载folders错误","你确定吗？","输入路径","创建路径","type name","拖动图片到此","拖动文件到此","或点击","Alternative text","上传","浏览","背景色","文字","顶部","中间","底部","在之前插入列","在之后插入列","在之前插入行","在之后插入行","删除表格","删除行","删除列","清除内容","字符数: %d","单词数: %d","删除线","下划线","上标","下标","剪切","全选","Break","查找","替换为","替换","粘贴","选择内容并粘贴","源码","粗体","斜体","颜色","链接","撤销","重做","表格","图片","橡皮擦","段落","字号","视频","字体","关于","打印","下划线","上出现","增加缩进","减少缩进","全屏","收缩","分割线","无序列表","顺序列表","剪切","全选","嵌入代码","打开链接","编辑链接","No follow","取消链接","更新","铅笔","预览","URL","编辑","水平对齐","筛选","修改时间排序","名称排序","大小排序","新建文件夹","重置","保存","保存为","调整大小","剪切","宽","高","保持长宽比","是","不","移除","选择","选择: %s","垂直对齐","拆分","合并","添加列","添加行",null,"删除","垂直拆分","水平拆分","边框","你粘贴的文本是一段html代码，是否保留源格式","html粘贴","保留源格式","把html代码视为普通文本","只保留文本","你只能编辑你自己的图片。Download this image on the host?","图片上传成功","调色板","此目录中沒有文件。","重命名","输入新名称","预览","下载","粘贴从剪贴板","你浏览器不支持直接访问的剪贴板。","复制选中内容","复制","边界半径","显示所有","应用","请填写这个字段","请输入一个网址","默认","圆圈","点","方形","搜索","查找上一个","查找下一个","正在粘贴 Word/Excel 的文本，是否保留源格式？","文本粘贴","匹配目标格式","插入班级名称","按Alt自定义调整大小"]

/***/ }),

/***/ 73895:
/***/ (function(module) {

module.exports["default"] = ["輸入一些內容","關於Jodit","Jodit Editor","開發者指南","使用幫助","有關許可證的信息，請訪問我們的網站：","購買完整版本","Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.","Anchor","在新窗口打開","全屏編輯","清除樣式","顏色","重做","撤銷","粗體","斜體","符號列表","編號","居中","對齊文本","左對齊","右對齊","分割線","圖片","文件","youtube/vimeo 影片","鏈接","字號","字體","格式塊","文本","標題1","標題2","標題3","標題4","引用","代碼","插入","表格","減少縮進","增加縮進","選擇特殊符號","特殊符號","格式複製","改變模式","外邊距（Margins）","top","right","bottom","left","樣式","Classes","對齊方式","居右","居中","居左","無","Src","Title","替代","Link","在新窗口打開鏈接","圖片","file","高級","圖片屬性","取消","確定","文件管理","加載list錯誤","加載folders錯誤","你確定嗎？","輸入路徑","創建路徑","type name","拖動圖片到此","拖動文件到此","或點擊","替代文字","上傳","瀏覽","背景色","文字","頂部","中間","底部","在之前插入列","在之後插入列","在之前插入行","在之後插入行","刪除表格","刪除行","刪除列","清除內容","字符數: %d","單詞數: %d","刪除線","下劃線","上標","下標","剪切","全選","Pause","查找","替換為","แทนที่","黏貼","選擇內容並黏貼","源碼","粗體","斜體","顏色","鏈接","撤銷","重做","表格","圖片","橡皮擦","段落","字號","影片","字體","關於","打印","下劃線","上出現","增加縮進","減少縮進","全屏","收縮","分割線","無序列表","順序列表","剪切","全選","嵌入代碼","打開鏈接","編輯鏈接","No follow","取消連結","更新","鉛筆","回顧","URL",null,"水平對齊","篩選","修改時間排序","名稱排序","大小排序","新建文件夾","重置","保存","保存為","調整大小","Crop","寬","高","保存長寬比","是","不","移除","選擇","選擇: %s","垂直對齊","拆分","合併","添加列","添加行",null,"刪除","垂直拆分","水平拆分","邊框","你黏貼的文本是一段html代碼，是否保留源格式","html黏貼","保留源格式","把html代碼視為普通文本","只保留文本","你只能編輯你自己的圖片。是否下載此圖片到本地?","圖片上傳成功","調色板","此目錄中沒有文件。","重命名","輸入新名稱","預覽","下載","從剪貼板貼上","瀏覽器無法存取剪贴板。","複製已選取項目","複製","邊框圓角","顯示所有","應用","ได้โปรดกรอกช่องข้อมูลนี้","โปรดเติมที่อยู่บนเว็บ","ค่าปริยาย","วงกลม","จุด","Quadrate","ค้นหา","ค้นหาก่อนหน้านี้","ค้นหาถัดไป","正在黏貼 Word/Excel 的文本，是否保留源格式？","文本黏貼","匹配目標格式","ใส่ชื่อคลาส","กดอัลท์สำหรับการปรับขนาดที่กำหนดเอง"]

/***/ }),

/***/ 3610:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M621 1280h595v-595zm-45-45l595-595h-595v595zm1152 77v192q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-224h-864q-14 0-23-9t-9-23v-864h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224v-224q0-14 9-23t23-9h192q14 0 23 9t9 23v224h851l246-247q10-9 23-9t23 9q9 10 9 23t-9 23l-247 246v851h224q14 0 23 9t9 23z\"/> </svg>"

/***/ }),

/***/ 56170:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 24 24\"> <g transform=\"translate(-251.000000, -443.000000)\"> <g transform=\"translate(215.000000, 119.000000)\"/> <path d=\"M252,448 L256,448 L256,444 L252,444 L252,448 Z M257,448 L269,448 L269,446 L257,446 L257,448 Z M257,464 L269,464 L269,462 L257,462 L257,464 Z M270,444 L270,448 L274,448 L274,444 L270,444 Z M252,462 L252,466 L256,466 L256,462 L252,462 Z M270,462 L270,466 L274,466 L274,462 L270,462 Z M254,461 L256,461 L256,449 L254,449 L254,461 Z M270,461 L272,461 L272,449 L270,449 L270,461 Z\"/> </g> </svg>"

/***/ }),

/***/ 95331:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' x=\"0px\" y=\"0px\" viewBox=\"0 0 459 459\"> <g> <path d=\"M229.5,0C102,0,0,102,0,229.5S102,459,229.5,459c20.4,0,38.25-17.85,38.25-38.25c0-10.2-2.55-17.85-10.2-25.5 c-5.1-7.65-10.2-15.3-10.2-25.5c0-20.4,17.851-38.25,38.25-38.25h45.9c71.4,0,127.5-56.1,127.5-127.5C459,91.8,357,0,229.5,0z M89.25,229.5c-20.4,0-38.25-17.85-38.25-38.25S68.85,153,89.25,153s38.25,17.85,38.25,38.25S109.65,229.5,89.25,229.5z M165.75,127.5c-20.4,0-38.25-17.85-38.25-38.25S145.35,51,165.75,51S204,68.85,204,89.25S186.15,127.5,165.75,127.5z M293.25,127.5c-20.4,0-38.25-17.85-38.25-38.25S272.85,51,293.25,51s38.25,17.85,38.25,38.25S313.65,127.5,293.25,127.5z M369.75,229.5c-20.4,0-38.25-17.85-38.25-38.25S349.35,153,369.75,153S408,170.85,408,191.25S390.15,229.5,369.75,229.5z\" /> </g> </svg>"

/***/ }),

/***/ 84279:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M1088 1256v240q0 16-12 28t-28 12h-240q-16 0-28-12t-12-28v-240q0-16 12-28t28-12h240q16 0 28 12t12 28zm316-600q0 54-15.5 101t-35 76.5-55 59.5-57.5 43.5-61 35.5q-41 23-68.5 65t-27.5 67q0 17-12 32.5t-28 15.5h-240q-15 0-25.5-18.5t-10.5-37.5v-45q0-83 65-156.5t143-108.5q59-27 84-56t25-76q0-42-46.5-74t-107.5-32q-65 0-108 29-35 25-107 115-13 16-31 16-12 0-25-8l-164-125q-13-10-15.5-25t5.5-28q160-266 464-266 80 0 161 31t146 83 106 127.5 41 158.5z\"/> </svg>"

/***/ }),

/***/ 11257:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 128 128\" xml:space=\"preserve\"> <polygon points=\"112.4560547,23.3203125 112.4560547,75.8154297 31.4853516,75.8154297 31.4853516,61.953125 16.0131836,72.6357422 0.5410156,83.3164063 16.0131836,93.9990234 31.4853516,104.6796875 31.4853516,90.8183594 112.4560547,90.8183594 112.4560547,90.8339844 127.4589844,90.8339844 127.4589844,23.3203125\"/> </svg>"

/***/ }),

/***/ 25141:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M747 1521q74 32 140 32 376 0 376-335 0-114-41-180-27-44-61.5-74t-67.5-46.5-80.5-25-84-10.5-94.5-2q-73 0-101 10 0 53-.5 159t-.5 158q0 8-1 67.5t-.5 96.5 4.5 83.5 12 66.5zm-14-746q42 7 109 7 82 0 143-13t110-44.5 74.5-89.5 25.5-142q0-70-29-122.5t-79-82-108-43.5-124-14q-50 0-130 13 0 50 4 151t4 152q0 27-.5 80t-.5 79q0 46 1 69zm-541 889l2-94q15-4 85-16t106-27q7-12 12.5-27t8.5-33.5 5.5-32.5 3-37.5.5-34v-65.5q0-982-22-1025-4-8-22-14.5t-44.5-11-49.5-7-48.5-4.5-30.5-3l-4-83q98-2 340-11.5t373-9.5q23 0 68.5.5t67.5.5q70 0 136.5 13t128.5 42 108 71 74 104.5 28 137.5q0 52-16.5 95.5t-39 72-64.5 57.5-73 45-84 40q154 35 256.5 134t102.5 248q0 100-35 179.5t-93.5 130.5-138 85.5-163.5 48.5-176 14q-44 0-132-3t-132-3q-106 0-307 11t-231 12z\"/> </svg>"

/***/ }),

/***/ 24557:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M384 1662l17-85q6-2 81.5-21.5t111.5-37.5q28-35 41-101 1-7 62-289t114-543.5 52-296.5v-25q-24-13-54.5-18.5t-69.5-8-58-5.5l19-103q33 2 120 6.5t149.5 7 120.5 2.5q48 0 98.5-2.5t121-7 98.5-6.5q-5 39-19 89-30 10-101.5 28.5t-108.5 33.5q-8 19-14 42.5t-9 40-7.5 45.5-6.5 42q-27 148-87.5 419.5t-77.5 355.5q-2 9-13 58t-20 90-16 83.5-6 57.5l1 18q17 4 185 31-3 44-16 99-11 0-32.5 1.5t-32.5 1.5q-29 0-87-10t-86-10q-138-2-206-2-51 0-143 9t-121 11z\"/> </svg>"

/***/ }),

/***/ 10859:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1760 896q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1728zm-1277-64q-28-35-51-80-48-97-48-188 0-181 134-309 133-127 393-127 50 0 167 19 66 12 177 48 10 38 21 118 14 123 14 183 0 18-5 45l-12 3-84-6-14-2q-50-149-103-205-88-91-210-91-114 0-182 59-67 58-67 146 0 73 66 140t279 129q69 20 173 66 58 28 95 52h-743zm507 256h411q7 39 7 92 0 111-41 212-23 55-71 104-37 35-109 81-80 48-153 66-80 21-203 21-114 0-195-23l-140-40q-57-16-72-28-8-8-8-22v-13q0-108-2-156-1-30 0-68l2-37v-44l102-2q15 34 30 71t22.5 56 12.5 27q35 57 80 94 43 36 105 57 59 22 132 22 64 0 139-27 77-26 122-86 47-61 47-129 0-84-81-157-34-29-137-71z\"/> </svg>"

/***/ }),

/***/ 9813:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1025 1369v167h-248l-159-252-24-42q-8-9-11-21h-3l-9 21q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zm639 217v206h-514l-4-27q-3-45-3-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 80-65 188-65 110 0 178 59.5t68 158.5q0 66-34.5 118.5t-84 86-99.5 62.5-87 63-41 73h232v-80h126z\"/> </svg>"

/***/ }),

/***/ 93395:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1025 1369v167h-248l-159-252-24-42q-8-9-11-21h-3l-9 21q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zm637-679v206h-514l-3-27q-4-28-4-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 83-65 188-65 110 0 178 59.5t68 158.5q0 56-24.5 103t-62 76.5-81.5 58.5-82 50.5-65.5 51.5-30.5 63h232v-80h126z\"/> </svg>"

/***/ }),

/***/ 98213:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M176 223q-37-2-45-4l-3-88q13-1 40-1 60 0 112 4 132 7 166 7 86 0 168-3 116-4 146-5 56 0 86-2l-1 14 2 64v9q-60 9-124 9-60 0-79 25-13 14-13 132 0 13 .5 32.5t.5 25.5l1 229 14 280q6 124 51 202 35 59 96 92 88 47 177 47 104 0 191-28 56-18 99-51 48-36 65-64 36-56 53-114 21-73 21-229 0-79-3.5-128t-11-122.5-13.5-159.5l-4-59q-5-67-24-88-34-35-77-34l-100 2-14-3 2-86h84l205 10q76 3 196-10l18 2q6 38 6 51 0 7-4 31-45 12-84 13-73 11-79 17-15 15-15 41 0 7 1.5 27t1.5 31q8 19 22 396 6 195-15 304-15 76-41 122-38 65-112 123-75 57-182 89-109 33-255 33-167 0-284-46-119-47-179-122-61-76-83-195-16-80-16-237v-333q0-188-17-213-25-36-147-39zm1488 1409v-64q0-14-9-23t-23-9h-1472q-14 0-23 9t-9 23v64q0 14 9 23t23 9h1472q14 0 23-9t9-23z\"/> </svg>"

/***/ }),

/***/ 20026:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M36 4h-24c-2.21 0-4 1.79-4 4v32c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4v-32c0-2.21-1.79-4-4-4zm-24 4h10v16l-5-3-5 3v-16z\"/> </svg>"

/***/ }),

/***/ 66911:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M832 1408l336-384h-768l-336 384h768zm1013-1077q15 34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38 0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38 0 69.5 20.5t47.5 54.5z\"/> </svg>"

/***/ }),

/***/ 50018:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M24.89,6.61H22.31V4.47A2.47,2.47,0,0,0,19.84,2H6.78A2.47,2.47,0,0,0,4.31,4.47V22.92a2.47,2.47,0,0,0,2.47,2.47H9.69V27.2a2.8,2.8,0,0,0,2.8,2.8h12.4a2.8,2.8,0,0,0,2.8-2.8V9.41A2.8,2.8,0,0,0,24.89,6.61ZM6.78,23.52a.61.61,0,0,1-.61-.6V4.47a.61.61,0,0,1,.61-.6H19.84a.61.61,0,0,1,.61.6V6.61h-8a2.8,2.8,0,0,0-2.8,2.8V23.52Zm19,3.68a.94.94,0,0,1-.94.93H12.49a.94.94,0,0,1-.94-.93V9.41a.94.94,0,0,1,.94-.93h12.4a.94.94,0,0,1,.94.93Z\"/> <path d=\"M23.49,13.53h-9.6a.94.94,0,1,0,0,1.87h9.6a.94.94,0,1,0,0-1.87Z\"/> <path d=\"M23.49,17.37h-9.6a.94.94,0,1,0,0,1.87h9.6a.94.94,0,1,0,0-1.87Z\"/> <path d=\"M23.49,21.22h-9.6a.93.93,0,1,0,0,1.86h9.6a.93.93,0,1,0,0-1.86Z\"/> </svg>"

/***/ }),

/***/ 99738:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M960 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zm300 64l507 398q28 20 25 56-5 35-35 51l-128 64q-13 7-29 7-17 0-31-8l-690-387-110 66q-8 4-12 5 14 49 10 97-7 77-56 147.5t-132 123.5q-132 84-277 84-136 0-222-78-90-84-79-207 7-76 56-147t131-124q132-84 278-84 83 0 151 31 9-13 22-22l122-73-122-73q-13-9-22-22-68 31-151 31-146 0-278-84-82-53-131-124t-56-147q-5-59 15.5-113t63.5-93q85-79 222-79 145 0 277 84 83 52 132 123t56 148q4 48-10 97 4 1 12 5l110 66 690-387q14-8 31-8 16 0 29 7l128 64q30 16 35 51 3 36-25 56zm-681-260q46-42 21-108t-106-117q-92-59-192-59-74 0-113 36-46 42-21 108t106 117q92 59 192 59 74 0 113-36zm-85 745q81-51 106-117t-21-108q-39-36-113-36-100 0-192 59-81 51-106 117t21 108q39 36 113 36 100 0 192-59zm178-613l96 58v-11q0-36 33-56l14-8-79-47-26 26q-3 3-10 11t-12 12q-2 2-4 3.5t-3 2.5zm224 224l96 32 736-576-128-64-768 431v113l-160 96 9 8q2 2 7 6 4 4 11 12t11 12l26 26zm704 416l128-64-520-408-177 138q-2 3-13 7z\"/> </svg>"

/***/ }),

/***/ 9185:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"> <path stroke-width=\"0\" d=\"M10.5 20H2a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h1V3l2.03-.4a3 3 0 0 1 5.94 0L13 3v1h1a2 2 0 0 1 2 2v1h-2V6h-1v1H3V6H2v12h5v2h3.5zM8 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm2 4h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2v-8c0-1.1.9-2 2-2zm0 2v8h8v-8h-8z\"/> </svg>"

/***/ }),

/***/ 8619:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 18 18\"> <g fill-rule=\"evenodd\" stroke=\"none\" stroke-width=\"1\"> <g transform=\"translate(-381.000000, -381.000000)\"> <g transform=\"translate(381.000000, 381.000000)\"> <path d=\"M0,2 L2,2 L2,0 C0.9,0 0,0.9 0,2 L0,2 Z M0,10 L2,10 L2,8 L0,8 L0,10 L0,10 Z M4,18 L6,18 L6,16 L4,16 L4,18 L4,18 Z M0,6 L2,6 L2,4 L0,4 L0,6 L0,6 Z M10,0 L8,0 L8,2 L10,2 L10,0 L10,0 Z M16,0 L16,2 L18,2 C18,0.9 17.1,0 16,0 L16,0 Z M2,18 L2,16 L0,16 C0,17.1 0.9,18 2,18 L2,18 Z M0,14 L2,14 L2,12 L0,12 L0,14 L0,14 Z M6,0 L4,0 L4,2 L6,2 L6,0 L6,0 Z M8,18 L10,18 L10,16 L8,16 L8,18 L8,18 Z M16,10 L18,10 L18,8 L16,8 L16,10 L16,10 Z M16,18 C17.1,18 18,17.1 18,16 L16,16 L16,18 L16,18 Z M16,6 L18,6 L18,4 L16,4 L16,6 L16,6 Z M16,14 L18,14 L18,12 L16,12 L16,14 L16,14 Z M12,18 L14,18 L14,16 L12,16 L12,18 L12,18 Z M12,2 L14,2 L14,0 L12,0 L12,2 L12,2 Z M4,14 L14,14 L14,4 L4,4 L4,14 L4,14 Z M6,6 L12,6 L12,12 L6,12 L6,6 L6,6 Z\"/> </g> </g> </g> </svg>"

/***/ }),

/***/ 73894:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M896 1152q0-36-20-69-1-1-15.5-22.5t-25.5-38-25-44-21-50.5q-4-16-21-16t-21 16q-7 23-21 50.5t-25 44-25.5 38-15.5 22.5q-20 33-20 69 0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zm512-128q0 212-150 362t-362 150-362-150-150-362q0-145 81-275 6-9 62.5-90.5t101-151 99.5-178 83-201.5q9-30 34-47t51-17 51.5 17 33.5 47q28 93 83 201.5t99.5 178 101 151 62.5 90.5q81 127 81 275z\"/> </svg>"

/***/ }),

/***/ 83301:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 16 16\"> <path stroke-width=\"0\" d=\"M16 9v-6h-3v-1c0-0.55-0.45-1-1-1h-11c-0.55 0-1 0.45-1 1v3c0 0.55 0.45 1 1 1h11c0.55 0 1-0.45 1-1v-1h2v4h-9v2h-0.5c-0.276 0-0.5 0.224-0.5 0.5v5c0 0.276 0.224 0.5 0.5 0.5h2c0.276 0 0.5-0.224 0.5-0.5v-5c0-0.276-0.224-0.5-0.5-0.5h-0.5v-1h9zM12 3h-11v-1h11v1z\"/> </svg>"

/***/ }),

/***/ 84142:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M789 559l-170 450q33 0 136.5 2t160.5 2q19 0 57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29 31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15 34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 4-.5 13t-.5 13q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0 12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11 2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0 22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58 0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z\"/> </svg>"

/***/ }),

/***/ 57292:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1744 1408q33 0 42 18.5t-11 44.5l-126 162q-20 26-49 26t-49-26l-126-162q-20-26-11-44.5t42-18.5h80v-1024h-80q-33 0-42-18.5t11-44.5l126-162q20-26 49-26t49 26l126 162q20 26 11 44.5t-42 18.5h-80v1024h80zm-1663-1279l54 27q12 5 211 5 44 0 132-2t132-2q36 0 107.5.5t107.5.5h293q6 0 21 .5t20.5 0 16-3 17.5-9 15-17.5l42-1q4 0 14 .5t14 .5q2 112 2 336 0 80-5 109-39 14-68 18-25-44-54-128-3-9-11-48t-14.5-73.5-7.5-35.5q-6-8-12-12.5t-15.5-6-13-2.5-18-.5-16.5.5q-17 0-66.5-.5t-74.5-.5-64 2-71 6q-9 81-8 136 0 94 2 388t2 455q0 16-2.5 71.5t0 91.5 12.5 69q40 21 124 42.5t120 37.5q5 40 5 50 0 14-3 29l-34 1q-76 2-218-8t-207-10q-50 0-151 9t-152 9q-3-51-3-52v-9q17-27 61.5-43t98.5-29 78-27q19-42 19-383 0-101-3-303t-3-303v-117q0-2 .5-15.5t.5-25-1-25.5-3-24-5-14q-11-12-162-12-33 0-93 12t-80 26q-19 13-34 72.5t-31.5 111-42.5 53.5q-42-26-56-44v-383z\"/> </svg>"

/***/ }),

/***/ 18019:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"><path d=\"M1534 189v73q0 29-18.5 61t-42.5 32q-50 0-54 1-26 6-32 31-3 11-3 64v1152q0 25-18 43t-43 18h-108q-25 0-43-18t-18-43v-1218h-143v1218q0 25-17.5 43t-43.5 18h-108q-26 0-43.5-18t-17.5-43v-496q-147-12-245-59-126-58-192-179-64-117-64-259 0-166 88-286 88-118 209-159 111-37 417-37h479q25 0 43 18t18 43z\"/></svg>"

/***/ }),

/***/ 45146:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 24 24\"> <path stroke-width=\"0\" d=\"M22,20.6L3.4,2H8V0H0v8h2V3.4L20.6,22H16v2h8v-8h-2V20.6z M16,0v2h4.7l-6.3,6.3l1.4,1.4L22,3.5V8h2V0H16z M8.3,14.3L2,20.6V16H0v8h8v-2H3.5l6.3-6.3L8.3,14.3z\"/> </svg>"

/***/ }),

/***/ 53576:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M896 960v448q0 26-19 45t-45 19-45-19l-144-144-332 332q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l332-332-144-144q-19-19-19-45t19-45 45-19h448q26 0 45 19t19 45zm755-672q0 13-10 23l-332 332 144 144q19 19 19 45t-19 45-45 19h-448q-26 0-45-19t-19-45v-448q0-26 19-45t45-19 45 19l144 144 332-332q10-10 23-10t23 10l114 114q10 10 10 23z\"/> </svg>"

/***/ }),

/***/ 14655:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1600 736v192q0 40-28 68t-68 28h-1216q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h1216q40 0 68 28t28 68z\"/> </svg>"

/***/ }),

/***/ 53477:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M576 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1024 384v448h-1408v-192l320-320 160 160 512-512zm96-704h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zm160 32v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z\"/> </svg>"

/***/ }),

/***/ 90053:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M352 832q0 14-9 23l-288 288q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-576q0-13 9.5-22.5t22.5-9.5q14 0 23 9l288 288q9 9 9 23zm1440 480v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z\"/> </svg>"

/***/ }),

/***/ 72230:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M384 544v576q0 13-9.5 22.5t-22.5 9.5q-14 0-23-9l-288-288q-9-9-9-23t9-23l288-288q9-9 23-9 13 0 22.5 9.5t9.5 22.5zm1408 768v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z\"/> </svg>"

/***/ }),

/***/ 78321:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 18.151 18.151\" xmlns=\"http://www.w3.org/2000/svg\"> <g> <path stroke-width=\"0\" d=\"M6.237,16.546H3.649V1.604h5.916v5.728c0.474-0.122,0.968-0.194,1.479-0.194 c0.042,0,0.083,0.006,0.125,0.006V0H2.044v18.15h5.934C7.295,17.736,6.704,17.19,6.237,16.546z\"/> <path stroke-width=\"0\" d=\"M11.169,8.275c-2.723,0-4.938,2.215-4.938,4.938s2.215,4.938,4.938,4.938s4.938-2.215,4.938-4.938 S13.892,8.275,11.169,8.275z M11.169,16.81c-1.983,0-3.598-1.612-3.598-3.598c0-1.983,1.614-3.597,3.598-3.597 s3.597,1.613,3.597,3.597C14.766,15.198,13.153,16.81,11.169,16.81z\"/> <polygon stroke-width=\"0\" points=\"11.792,11.073 10.502,11.073 10.502,12.578 9.03,12.578 9.03,13.868 10.502,13.868 10.502,15.352 11.792,15.352 11.792,13.868 13.309,13.868 13.309,12.578 11.792,12.578 \"/> </g> </svg>"

/***/ }),

/***/ 77654:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 432 432\"> <g> <polygon points=\"203.688,96 0,96 0,144 155.688,144 \"/> <polygon points=\"155.719,288 0,288 0,336 203.719,336 \"/> <path d=\"M97.844,230.125c-3.701-3.703-5.856-8.906-5.856-14.141s2.154-10.438,5.856-14.141l9.844-9.844H0v48h107.719 L97.844,230.125z\"/> <polygon points=\"232,176 232,96 112,216 232,336 232,256 432,256 432,176\"/> </g> </svg>"

/***/ }),

/***/ 43371:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 312 312\"> <g transform=\"translate(0.000000,312.000000) scale(0.100000,-0.100000)\" stroke=\"none\"> <path d=\"M50 3109 c0 -7 -11 -22 -25 -35 l-25 -23 0 -961 0 -961 32 -29 32 -30 501 -2 500 -3 3 -502 2 -502 31 -30 31 -31 958 0 958 0 23 25 c13 13 30 25 37 25 9 0 12 199 12 960 0 686 -3 960 -11 960 -6 0 -24 12 -40 28 l-29 27 -503 5 -502 5 -5 502 -5 503 -28 29 c-15 16 -27 34 -27 40 0 8 -274 11 -960 11 -710 0 -960 -3 -960 -11z m1738 -698 l2 -453 -40 -40 c-22 -22 -40 -43 -40 -47 0 -4 36 -42 79 -85 88 -87 82 -87 141 -23 l26 27 455 -2 454 -3 0 -775 0 -775 -775 0 -775 0 -3 450 -2 449 47 48 47 48 -82 80 c-44 44 -84 80 -87 80 -3 0 -25 -18 -48 -40 l-41 -40 -456 2 -455 3 -3 765 c-1 421 0 771 3 778 3 10 164 12 777 10 l773 -3 3 -454z\"/> <path d=\"M607 2492 c-42 -42 -77 -82 -77 -87 0 -6 86 -96 190 -200 105 -104 190 -197 190 -205 0 -8 -41 -56 -92 -107 -65 -65 -87 -94 -77 -98 8 -3 138 -4 289 -3 l275 3 3 275 c1 151 0 281 -3 289 -4 10 -35 -14 -103 -82 -54 -53 -103 -97 -109 -97 -7 0 -99 88 -206 195 -107 107 -196 195 -198 195 -3 0 -39 -35 -82 -78z\"/> <path d=\"M1470 1639 c-47 -49 -87 -91 -89 -94 -5 -6 149 -165 160 -165 9 0 189 179 189 188 0 12 -154 162 -165 161 -6 0 -48 -41 -95 -90z\"/> <path d=\"M1797 1303 c-9 -8 -9 -568 0 -576 4 -4 50 36 103 88 54 52 101 95 106 95 5 0 95 -85 199 -190 104 -104 194 -190 200 -190 6 0 46 36 90 80 l79 79 -197 196 c-108 108 -197 199 -197 203 0 4 45 52 99 106 55 55 98 103 95 108 -6 10 -568 11 -577 1z\"/> </g> </svg>"

/***/ }),

/***/ 44563:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 48 48\"> <path d=\"M6 42h4v-4h-4v4zm4-28h-4v4h4v-4zm-4 20h4v-4h-4v4zm8 8h4v-4h-4v4zm-4-36h-4v4h4v-4zm8 0h-4v4h4v-4zm16 0h-4v4h4v-4zm-8 8h-4v4h4v-4zm0-8h-4v4h4v-4zm12 28h4v-4h-4v4zm-16 8h4v-4h-4v4zm-16-16h36v-4h-36v4zm32-20v4h4v-4h-4zm0 12h4v-4h-4v4zm-16 16h4v-4h-4v4zm8 8h4v-4h-4v4zm8 0h4v-4h-4v4z\"/> <path d=\"M0 0h48v48h-48z\" fill=\"none\"/> </svg>"

/***/ }),

/***/ 53183:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 48 48\"> <path d=\"M6 18h4v-4h-4v4zm0-8h4v-4h-4v4zm8 32h4v-4h-4v4zm0-16h4v-4h-4v4zm-8 0h4v-4h-4v4zm0 16h4v-4h-4v4zm0-8h4v-4h-4v4zm8-24h4v-4h-4v4zm24 24h4v-4h-4v4zm-16 8h4v-36h-4v36zm16 0h4v-4h-4v4zm0-16h4v-4h-4v4zm0-20v4h4v-4h-4zm0 12h4v-4h-4v4zm-8-8h4v-4h-4v4zm0 32h4v-4h-4v4zm0-16h4v-4h-4v4z\"/> <path d=\"M0 0h48v48h-48z\" fill=\"none\"/> </svg>"

/***/ }),

/***/ 18548:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm1280 512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zm-1280-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm1280 512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68z\"/> </svg>"

/***/ }),

/***/ 52242:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm-640-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm-640-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68z\"/> </svg>"

/***/ }),

/***/ 87498:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45z\"/> </svg>"

/***/ }),

/***/ 7986:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M5.09668 6.99707H7.17358L4.17358 3.99707L1.17358 6.99707H3.09668V17.0031H1.15881L4.15881 20.0031L7.15881 17.0031H5.09668V6.99707Z\"/> <path d=\"M22.8412 7H8.84119V5H22.8412V7Z\"/> <path d=\"M22.8412 11H8.84119V9H22.8412V11Z\"/> <path d=\"M8.84119 15H22.8412V13H8.84119V15Z\"/> <path d=\"M22.8412 19H8.84119V17H22.8412V19Z\"/> </svg>"

/***/ }),

/***/ 23075:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1520 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zm-703-705q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zm895 705q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z\"/> </svg>"

/***/ }),

/***/ 10655:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M503 1271l-256 256q-10 9-23 9-12 0-23-9-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23zm169 41v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zm-224-224q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zm1264 128q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-334-335q-21-21-42-56l239-18 273 274q27 27 68 27.5t68-26.5l147-146q28-28 28-67 0-40-28-68l-274-275 18-239q35 21 56 42l336 336q84 86 84 204zm-617-724l-239 18-273-274q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l274 274-18 240q-35-21-56-42l-336-336q-84-86-84-204 0-120 85-203l147-146q83-83 203-83 121 0 204 85l334 335q21 21 42 56zm633 84q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zm-544-544v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zm407 151l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23z\"/> </svg>"

/***/ }),

/***/ 15476:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path stroke-width=\"0\" d=\"M381 1620q0 80-54.5 126t-135.5 46q-106 0-172-66l57-88q49 45 106 45 29 0 50.5-14.5t21.5-42.5q0-64-105-56l-26-56q8-10 32.5-43.5t42.5-54 37-38.5v-1q-16 0-48.5 1t-48.5 1v53h-106v-152h333v88l-95 115q51 12 81 49t30 88zm2-627v159h-362q-6-36-6-54 0-51 23.5-93t56.5-68 66-47.5 56.5-43.5 23.5-45q0-25-14.5-38.5t-39.5-13.5q-46 0-81 58l-85-59q24-51 71.5-79.5t105.5-28.5q73 0 123 41.5t50 112.5q0 50-34 91.5t-75 64.5-75.5 50.5-35.5 52.5h127v-60h105zm1409 319v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm-1408-899v99h-335v-99h107q0-41 .5-122t.5-121v-12h-2q-8 17-50 54l-71-76 136-127h106v404h108zm1408 387v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z\"/> </svg>"

/***/ }),

/***/ 59403:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path stroke-width=\"0\" d=\"M384 1408q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm0-512q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm-1408-928q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z\"/> </svg>"

/***/ }),

/***/ 22860:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M448 1536h896v-256h-896v256zm0-640h896v-384h-160q-40 0-68-28t-28-68v-160h-640v640zm1152 64q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm128 0v416q0 13-9.5 22.5t-22.5 9.5h-224v160q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-224q-13 0-22.5-9.5t-9.5-22.5v-416q0-79 56.5-135.5t135.5-56.5h64v-544q0-40 28-68t68-28h672q40 0 88 20t76 48l152 152q28 28 48 76t20 88v256h64q79 0 135.5 56.5t56.5 135.5z\"/> </svg>"

/***/ }),

/***/ 95600:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0 225-52t179-147q7-10 23-12 14 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109 132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14 39 17 39 59z\"/> </svg>"

/***/ }),

/***/ 76214:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1664 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z\"/> </svg>"

/***/ }),

/***/ 41197:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 500 500\" xmlns=\"http://www.w3.org/2000/svg\"> <path clip-rule=\"evenodd\" d=\"M306.39,154.09c19.628,4.543,35.244,21.259,39.787,39.523 c1.551,8.54,8.998,14.989,17.904,14.989c9.991,0,18.168-8.175,18.168-18.17c0-13.083-10.991-32.98-25.985-47.881 c-14.719-14.537-32.252-24.802-46.695-24.802c-9.991,0-18.172,8.45-18.172,18.446C291.396,145.094,297.847,152.546,306.39,154.09z M56.629,392.312c-14.09,14.08-14.09,36.979,0,51.059c14.08,14.092,36.981,14.092,50.965,0l104.392-104.303 c24.347,15.181,53.062,23.991,83.953,23.991c87.857,0,158.995-71.142,158.995-158.999c0-87.854-71.138-158.995-158.995-158.995 c-87.856,0-158.995,71.141-158.995,158.995c0,30.802,8.819,59.606,23.992,83.953L56.629,392.312z M182.371,204.06 c0-62.687,50.875-113.568,113.568-113.568s113.569,50.881,113.569,113.568c0,62.694-50.876,113.569-113.569,113.569 S182.371,266.754,182.371,204.06z\" fill-rule=\"evenodd\"/> </svg>"

/***/ }),

/***/ 9342:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M553 1399l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23t-10 23zm591-1067l-373 1291q-4 13-15.5 19.5t-23.5 2.5l-62-17q-13-4-19.5-15.5t-2.5-24.5l373-1291q4-13 15.5-19.5t23.5-2.5l62 17q13 4 19.5 15.5t2.5 24.5zm657 651l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23t-10 23z\"/> </svg>"

/***/ }),

/***/ 69546:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M24.89 32h4.18L18.86 6h-3.71L4.93 32h4.18l2.25-6h11.29l2.24 6zM12.86 22L17 10.95 21.14 22h-8.28zm30.31 1.17L27 39.34 19.66 32l-2.83 2.83L27 45l19-19-2.83-2.83z\"/> </svg>"

/***/ }),

/***/ 43158:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 270 270\"> <path d=\"m240.443652,220.45085l-47.410809,0l0,-10.342138c13.89973,-8.43655 25.752896,-19.844464 34.686646,-33.469923c11.445525,-17.455846 17.496072,-37.709239 17.496072,-58.570077c0,-59.589197 -49.208516,-108.068714 -109.693558,-108.068714s-109.69263,48.479517 -109.69263,108.069628c0,20.860839 6.050547,41.113316 17.497001,58.570077c8.93375,13.625459 20.787845,25.032458 34.686646,33.469008l0,10.342138l-47.412666,0c-10.256959,0 -18.571354,8.191376 -18.571354,18.296574c0,10.105198 8.314395,18.296574 18.571354,18.296574l65.98402,0c10.256959,0 18.571354,-8.191376 18.571354,-18.296574l0,-39.496814c0,-7.073455 -4.137698,-13.51202 -10.626529,-16.537358c-25.24497,-11.772016 -41.557118,-37.145704 -41.557118,-64.643625c0,-39.411735 32.545369,-71.476481 72.549922,-71.476481c40.004553,0 72.550851,32.064746 72.550851,71.476481c0,27.497006 -16.312149,52.87161 -41.557118,64.643625c-6.487902,3.026253 -10.6256,9.464818 -10.6256,16.537358l0,39.496814c0,10.105198 8.314395,18.296574 18.571354,18.296574l65.982163,0c10.256959,0 18.571354,-8.191376 18.571354,-18.296574c0,-10.105198 -8.314395,-18.296574 -18.571354,-18.296574z\"/> </svg>"

/***/ }),

/***/ 51716:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M576 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm-512-768v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm-512-768v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm128-320v1088q0 66-47 113t-113 47h-1344q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1344q66 0 113 47t47 113z\"/> </svg>"

/***/ }),

/***/ 49222:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1792 352v1088q0 42-39 59-13 5-25 5-27 0-45-19l-403-403v166q0 119-84.5 203.5t-203.5 84.5h-704q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h704q119 0 203.5 84.5t84.5 203.5v165l403-402q18-19 45-19 12 0 25 5 39 17 39 59z\"/> </svg>"

/***/ }),

/***/ 1755:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1395 736q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23z\"/> </svg>"

/***/ }),

/***/ 74911:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23z\"/> </svg>"

/***/ }),

/***/ 8805:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1171 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z\"/> </svg>"

/***/ }),

/***/ 16547:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1395 1184q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23z\"/> </svg>"

/***/ }),

/***/ 10856:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M704 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm256 0v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm256 0v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm-544-992h448l-48-117q-7-9-17-11h-317q-10 2-17 11zm928 32v64q0 14-9 23t-23 9h-96v948q0 83-47 143.5t-113 60.5h-832q-66 0-113-58.5t-47-141.5v-952h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h309l70-167q15-37 54-63t79-26h320q40 0 79 26t54 63l70 167h309q14 0 23 9t9 23z\"/> </svg>"

/***/ }),

/***/ 98441:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 14 14\" xmlns=\"http://www.w3.org/2000/svg\"> <g stroke=\"none\" stroke-width=\"1\"> <path d=\"M14,1.4 L12.6,0 L7,5.6 L1.4,0 L0,1.4 L5.6,7 L0,12.6 L1.4,14 L7,8.4 L12.6,14 L14,12.6 L8.4,7 L14,1.4 Z\"/> </g> </svg>"

/***/ }),

/***/ 52488:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h896q26 0 45 19t19 45zm256-384v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-640q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h640q26 0 45 19t19 45z\"/> </svg>"

/***/ }),

/***/ 9370:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1472 930v318q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-10 10-23 10-3 0-9-2-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-254q0-13 9-22l64-64q10-10 23-10 6 0 12 3 20 8 20 29zm231-489l-814 814q-24 24-57 24t-57-24l-430-430q-24-24-24-57t24-57l110-110q24-24 57-24t57 24l263 263 647-647q24-24 57-24t57 24l110 110q24 24 24 57t-24 57z\"/> </svg>"

/***/ }),

/***/ 66543:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 10 10\"> <path d=\"M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z\"/> </svg>"

/***/ }),

/***/ 608:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 24 24\" > <circle cx=\"12\" cy=\"12\" r=\"2.2\"/> <circle cx=\"12\" cy=\"5\" r=\"2.2\"/> <circle cx=\"12\" cy=\"19\" r=\"2.2\"/> </svg>"

/***/ }),

/***/ 42840:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1664 960q-152-236-381-353 61 104 61 225 0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-121 61-225-229 117-381 353 133 205 333.5 326.5t434.5 121.5 434.5-121.5 333.5-326.5zm-720-384q0-20-14-34t-34-14q-125 0-214.5 89.5t-89.5 214.5q0 20 14 34t34 14 34-14 14-34q0-86 61-147t147-61q20 0 34-14t14-34zm848 384q0 34-20 69-140 230-376.5 368.5t-499.5 138.5-499.5-139-376.5-368q-20-35-20-69t20-69q140-229 376.5-368t499.5-139 499.5 139 376.5 368q20 35 20 69z\"/> </svg>"

/***/ }),

/***/ 79096:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1152 512v-472q22 14 36 28l408 408q14 14 28 36h-472zm-128 32q0 40 28 68t68 28h544v1056q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h800v544z\"/> </svg>"

/***/ }),

/***/ 33014:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1728 608v704q0 92-66 158t-158 66h-1216q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h672q92 0 158 66t66 158z\"/> </svg>"

/***/ }),

/***/ 91677:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1152 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zm-128-896v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zm640 416q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\"/> </svg>"

/***/ }),

/***/ 8259:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zm256-384v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"/> </svg>"

/***/ }),

/***/ 64467:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"><path d=\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\"/></svg>"

/***/ }),

/***/ 86934:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 32 32\"> <path d=\"M27 4l-15 15-7-7-5 5 12 12 20-20z\"/> </svg>"

/***/ }),

/***/ 76133:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"><path d=\"M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z\"/></svg>"

/***/ }),

/***/ 45519:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"><path d=\"M1600 736v192q0 40-28 68t-68 28h-416v416q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-416h-416q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h416v-416q0-40 28-68t68-28h192q40 0 68 28t28 68v416h416q40 0 68 28t28 68z\"/></svg>"

/***/ }),

/***/ 90265:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 13 13\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M5.9814 11.8049C5.59087 11.4144 5.59087 10.7812 5.9814 10.3907L10.224 6.14806C10.6146 5.75754 11.2477 5.75754 11.6383 6.14806C12.0288 6.53859 12.0288 7.17175 11.6383 7.56228L7.39561 11.8049C7.00509 12.1954 6.37192 12.1954 5.9814 11.8049Z\"/> <path d=\"M0.707107 12.0208C0.316582 11.6303 0.316582 10.9971 0.707107 10.6066L10.6066 0.707121C10.9971 0.316597 11.6303 0.316596 12.0208 0.707121C12.4113 1.09764 12.4113 1.73081 12.0208 2.12133L2.12132 12.0208C1.7308 12.4114 1.09763 12.4114 0.707107 12.0208Z\"/> </svg>"

/***/ }),

/***/ 81279:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z\"/> </svg>"

/***/ }),

/***/ 68899:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M512 1536h768v-384h-768v384zm896 0h128v-896q0-14-10-38.5t-20-34.5l-281-281q-10-10-34-20t-39-10v416q0 40-28 68t-68 28h-576q-40 0-68-28t-28-68v-416h-128v1280h128v-416q0-40 28-68t68-28h832q40 0 68 28t28 68v416zm-384-928v-320q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5zm640 32v928q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h928q40 0 88 20t76 48l280 280q28 28 48 76t20 88z\"/> </svg>"

/***/ }),

/***/ 70744:
/***/ (function(module) {

module.exports = "<svg viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\"> <path stroke=\"null\" d=\"m42.276011,26.302547c0.098397,-0.76605 0.172194,-1.54407 0.172194,-2.33406s-0.073797,-1.56801 -0.172194,-2.33406l5.202718,-3.961917c0.467384,-0.359086 0.602679,-1.005441 0.29519,-1.532101l-4.919828,-8.29489c-0.307489,-0.51469 -0.947067,-0.730142 -1.500548,-0.51469l-6.125186,2.405877c-1.266856,-0.945594 -2.656707,-1.747553 -4.157255,-2.357999l-0.922468,-6.343855c-0.110696,-0.562568 -0.614979,-1.005441 -1.229957,-1.005441l-9.839656,0c-0.614979,0 -1.119261,0.442873 -1.217657,1.005441l-0.922468,6.343855c-1.500548,0.610446 -2.890399,1.400436 -4.157255,2.357999l-6.125186,-2.405877c-0.553481,-0.203482 -1.193058,0 -1.500548,0.51469l-4.919828,8.29489c-0.307489,0.51469 -0.172194,1.161045 0.29519,1.532101l5.190419,3.961917c-0.098397,0.76605 -0.172194,1.54407 -0.172194,2.33406s0.073797,1.56801 0.172194,2.33406l-5.190419,3.961917c-0.467384,0.359086 -0.602679,1.005441 -0.29519,1.532101l4.919828,8.29489c0.307489,0.51469 0.947067,0.730142 1.500548,0.51469l6.125186,-2.405877c1.266856,0.945594 2.656707,1.747553 4.157255,2.357999l0.922468,6.343855c0.098397,0.562568 0.602679,1.005441 1.217657,1.005441l9.839656,0c0.614979,0 1.119261,-0.442873 1.217657,-1.005441l0.922468,-6.343855c1.500548,-0.610446 2.890399,-1.400436 4.157255,-2.357999l6.125186,2.405877c0.553481,0.203482 1.193058,0 1.500548,-0.51469l4.919828,-8.29489c0.307489,-0.51469 0.172194,-1.161045 -0.29519,-1.532101l-5.190419,-3.961917zm-18.277162,6.044617c-4.759934,0 -8.609699,-3.746465 -8.609699,-8.378677s3.849766,-8.378677 8.609699,-8.378677s8.609699,3.746465 8.609699,8.378677s-3.849766,8.378677 -8.609699,8.378677z\"/> </svg>"

/***/ }),

/***/ 19201:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\"/> </svg>"

/***/ }),

/***/ 84930:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1639 1056q0 5-1 7-64 268-268 434.5t-478 166.5q-146 0-282.5-55t-243.5-157l-129 129q-19 19-45 19t-45-19-19-45v-448q0-26 19-45t45-19h448q26 0 45 19t19 45-19 45l-137 137q71 66 161 102t187 36q134 0 250-65t186-179q11-17 53-117 8-23 30-23h192q13 0 22.5 9.5t9.5 22.5zm25-800v448q0 26-19 45t-45 19h-448q-26 0-45-19t-19-45 19-45l138-138q-148-137-349-137-134 0-250 65t-186 179q-11 17-53 117-8 23-30 23h-199q-13 0-22.5-9.5t-9.5-22.5v-7q65-268 270-434.5t480-166.5q146 0 284 55.5t245 156.5l130-129q19-19 45-19t45 19 19 45z\"/> </svg>"

/***/ }),

/***/ 99704:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1344 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm256 0q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm128-224v320q0 40-28 68t-68 28h-1472q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h427q21 56 70.5 92t110.5 36h256q61 0 110.5-36t70.5-92h427q40 0 68 28t28 68zm-325-648q-17 40-59 40h-256v448q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-448h-256q-42 0-59-40-17-39 14-69l448-448q18-19 45-19t45 19l448 448q31 30 14 69z\"/> </svg>"

/***/ }),

/***/ 2304:
/***/ (function(module) {

module.exports = "<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 1792 1792\"> <path d=\"M1216 320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19 19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26 0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z\"/> </svg>"

/***/ }),

/***/ 93330:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 45066:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 99895:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 87682:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 50905:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 70446:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 18984:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 4591:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 64194:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 70375:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 90235:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 88477:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 50197:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 39008:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 47086:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 16462:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 40692:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 27452:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 51422:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 62820:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 63421:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 32115:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 53362:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 48904:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 85796:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 28654:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 60819:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 96410:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 33126:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 30724:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 14320:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 9947:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 45109:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 71708:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 51629:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 54860:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 47818:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 6316:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 88582:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 30962:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 68197:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 60057:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 33393:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 51057:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 64618:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 90176:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 91147:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ 70631:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.boundClass = exports.boundMethod = void 0;
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) { return typeof obj; };
}
else {
    _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
} return _typeof(obj); }
function boundMethod(target, key, descriptor) {
    var fn = descriptor.value;
    if (typeof fn !== 'function') {
        throw new TypeError("@boundMethod decorator can only be applied to methods not: ".concat(_typeof(fn)));
    }
    var definingProperty = false;
    return {
        configurable: true,
        get: function get() {
            if (definingProperty || this === target.prototype || this.hasOwnProperty(key) || typeof fn !== 'function') {
                return fn;
            }
            var boundFn = fn.bind(this);
            definingProperty = true;
            Object.defineProperty(this, key, {
                configurable: true,
                get: function get() {
                    return boundFn;
                },
                set: function set(value) {
                    fn = value;
                    delete this[key];
                }
            });
            definingProperty = false;
            return boundFn;
        },
        set: function set(value) {
            fn = value;
        }
    };
}
exports.boundMethod = boundMethod;
function boundClass(target) {
    var keys;
    if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {
        keys = Reflect.ownKeys(target.prototype);
    }
    else {
        keys = Object.getOwnPropertyNames(target.prototype);
        if (typeof Object.getOwnPropertySymbols === 'function') {
            keys = keys.concat(Object.getOwnPropertySymbols(target.prototype));
        }
    }
    keys.forEach(function (key) {
        if (key === 'constructor') {
            return;
        }
        var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);
        if (typeof descriptor.value === 'function') {
            Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));
        }
    });
    return target;
}
exports.boundClass = boundClass;
function autobind() {
    if (arguments.length === 1) {
        return boundClass.apply(void 0, arguments);
    }
    return boundMethod.apply(void 0, arguments);
}
exports["default"] = autobind;


/***/ }),

/***/ 61227:
/***/ (function() {

"use strict";

/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */
if ("document" in window.self) {
    if (!("classList" in document.createElement("_"))
        || document.createElementNS && !("classList" in document.createElementNS("http://www.w3.org/2000/svg", "g"))) {
        (function (view) {
            "use strict";
            if (!('Element' in view))
                return;
            var classListProp = "classList", protoProp = "prototype", elemCtrProto = view.Element[protoProp], objCtr = Object, strTrim = String[protoProp].trim || function () {
                return this.replace(/^\s+|\s+$/g, "");
            }, arrIndexOf = Array[protoProp].indexOf || function (item) {
                var i = 0, len = this.length;
                for (; i < len; i++) {
                    if (i in this && this[i] === item) {
                        return i;
                    }
                }
                return -1;
            }, DOMEx = function (type, message) {
                this.name = type;
                this.code = DOMException[type];
                this.message = message;
            }, checkTokenAndGetIndex = function (classList, token) {
                if (token === "") {
                    throw new DOMEx("SYNTAX_ERR", "An invalid or illegal string was specified");
                }
                if (/\s/.test(token)) {
                    throw new DOMEx("INVALID_CHARACTER_ERR", "String contains an invalid character");
                }
                return arrIndexOf.call(classList, token);
            }, ClassList = function (elem) {
                var trimmedClasses = strTrim.call(elem.getAttribute("class") || ""), classes = trimmedClasses ? trimmedClasses.split(/\s+/) : [], i = 0, len = classes.length;
                for (; i < len; i++) {
                    this.push(classes[i]);
                }
                this._updateClassName = function () {
                    elem.setAttribute("class", this.toString());
                };
            }, classListProto = ClassList[protoProp] = [], classListGetter = function () {
                return new ClassList(this);
            };
            DOMEx[protoProp] = Error[protoProp];
            classListProto.item = function (i) {
                return this[i] || null;
            };
            classListProto.contains = function (token) {
                token += "";
                return checkTokenAndGetIndex(this, token) !== -1;
            };
            classListProto.add = function () {
                var tokens = arguments, i = 0, l = tokens.length, token, updated = false;
                do {
                    token = tokens[i] + "";
                    if (checkTokenAndGetIndex(this, token) === -1) {
                        this.push(token);
                        updated = true;
                    }
                } while (++i < l);
                if (updated) {
                    this._updateClassName();
                }
            };
            classListProto.remove = function () {
                var tokens = arguments, i = 0, l = tokens.length, token, updated = false, index;
                do {
                    token = tokens[i] + "";
                    index = checkTokenAndGetIndex(this, token);
                    while (index !== -1) {
                        this.splice(index, 1);
                        updated = true;
                        index = checkTokenAndGetIndex(this, token);
                    }
                } while (++i < l);
                if (updated) {
                    this._updateClassName();
                }
            };
            classListProto.toggle = function (token, force) {
                token += "";
                var result = this.contains(token), method = result ?
                    force !== true && "remove"
                    :
                        force !== false && "add";
                if (method) {
                    this[method](token);
                }
                if (force === true || force === false) {
                    return force;
                }
                else {
                    return !result;
                }
            };
            classListProto.toString = function () {
                return this.join(" ");
            };
            if (objCtr.defineProperty) {
                var classListPropDesc = {
                    get: classListGetter,
                    enumerable: true,
                    configurable: true
                };
                try {
                    objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
                }
                catch (ex) {
                    if (ex.number === undefined || ex.number === -0x7FF5EC54) {
                        classListPropDesc.enumerable = false;
                        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
                    }
                }
            }
            else if (objCtr[protoProp].__defineGetter__) {
                elemCtrProto.__defineGetter__(classListProp, classListGetter);
            }
        }(window.self));
    }
    (function () {
        "use strict";
        var testElement = document.createElement("_");
        testElement.classList.add("c1", "c2");
        if (!testElement.classList.contains("c2")) {
            var createMethod = function (method) {
                var original = DOMTokenList.prototype[method];
                DOMTokenList.prototype[method] = function (token) {
                    var i, len = arguments.length;
                    for (i = 0; i < len; i++) {
                        token = arguments[i];
                        original.call(this, token);
                    }
                };
            };
            createMethod('add');
            createMethod('remove');
        }
        testElement.classList.toggle("c3", false);
        if (testElement.classList.contains("c3")) {
            var _toggle = DOMTokenList.prototype.toggle;
            DOMTokenList.prototype.toggle = function (token, force) {
                if (1 in arguments && !this.contains(token) === !force) {
                    return force;
                }
                else {
                    return _toggle.call(this, token);
                }
            };
        }
        testElement = null;
    }());
}


/***/ }),

/***/ 69220:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

__webpack_require__(22513);
var entryUnbind = __webpack_require__(56599);
module.exports = entryUnbind('Array', 'findIndex');


/***/ }),

/***/ 10444:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

__webpack_require__(52867);
__webpack_require__(70057);
var path = __webpack_require__(31116);
module.exports = path.Array.from;


/***/ }),

/***/ 66622:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

__webpack_require__(54166);
__webpack_require__(32044);
__webpack_require__(95661);
__webpack_require__(28424);
__webpack_require__(64514);
__webpack_require__(30733);
__webpack_require__(40327);
__webpack_require__(53639);
__webpack_require__(6147);
__webpack_require__(7290);
__webpack_require__(95122);
__webpack_require__(61322);
__webpack_require__(39605);
__webpack_require__(49341);
__webpack_require__(28809);
__webpack_require__(82658);
__webpack_require__(43967);
__webpack_require__(90217);
__webpack_require__(73477);
__webpack_require__(93697);
var path = __webpack_require__(31116);
module.exports = path.Symbol;


/***/ }),

/***/ 98061:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(794);
var tryToString = __webpack_require__(98418);
var $TypeError = TypeError;
module.exports = function (argument) {
    if (isCallable(argument))
        return argument;
    throw $TypeError(tryToString(argument) + ' is not a function');
};


/***/ }),

/***/ 75839:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(794);
var $String = String;
var $TypeError = TypeError;
module.exports = function (argument) {
    if (typeof argument == 'object' || isCallable(argument))
        return argument;
    throw $TypeError("Can't set " + $String(argument) + ' as a prototype');
};


/***/ }),

/***/ 15179:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var wellKnownSymbol = __webpack_require__(19517);
var create = __webpack_require__(93503);
var defineProperty = (__webpack_require__(73252).f);
var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;
if (ArrayPrototype[UNSCOPABLES] == undefined) {
    defineProperty(ArrayPrototype, UNSCOPABLES, {
        configurable: true,
        value: create(null)
    });
}
module.exports = function (key) {
    ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ 52313:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isObject = __webpack_require__(8148);
var $String = String;
var $TypeError = TypeError;
module.exports = function (argument) {
    if (isObject(argument))
        return argument;
    throw $TypeError($String(argument) + ' is not an object');
};


/***/ }),

/***/ 92707:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__(40207);
var call = __webpack_require__(9093);
var toObject = __webpack_require__(68488);
var callWithSafeIterationClosing = __webpack_require__(79665);
var isArrayIteratorMethod = __webpack_require__(84997);
var isConstructor = __webpack_require__(15333);
var lengthOfArrayLike = __webpack_require__(15050);
var createProperty = __webpack_require__(89476);
var getIterator = __webpack_require__(27395);
var getIteratorMethod = __webpack_require__(81058);
var $Array = Array;
module.exports = function from(arrayLike) {
    var O = toObject(arrayLike);
    var IS_CONSTRUCTOR = isConstructor(this);
    var argumentsLength = arguments.length;
    var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    if (mapping)
        mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
    var iteratorMethod = getIteratorMethod(O);
    var index = 0;
    var length, result, step, iterator, next, value;
    if (iteratorMethod && !(this === $Array && isArrayIteratorMethod(iteratorMethod))) {
        iterator = getIterator(O, iteratorMethod);
        next = iterator.next;
        result = IS_CONSTRUCTOR ? new this() : [];
        for (; !(step = call(next, iterator)).done; index++) {
            value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
            createProperty(result, index, value);
        }
    }
    else {
        length = lengthOfArrayLike(O);
        result = IS_CONSTRUCTOR ? new this(length) : $Array(length);
        for (; length > index; index++) {
            value = mapping ? mapfn(O[index], index) : O[index];
            createProperty(result, index, value);
        }
    }
    result.length = index;
    return result;
};


/***/ }),

/***/ 79327:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(98651);
var toAbsoluteIndex = __webpack_require__(10586);
var lengthOfArrayLike = __webpack_require__(15050);
var createMethod = function (IS_INCLUDES) {
    return function ($this, el, fromIndex) {
        var O = toIndexedObject($this);
        var length = lengthOfArrayLike(O);
        var index = toAbsoluteIndex(fromIndex, length);
        var value;
        if (IS_INCLUDES && el != el)
            while (length > index) {
                value = O[index++];
                if (value != value)
                    return true;
            }
        else
            for (; length > index; index++) {
                if ((IS_INCLUDES || index in O) && O[index] === el)
                    return IS_INCLUDES || index || 0;
            }
        return !IS_INCLUDES && -1;
    };
};
module.exports = {
    includes: createMethod(true),
    indexOf: createMethod(false)
};


/***/ }),

/***/ 56881:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__(40207);
var uncurryThis = __webpack_require__(90838);
var IndexedObject = __webpack_require__(25049);
var toObject = __webpack_require__(68488);
var lengthOfArrayLike = __webpack_require__(15050);
var arraySpeciesCreate = __webpack_require__(6429);
var push = uncurryThis([].push);
var createMethod = function (TYPE) {
    var IS_MAP = TYPE == 1;
    var IS_FILTER = TYPE == 2;
    var IS_SOME = TYPE == 3;
    var IS_EVERY = TYPE == 4;
    var IS_FIND_INDEX = TYPE == 6;
    var IS_FILTER_REJECT = TYPE == 7;
    var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
    return function ($this, callbackfn, that, specificCreate) {
        var O = toObject($this);
        var self = IndexedObject(O);
        var boundFunction = bind(callbackfn, that);
        var length = lengthOfArrayLike(self);
        var index = 0;
        var create = specificCreate || arraySpeciesCreate;
        var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
        var value, result;
        for (; length > index; index++)
            if (NO_HOLES || index in self) {
                value = self[index];
                result = boundFunction(value, index, O);
                if (TYPE) {
                    if (IS_MAP)
                        target[index] = result;
                    else if (result)
                        switch (TYPE) {
                            case 3: return true;
                            case 5: return value;
                            case 6: return index;
                            case 2: push(target, value);
                        }
                    else
                        switch (TYPE) {
                            case 4: return false;
                            case 7: push(target, value);
                        }
                }
            }
        return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
    };
};
module.exports = {
    forEach: createMethod(0),
    map: createMethod(1),
    filter: createMethod(2),
    some: createMethod(3),
    every: createMethod(4),
    find: createMethod(5),
    findIndex: createMethod(6),
    filterReject: createMethod(7)
};


/***/ }),

/***/ 63833:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(75834);
var wellKnownSymbol = __webpack_require__(19517);
var V8_VERSION = __webpack_require__(65190);
var SPECIES = wellKnownSymbol('species');
module.exports = function (METHOD_NAME) {
    return V8_VERSION >= 51 || !fails(function () {
        var array = [];
        var constructor = array.constructor = {};
        constructor[SPECIES] = function () {
            return { foo: 1 };
        };
        return array[METHOD_NAME](Boolean).foo !== 1;
    });
};


/***/ }),

/***/ 57652:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toAbsoluteIndex = __webpack_require__(10586);
var lengthOfArrayLike = __webpack_require__(15050);
var createProperty = __webpack_require__(89476);
var $Array = Array;
var max = Math.max;
module.exports = function (O, start, end) {
    var length = lengthOfArrayLike(O);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    var result = $Array(max(fin - k, 0));
    for (var n = 0; k < fin; k++, n++)
        createProperty(result, n, O[k]);
    result.length = n;
    return result;
};


/***/ }),

/***/ 54832:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
module.exports = uncurryThis([].slice);


/***/ }),

/***/ 22506:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__(36222);
var isConstructor = __webpack_require__(15333);
var isObject = __webpack_require__(8148);
var wellKnownSymbol = __webpack_require__(19517);
var SPECIES = wellKnownSymbol('species');
var $Array = Array;
module.exports = function (originalArray) {
    var C;
    if (isArray(originalArray)) {
        C = originalArray.constructor;
        if (isConstructor(C) && (C === $Array || isArray(C.prototype)))
            C = undefined;
        else if (isObject(C)) {
            C = C[SPECIES];
            if (C === null)
                C = undefined;
        }
    }
    return C === undefined ? $Array : C;
};


/***/ }),

/***/ 6429:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var arraySpeciesConstructor = __webpack_require__(22506);
module.exports = function (originalArray, length) {
    return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};


/***/ }),

/***/ 79665:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(52313);
var iteratorClose = __webpack_require__(11274);
module.exports = function (iterator, fn, value, ENTRIES) {
    try {
        return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
    }
    catch (error) {
        iteratorClose(iterator, 'throw', error);
    }
};


/***/ }),

/***/ 7581:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var wellKnownSymbol = __webpack_require__(19517);
var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;
try {
    var called = 0;
    var iteratorWithReturn = {
        next: function () {
            return { done: !!called++ };
        },
        'return': function () {
            SAFE_CLOSING = true;
        }
    };
    iteratorWithReturn[ITERATOR] = function () {
        return this;
    };
    Array.from(iteratorWithReturn, function () { throw 2; });
}
catch (error) { }
module.exports = function (exec, SKIP_CLOSING) {
    if (!SKIP_CLOSING && !SAFE_CLOSING)
        return false;
    var ITERATION_SUPPORT = false;
    try {
        var object = {};
        object[ITERATOR] = function () {
            return {
                next: function () {
                    return { done: ITERATION_SUPPORT = true };
                }
            };
        };
        exec(object);
    }
    catch (error) { }
    return ITERATION_SUPPORT;
};


/***/ }),

/***/ 6285:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);
module.exports = function (it) {
    return stringSlice(toString(it), 8, -1);
};


/***/ }),

/***/ 8652:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(6424);
var isCallable = __webpack_require__(794);
var classofRaw = __webpack_require__(6285);
var wellKnownSymbol = __webpack_require__(19517);
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var $Object = Object;
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';
var tryGet = function (it, key) {
    try {
        return it[key];
    }
    catch (error) { }
};
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
    var O, tag, result;
    return it === undefined ? 'Undefined' : it === null ? 'Null'
        : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag
            : CORRECT_ARGUMENTS ? classofRaw(O)
                : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};


/***/ }),

/***/ 58392:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var hasOwn = __webpack_require__(14434);
var ownKeys = __webpack_require__(86671);
var getOwnPropertyDescriptorModule = __webpack_require__(36999);
var definePropertyModule = __webpack_require__(73252);
module.exports = function (target, source, exceptions) {
    var keys = ownKeys(source);
    var defineProperty = definePropertyModule.f;
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
            defineProperty(target, key, getOwnPropertyDescriptor(source, key));
        }
    }
};


/***/ }),

/***/ 27259:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(75834);
module.exports = !fails(function () {
    function F() { }
    F.prototype.constructor = null;
    return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ 17427:
/***/ (function(module) {

"use strict";

module.exports = function (value, done) {
    return { value: value, done: done };
};


/***/ }),

/***/ 45840:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(13873);
var definePropertyModule = __webpack_require__(73252);
var createPropertyDescriptor = __webpack_require__(32500);
module.exports = DESCRIPTORS ? function (object, key, value) {
    return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
    object[key] = value;
    return object;
};


/***/ }),

/***/ 32500:
/***/ (function(module) {

"use strict";

module.exports = function (bitmap, value) {
    return {
        enumerable: !(bitmap & 1),
        configurable: !(bitmap & 2),
        writable: !(bitmap & 4),
        value: value
    };
};


/***/ }),

/***/ 89476:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toPropertyKey = __webpack_require__(43836);
var definePropertyModule = __webpack_require__(73252);
var createPropertyDescriptor = __webpack_require__(32500);
module.exports = function (object, key, value) {
    var propertyKey = toPropertyKey(key);
    if (propertyKey in object)
        definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
    else
        object[propertyKey] = value;
};


/***/ }),

/***/ 97548:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var makeBuiltIn = __webpack_require__(40846);
var defineProperty = __webpack_require__(73252);
module.exports = function (target, name, descriptor) {
    if (descriptor.get)
        makeBuiltIn(descriptor.get, name, { getter: true });
    if (descriptor.set)
        makeBuiltIn(descriptor.set, name, { setter: true });
    return defineProperty.f(target, name, descriptor);
};


/***/ }),

/***/ 35065:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(794);
var definePropertyModule = __webpack_require__(73252);
var makeBuiltIn = __webpack_require__(40846);
var defineGlobalProperty = __webpack_require__(25379);
module.exports = function (O, key, value, options) {
    if (!options)
        options = {};
    var simple = options.enumerable;
    var name = options.name !== undefined ? options.name : key;
    if (isCallable(value))
        makeBuiltIn(value, name, options);
    if (options.global) {
        if (simple)
            O[key] = value;
        else
            defineGlobalProperty(key, value);
    }
    else {
        try {
            if (!options.unsafe)
                delete O[key];
            else if (O[key])
                simple = true;
        }
        catch (error) { }
        if (simple)
            O[key] = value;
        else
            definePropertyModule.f(O, key, {
                value: value,
                enumerable: false,
                configurable: !options.nonConfigurable,
                writable: !options.nonWritable
            });
    }
    return O;
};


/***/ }),

/***/ 25379:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(37042);
var defineProperty = Object.defineProperty;
module.exports = function (key, value) {
    try {
        defineProperty(global, key, { value: value, configurable: true, writable: true });
    }
    catch (error) {
        global[key] = value;
    }
    return value;
};


/***/ }),

/***/ 13873:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(75834);
module.exports = !fails(function () {
    return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ 12062:
/***/ (function(module) {

"use strict";

var documentAll = typeof document == 'object' && document.all;
var IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;
module.exports = {
    all: documentAll,
    IS_HTMLDDA: IS_HTMLDDA
};


/***/ }),

/***/ 15192:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(37042);
var isObject = __webpack_require__(8148);
var document = global.document;
var EXISTS = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
    return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ 39505:
/***/ (function(module) {

"use strict";

var $TypeError = TypeError;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
module.exports = function (it) {
    if (it > MAX_SAFE_INTEGER)
        throw $TypeError('Maximum allowed index exceeded');
    return it;
};


/***/ }),

/***/ 21473:
/***/ (function(module) {

"use strict";

module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';


/***/ }),

/***/ 65190:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(37042);
var userAgent = __webpack_require__(21473);
var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;
if (v8) {
    match = v8.split('.');
    version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}
if (!version && userAgent) {
    match = userAgent.match(/Edge\/(\d+)/);
    if (!match || match[1] >= 74) {
        match = userAgent.match(/Chrome\/(\d+)/);
        if (match)
            version = +match[1];
    }
}
module.exports = version;


/***/ }),

/***/ 56599:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(37042);
var uncurryThis = __webpack_require__(90838);
module.exports = function (CONSTRUCTOR, METHOD) {
    return uncurryThis(global[CONSTRUCTOR].prototype[METHOD]);
};


/***/ }),

/***/ 64456:
/***/ (function(module) {

"use strict";

module.exports = [
    'constructor',
    'hasOwnProperty',
    'isPrototypeOf',
    'propertyIsEnumerable',
    'toLocaleString',
    'toString',
    'valueOf'
];


/***/ }),

/***/ 50791:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(37042);
var getOwnPropertyDescriptor = (__webpack_require__(36999).f);
var createNonEnumerableProperty = __webpack_require__(45840);
var defineBuiltIn = __webpack_require__(35065);
var defineGlobalProperty = __webpack_require__(25379);
var copyConstructorProperties = __webpack_require__(58392);
var isForced = __webpack_require__(56930);
module.exports = function (options, source) {
    var TARGET = options.target;
    var GLOBAL = options.global;
    var STATIC = options.stat;
    var FORCED, target, key, targetProperty, sourceProperty, descriptor;
    if (GLOBAL) {
        target = global;
    }
    else if (STATIC) {
        target = global[TARGET] || defineGlobalProperty(TARGET, {});
    }
    else {
        target = (global[TARGET] || {}).prototype;
    }
    if (target)
        for (key in source) {
            sourceProperty = source[key];
            if (options.dontCallGetSet) {
                descriptor = getOwnPropertyDescriptor(target, key);
                targetProperty = descriptor && descriptor.value;
            }
            else
                targetProperty = target[key];
            FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
            if (!FORCED && targetProperty !== undefined) {
                if (typeof sourceProperty == typeof targetProperty)
                    continue;
                copyConstructorProperties(sourceProperty, targetProperty);
            }
            if (options.sham || (targetProperty && targetProperty.sham)) {
                createNonEnumerableProperty(sourceProperty, 'sham', true);
            }
            defineBuiltIn(target, key, sourceProperty, options);
        }
};


/***/ }),

/***/ 75834:
/***/ (function(module) {

"use strict";

module.exports = function (exec) {
    try {
        return !!exec();
    }
    catch (error) {
        return true;
    }
};


/***/ }),

/***/ 55101:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_BIND = __webpack_require__(32610);
var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var call = FunctionPrototype.call;
module.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {
    return call.apply(apply, arguments);
});


/***/ }),

/***/ 40207:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(75114);
var aCallable = __webpack_require__(98061);
var NATIVE_BIND = __webpack_require__(32610);
var bind = uncurryThis(uncurryThis.bind);
module.exports = function (fn, that) {
    aCallable(fn);
    return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function () {
        return fn.apply(that, arguments);
    };
};


/***/ }),

/***/ 32610:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(75834);
module.exports = !fails(function () {
    var test = (function () { }).bind();
    return typeof test != 'function' || test.hasOwnProperty('prototype');
});


/***/ }),

/***/ 9093:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_BIND = __webpack_require__(32610);
var call = Function.prototype.call;
module.exports = NATIVE_BIND ? call.bind(call) : function () {
    return call.apply(call, arguments);
};


/***/ }),

/***/ 84521:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(13873);
var hasOwn = __webpack_require__(14434);
var FunctionPrototype = Function.prototype;
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;
var EXISTS = hasOwn(FunctionPrototype, 'name');
var PROPER = EXISTS && (function something() { }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));
module.exports = {
    EXISTS: EXISTS,
    PROPER: PROPER,
    CONFIGURABLE: CONFIGURABLE
};


/***/ }),

/***/ 47448:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
var aCallable = __webpack_require__(98061);
module.exports = function (object, key, method) {
    try {
        return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));
    }
    catch (error) { }
};


/***/ }),

/***/ 75114:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var classofRaw = __webpack_require__(6285);
var uncurryThis = __webpack_require__(90838);
module.exports = function (fn) {
    if (classofRaw(fn) === 'Function')
        return uncurryThis(fn);
};


/***/ }),

/***/ 90838:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_BIND = __webpack_require__(32610);
var FunctionPrototype = Function.prototype;
var call = FunctionPrototype.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);
module.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
    return function () {
        return call.apply(fn, arguments);
    };
};


/***/ }),

/***/ 98945:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(37042);
var isCallable = __webpack_require__(794);
var aFunction = function (argument) {
    return isCallable(argument) ? argument : undefined;
};
module.exports = function (namespace, method) {
    return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ 81058:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var classof = __webpack_require__(8652);
var getMethod = __webpack_require__(20156);
var isNullOrUndefined = __webpack_require__(8140);
var Iterators = __webpack_require__(84922);
var wellKnownSymbol = __webpack_require__(19517);
var ITERATOR = wellKnownSymbol('iterator');
module.exports = function (it) {
    if (!isNullOrUndefined(it))
        return getMethod(it, ITERATOR)
            || getMethod(it, '@@iterator')
            || Iterators[classof(it)];
};


/***/ }),

/***/ 27395:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(9093);
var aCallable = __webpack_require__(98061);
var anObject = __webpack_require__(52313);
var tryToString = __webpack_require__(98418);
var getIteratorMethod = __webpack_require__(81058);
var $TypeError = TypeError;
module.exports = function (argument, usingIterator) {
    var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
    if (aCallable(iteratorMethod))
        return anObject(call(iteratorMethod, argument));
    throw $TypeError(tryToString(argument) + ' is not iterable');
};


/***/ }),

/***/ 6693:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
var isArray = __webpack_require__(36222);
var isCallable = __webpack_require__(794);
var classof = __webpack_require__(6285);
var toString = __webpack_require__(63046);
var push = uncurryThis([].push);
module.exports = function (replacer) {
    if (isCallable(replacer))
        return replacer;
    if (!isArray(replacer))
        return;
    var rawLength = replacer.length;
    var keys = [];
    for (var i = 0; i < rawLength; i++) {
        var element = replacer[i];
        if (typeof element == 'string')
            push(keys, element);
        else if (typeof element == 'number' || classof(element) == 'Number' || classof(element) == 'String')
            push(keys, toString(element));
    }
    var keysLength = keys.length;
    var root = true;
    return function (key, value) {
        if (root) {
            root = false;
            return value;
        }
        if (isArray(this))
            return value;
        for (var j = 0; j < keysLength; j++)
            if (keys[j] === key)
                return value;
    };
};


/***/ }),

/***/ 20156:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var aCallable = __webpack_require__(98061);
var isNullOrUndefined = __webpack_require__(8140);
module.exports = function (V, P) {
    var func = V[P];
    return isNullOrUndefined(func) ? undefined : aCallable(func);
};


/***/ }),

/***/ 37042:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var check = function (it) {
    return it && it.Math == Math && it;
};
module.exports =
    check(typeof globalThis == 'object' && globalThis) ||
        check(typeof window == 'object' && window) ||
        check(typeof self == 'object' && self) ||
        check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
        (function () { return this; })() || Function('return this')();


/***/ }),

/***/ 14434:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
var toObject = __webpack_require__(68488);
var hasOwnProperty = uncurryThis({}.hasOwnProperty);
module.exports = Object.hasOwn || function hasOwn(it, key) {
    return hasOwnProperty(toObject(it), key);
};


/***/ }),

/***/ 48889:
/***/ (function(module) {

"use strict";

module.exports = {};


/***/ }),

/***/ 36249:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(98945);
module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ 12816:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(13873);
var fails = __webpack_require__(75834);
var createElement = __webpack_require__(15192);
module.exports = !DESCRIPTORS && !fails(function () {
    return Object.defineProperty(createElement('div'), 'a', {
        get: function () { return 7; }
    }).a != 7;
});


/***/ }),

/***/ 25049:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
var fails = __webpack_require__(75834);
var classof = __webpack_require__(6285);
var $Object = Object;
var split = uncurryThis(''.split);
module.exports = fails(function () {
    return !$Object('z').propertyIsEnumerable(0);
}) ? function (it) {
    return classof(it) == 'String' ? split(it, '') : $Object(it);
} : $Object;


/***/ }),

/***/ 92355:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
var isCallable = __webpack_require__(794);
var store = __webpack_require__(45752);
var functionToString = uncurryThis(Function.toString);
if (!isCallable(store.inspectSource)) {
    store.inspectSource = function (it) {
        return functionToString(it);
    };
}
module.exports = store.inspectSource;


/***/ }),

/***/ 56113:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_WEAK_MAP = __webpack_require__(95473);
var global = __webpack_require__(37042);
var isObject = __webpack_require__(8148);
var createNonEnumerableProperty = __webpack_require__(45840);
var hasOwn = __webpack_require__(14434);
var shared = __webpack_require__(45752);
var sharedKey = __webpack_require__(85475);
var hiddenKeys = __webpack_require__(48889);
var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;
var enforce = function (it) {
    return has(it) ? get(it) : set(it, {});
};
var getterFor = function (TYPE) {
    return function (it) {
        var state;
        if (!isObject(it) || (state = get(it)).type !== TYPE) {
            throw TypeError('Incompatible receiver, ' + TYPE + ' required');
        }
        return state;
    };
};
if (NATIVE_WEAK_MAP || shared.state) {
    var store = shared.state || (shared.state = new WeakMap());
    store.get = store.get;
    store.has = store.has;
    store.set = store.set;
    set = function (it, metadata) {
        if (store.has(it))
            throw TypeError(OBJECT_ALREADY_INITIALIZED);
        metadata.facade = it;
        store.set(it, metadata);
        return metadata;
    };
    get = function (it) {
        return store.get(it) || {};
    };
    has = function (it) {
        return store.has(it);
    };
}
else {
    var STATE = sharedKey('state');
    hiddenKeys[STATE] = true;
    set = function (it, metadata) {
        if (hasOwn(it, STATE))
            throw TypeError(OBJECT_ALREADY_INITIALIZED);
        metadata.facade = it;
        createNonEnumerableProperty(it, STATE, metadata);
        return metadata;
    };
    get = function (it) {
        return hasOwn(it, STATE) ? it[STATE] : {};
    };
    has = function (it) {
        return hasOwn(it, STATE);
    };
}
module.exports = {
    set: set,
    get: get,
    has: has,
    enforce: enforce,
    getterFor: getterFor
};


/***/ }),

/***/ 84997:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var wellKnownSymbol = __webpack_require__(19517);
var Iterators = __webpack_require__(84922);
var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;
module.exports = function (it) {
    return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ 36222:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var classof = __webpack_require__(6285);
module.exports = Array.isArray || function isArray(argument) {
    return classof(argument) == 'Array';
};


/***/ }),

/***/ 794:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $documentAll = __webpack_require__(12062);
var documentAll = $documentAll.all;
module.exports = $documentAll.IS_HTMLDDA ? function (argument) {
    return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
    return typeof argument == 'function';
};


/***/ }),

/***/ 15333:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
var fails = __webpack_require__(75834);
var isCallable = __webpack_require__(794);
var classof = __webpack_require__(8652);
var getBuiltIn = __webpack_require__(98945);
var inspectSource = __webpack_require__(92355);
var noop = function () { };
var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = uncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);
var isConstructorModern = function isConstructor(argument) {
    if (!isCallable(argument))
        return false;
    try {
        construct(noop, empty, argument);
        return true;
    }
    catch (error) {
        return false;
    }
};
var isConstructorLegacy = function isConstructor(argument) {
    if (!isCallable(argument))
        return false;
    switch (classof(argument)) {
        case 'AsyncFunction':
        case 'GeneratorFunction':
        case 'AsyncGeneratorFunction': return false;
    }
    try {
        return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
    }
    catch (error) {
        return true;
    }
};
isConstructorLegacy.sham = true;
module.exports = !construct || fails(function () {
    var called;
    return isConstructorModern(isConstructorModern.call)
        || !isConstructorModern(Object)
        || !isConstructorModern(function () { called = true; })
        || called;
}) ? isConstructorLegacy : isConstructorModern;


/***/ }),

/***/ 56930:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(75834);
var isCallable = __webpack_require__(794);
var replacement = /#|\.prototype\./;
var isForced = function (feature, detection) {
    var value = data[normalize(feature)];
    return value == POLYFILL ? true
        : value == NATIVE ? false
            : isCallable(detection) ? fails(detection)
                : !!detection;
};
var normalize = isForced.normalize = function (string) {
    return String(string).replace(replacement, '.').toLowerCase();
};
var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';
module.exports = isForced;


/***/ }),

/***/ 8140:
/***/ (function(module) {

"use strict";

module.exports = function (it) {
    return it === null || it === undefined;
};


/***/ }),

/***/ 8148:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(794);
var $documentAll = __webpack_require__(12062);
var documentAll = $documentAll.all;
module.exports = $documentAll.IS_HTMLDDA ? function (it) {
    return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;
} : function (it) {
    return typeof it == 'object' ? it !== null : isCallable(it);
};


/***/ }),

/***/ 70852:
/***/ (function(module) {

"use strict";

module.exports = false;


/***/ }),

/***/ 88253:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(98945);
var isCallable = __webpack_require__(794);
var isPrototypeOf = __webpack_require__(54671);
var USE_SYMBOL_AS_UID = __webpack_require__(57982);
var $Object = Object;
module.exports = USE_SYMBOL_AS_UID ? function (it) {
    return typeof it == 'symbol';
} : function (it) {
    var $Symbol = getBuiltIn('Symbol');
    return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
};


/***/ }),

/***/ 11274:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(9093);
var anObject = __webpack_require__(52313);
var getMethod = __webpack_require__(20156);
module.exports = function (iterator, kind, value) {
    var innerResult, innerError;
    anObject(iterator);
    try {
        innerResult = getMethod(iterator, 'return');
        if (!innerResult) {
            if (kind === 'throw')
                throw value;
            return value;
        }
        innerResult = call(innerResult, iterator);
    }
    catch (error) {
        innerError = true;
        innerResult = error;
    }
    if (kind === 'throw')
        throw value;
    if (innerError)
        throw innerResult;
    anObject(innerResult);
    return value;
};


/***/ }),

/***/ 60928:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var IteratorPrototype = (__webpack_require__(77831).IteratorPrototype);
var create = __webpack_require__(93503);
var createPropertyDescriptor = __webpack_require__(32500);
var setToStringTag = __webpack_require__(44532);
var Iterators = __webpack_require__(84922);
var returnThis = function () { return this; };
module.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
    var TO_STRING_TAG = NAME + ' Iterator';
    IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
    setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
    Iterators[TO_STRING_TAG] = returnThis;
    return IteratorConstructor;
};


/***/ }),

/***/ 13759:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(50791);
var call = __webpack_require__(9093);
var IS_PURE = __webpack_require__(70852);
var FunctionName = __webpack_require__(84521);
var isCallable = __webpack_require__(794);
var createIteratorConstructor = __webpack_require__(60928);
var getPrototypeOf = __webpack_require__(1074);
var setPrototypeOf = __webpack_require__(482);
var setToStringTag = __webpack_require__(44532);
var createNonEnumerableProperty = __webpack_require__(45840);
var defineBuiltIn = __webpack_require__(35065);
var wellKnownSymbol = __webpack_require__(19517);
var Iterators = __webpack_require__(84922);
var IteratorsCore = __webpack_require__(77831);
var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';
var returnThis = function () { return this; };
module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
    createIteratorConstructor(IteratorConstructor, NAME, next);
    var getIterationMethod = function (KIND) {
        if (KIND === DEFAULT && defaultIterator)
            return defaultIterator;
        if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype)
            return IterablePrototype[KIND];
        switch (KIND) {
            case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
            case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
            case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
        }
        return function () { return new IteratorConstructor(this); };
    };
    var TO_STRING_TAG = NAME + ' Iterator';
    var INCORRECT_VALUES_NAME = false;
    var IterablePrototype = Iterable.prototype;
    var nativeIterator = IterablePrototype[ITERATOR]
        || IterablePrototype['@@iterator']
        || DEFAULT && IterablePrototype[DEFAULT];
    var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
    var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
    var CurrentIteratorPrototype, methods, KEY;
    if (anyNativeIterator) {
        CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
        if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
            if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
                if (setPrototypeOf) {
                    setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
                }
                else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
                    defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);
                }
            }
            setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
            if (IS_PURE)
                Iterators[TO_STRING_TAG] = returnThis;
        }
    }
    if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
        if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
            createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
        }
        else {
            INCORRECT_VALUES_NAME = true;
            defaultIterator = function values() { return call(nativeIterator, this); };
        }
    }
    if (DEFAULT) {
        methods = {
            values: getIterationMethod(VALUES),
            keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
            entries: getIterationMethod(ENTRIES)
        };
        if (FORCED)
            for (KEY in methods) {
                if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
                    defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
                }
            }
        else
            $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
    }
    if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
        defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });
    }
    Iterators[NAME] = defaultIterator;
    return methods;
};


/***/ }),

/***/ 77831:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(75834);
var isCallable = __webpack_require__(794);
var isObject = __webpack_require__(8148);
var create = __webpack_require__(93503);
var getPrototypeOf = __webpack_require__(1074);
var defineBuiltIn = __webpack_require__(35065);
var wellKnownSymbol = __webpack_require__(19517);
var IS_PURE = __webpack_require__(70852);
var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;
if ([].keys) {
    arrayIterator = [].keys();
    if (!('next' in arrayIterator))
        BUGGY_SAFARI_ITERATORS = true;
    else {
        PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
        if (PrototypeOfArrayIteratorPrototype !== Object.prototype)
            IteratorPrototype = PrototypeOfArrayIteratorPrototype;
    }
}
var NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {
    var test = {};
    return IteratorPrototype[ITERATOR].call(test) !== test;
});
if (NEW_ITERATOR_PROTOTYPE)
    IteratorPrototype = {};
else if (IS_PURE)
    IteratorPrototype = create(IteratorPrototype);
if (!isCallable(IteratorPrototype[ITERATOR])) {
    defineBuiltIn(IteratorPrototype, ITERATOR, function () {
        return this;
    });
}
module.exports = {
    IteratorPrototype: IteratorPrototype,
    BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ 84922:
/***/ (function(module) {

"use strict";

module.exports = {};


/***/ }),

/***/ 15050:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toLength = __webpack_require__(24431);
module.exports = function (obj) {
    return toLength(obj.length);
};


/***/ }),

/***/ 40846:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
var fails = __webpack_require__(75834);
var isCallable = __webpack_require__(794);
var hasOwn = __webpack_require__(14434);
var DESCRIPTORS = __webpack_require__(13873);
var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(84521).CONFIGURABLE);
var inspectSource = __webpack_require__(92355);
var InternalStateModule = __webpack_require__(56113);
var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var $String = String;
var defineProperty = Object.defineProperty;
var stringSlice = uncurryThis(''.slice);
var replace = uncurryThis(''.replace);
var join = uncurryThis([].join);
var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {
    return defineProperty(function () { }, 'length', { value: 8 }).length !== 8;
});
var TEMPLATE = String(String).split('String');
var makeBuiltIn = module.exports = function (value, name, options) {
    if (stringSlice($String(name), 0, 7) === 'Symbol(') {
        name = '[' + replace($String(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
    }
    if (options && options.getter)
        name = 'get ' + name;
    if (options && options.setter)
        name = 'set ' + name;
    if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
        if (DESCRIPTORS)
            defineProperty(value, 'name', { value: name, configurable: true });
        else
            value.name = name;
    }
    if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {
        defineProperty(value, 'length', { value: options.arity });
    }
    try {
        if (options && hasOwn(options, 'constructor') && options.constructor) {
            if (DESCRIPTORS)
                defineProperty(value, 'prototype', { writable: false });
        }
        else if (value.prototype)
            value.prototype = undefined;
    }
    catch (error) { }
    var state = enforceInternalState(value);
    if (!hasOwn(state, 'source')) {
        state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
    }
    return value;
};
Function.prototype.toString = makeBuiltIn(function toString() {
    return isCallable(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');


/***/ }),

/***/ 43932:
/***/ (function(module) {

"use strict";

var ceil = Math.ceil;
var floor = Math.floor;
module.exports = Math.trunc || function trunc(x) {
    var n = +x;
    return (n > 0 ? floor : ceil)(n);
};


/***/ }),

/***/ 93503:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(52313);
var definePropertiesModule = __webpack_require__(5770);
var enumBugKeys = __webpack_require__(64456);
var hiddenKeys = __webpack_require__(48889);
var html = __webpack_require__(36249);
var documentCreateElement = __webpack_require__(15192);
var sharedKey = __webpack_require__(85475);
var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');
var EmptyConstructor = function () { };
var scriptTag = function (content) {
    return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};
var NullProtoObjectViaActiveX = function (activeXDocument) {
    activeXDocument.write(scriptTag(''));
    activeXDocument.close();
    var temp = activeXDocument.parentWindow.Object;
    activeXDocument = null;
    return temp;
};
var NullProtoObjectViaIFrame = function () {
    var iframe = documentCreateElement('iframe');
    var JS = 'java' + SCRIPT + ':';
    var iframeDocument;
    iframe.style.display = 'none';
    html.appendChild(iframe);
    iframe.src = String(JS);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(scriptTag('document.F=Object'));
    iframeDocument.close();
    return iframeDocument.F;
};
var activeXDocument;
var NullProtoObject = function () {
    try {
        activeXDocument = new ActiveXObject('htmlfile');
    }
    catch (error) { }
    NullProtoObject = typeof document != 'undefined'
        ? document.domain && activeXDocument
            ? NullProtoObjectViaActiveX(activeXDocument)
            : NullProtoObjectViaIFrame()
        : NullProtoObjectViaActiveX(activeXDocument);
    var length = enumBugKeys.length;
    while (length--)
        delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
    return NullProtoObject();
};
hiddenKeys[IE_PROTO] = true;
module.exports = Object.create || function create(O, Properties) {
    var result;
    if (O !== null) {
        EmptyConstructor[PROTOTYPE] = anObject(O);
        result = new EmptyConstructor();
        EmptyConstructor[PROTOTYPE] = null;
        result[IE_PROTO] = O;
    }
    else
        result = NullProtoObject();
    return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};


/***/ }),

/***/ 5770:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(13873);
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(63142);
var definePropertyModule = __webpack_require__(73252);
var anObject = __webpack_require__(52313);
var toIndexedObject = __webpack_require__(98651);
var objectKeys = __webpack_require__(3385);
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
    anObject(O);
    var props = toIndexedObject(Properties);
    var keys = objectKeys(Properties);
    var length = keys.length;
    var index = 0;
    var key;
    while (length > index)
        definePropertyModule.f(O, key = keys[index++], props[key]);
    return O;
};


/***/ }),

/***/ 73252:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(13873);
var IE8_DOM_DEFINE = __webpack_require__(12816);
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(63142);
var anObject = __webpack_require__(52313);
var toPropertyKey = __webpack_require__(43836);
var $TypeError = TypeError;
var $defineProperty = Object.defineProperty;
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
    anObject(O);
    P = toPropertyKey(P);
    anObject(Attributes);
    if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
        var current = $getOwnPropertyDescriptor(O, P);
        if (current && current[WRITABLE]) {
            O[P] = Attributes.value;
            Attributes = {
                configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
                enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
                writable: false
            };
        }
    }
    return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
    anObject(O);
    P = toPropertyKey(P);
    anObject(Attributes);
    if (IE8_DOM_DEFINE)
        try {
            return $defineProperty(O, P, Attributes);
        }
        catch (error) { }
    if ('get' in Attributes || 'set' in Attributes)
        throw $TypeError('Accessors not supported');
    if ('value' in Attributes)
        O[P] = Attributes.value;
    return O;
};


/***/ }),

/***/ 36999:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(13873);
var call = __webpack_require__(9093);
var propertyIsEnumerableModule = __webpack_require__(33244);
var createPropertyDescriptor = __webpack_require__(32500);
var toIndexedObject = __webpack_require__(98651);
var toPropertyKey = __webpack_require__(43836);
var hasOwn = __webpack_require__(14434);
var IE8_DOM_DEFINE = __webpack_require__(12816);
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
    O = toIndexedObject(O);
    P = toPropertyKey(P);
    if (IE8_DOM_DEFINE)
        try {
            return $getOwnPropertyDescriptor(O, P);
        }
        catch (error) { }
    if (hasOwn(O, P))
        return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};


/***/ }),

/***/ 53305:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var classof = __webpack_require__(6285);
var toIndexedObject = __webpack_require__(98651);
var $getOwnPropertyNames = (__webpack_require__(7792).f);
var arraySlice = __webpack_require__(57652);
var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
    ? Object.getOwnPropertyNames(window) : [];
var getWindowNames = function (it) {
    try {
        return $getOwnPropertyNames(it);
    }
    catch (error) {
        return arraySlice(windowNames);
    }
};
module.exports.f = function getOwnPropertyNames(it) {
    return windowNames && classof(it) == 'Window'
        ? getWindowNames(it)
        : $getOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ 7792:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var internalObjectKeys = __webpack_require__(84729);
var enumBugKeys = __webpack_require__(64456);
var hiddenKeys = enumBugKeys.concat('length', 'prototype');
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ 23953:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ 1074:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var hasOwn = __webpack_require__(14434);
var isCallable = __webpack_require__(794);
var toObject = __webpack_require__(68488);
var sharedKey = __webpack_require__(85475);
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(27259);
var IE_PROTO = sharedKey('IE_PROTO');
var $Object = Object;
var ObjectPrototype = $Object.prototype;
module.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {
    var object = toObject(O);
    if (hasOwn(object, IE_PROTO))
        return object[IE_PROTO];
    var constructor = object.constructor;
    if (isCallable(constructor) && object instanceof constructor) {
        return constructor.prototype;
    }
    return object instanceof $Object ? ObjectPrototype : null;
};


/***/ }),

/***/ 54671:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
module.exports = uncurryThis({}.isPrototypeOf);


/***/ }),

/***/ 84729:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
var hasOwn = __webpack_require__(14434);
var toIndexedObject = __webpack_require__(98651);
var indexOf = (__webpack_require__(79327).indexOf);
var hiddenKeys = __webpack_require__(48889);
var push = uncurryThis([].push);
module.exports = function (object, names) {
    var O = toIndexedObject(object);
    var i = 0;
    var result = [];
    var key;
    for (key in O)
        !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
    while (names.length > i)
        if (hasOwn(O, key = names[i++])) {
            ~indexOf(result, key) || push(result, key);
        }
    return result;
};


/***/ }),

/***/ 3385:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var internalObjectKeys = __webpack_require__(84729);
var enumBugKeys = __webpack_require__(64456);
module.exports = Object.keys || function keys(O) {
    return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ 33244:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
    var descriptor = getOwnPropertyDescriptor(this, V);
    return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ 482:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThisAccessor = __webpack_require__(47448);
var anObject = __webpack_require__(52313);
var aPossiblePrototype = __webpack_require__(75839);
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
    var CORRECT_SETTER = false;
    var test = {};
    var setter;
    try {
        setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');
        setter(test, []);
        CORRECT_SETTER = test instanceof Array;
    }
    catch (error) { }
    return function setPrototypeOf(O, proto) {
        anObject(O);
        aPossiblePrototype(proto);
        if (CORRECT_SETTER)
            setter(O, proto);
        else
            O.__proto__ = proto;
        return O;
    };
}() : undefined);


/***/ }),

/***/ 57555:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(6424);
var classof = __webpack_require__(8652);
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
    return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ 82472:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(9093);
var isCallable = __webpack_require__(794);
var isObject = __webpack_require__(8148);
var $TypeError = TypeError;
module.exports = function (input, pref) {
    var fn, val;
    if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))
        return val;
    if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input)))
        return val;
    if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))
        return val;
    throw $TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ 86671:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(98945);
var uncurryThis = __webpack_require__(90838);
var getOwnPropertyNamesModule = __webpack_require__(7792);
var getOwnPropertySymbolsModule = __webpack_require__(23953);
var anObject = __webpack_require__(52313);
var concat = uncurryThis([].concat);
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
    var keys = getOwnPropertyNamesModule.f(anObject(it));
    var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
    return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ 31116:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(37042);
module.exports = global;


/***/ }),

/***/ 60265:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isNullOrUndefined = __webpack_require__(8140);
var $TypeError = TypeError;
module.exports = function (it) {
    if (isNullOrUndefined(it))
        throw $TypeError("Can't call method on " + it);
    return it;
};


/***/ }),

/***/ 44532:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineProperty = (__webpack_require__(73252).f);
var hasOwn = __webpack_require__(14434);
var wellKnownSymbol = __webpack_require__(19517);
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
module.exports = function (target, TAG, STATIC) {
    if (target && !STATIC)
        target = target.prototype;
    if (target && !hasOwn(target, TO_STRING_TAG)) {
        defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });
    }
};


/***/ }),

/***/ 85475:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var shared = __webpack_require__(95138);
var uid = __webpack_require__(15257);
var keys = shared('keys');
module.exports = function (key) {
    return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ 45752:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(37042);
var defineGlobalProperty = __webpack_require__(25379);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || defineGlobalProperty(SHARED, {});
module.exports = store;


/***/ }),

/***/ 95138:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var IS_PURE = __webpack_require__(70852);
var store = __webpack_require__(45752);
(module.exports = function (key, value) {
    return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
    version: '3.28.0',
    mode: IS_PURE ? 'pure' : 'global',
    copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
    license: 'https://github.com/zloirock/core-js/blob/v3.28.0/LICENSE',
    source: 'https://github.com/zloirock/core-js'
});


/***/ }),

/***/ 41397:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
var toIntegerOrInfinity = __webpack_require__(27876);
var toString = __webpack_require__(63046);
var requireObjectCoercible = __webpack_require__(60265);
var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var stringSlice = uncurryThis(''.slice);
var createMethod = function (CONVERT_TO_STRING) {
    return function ($this, pos) {
        var S = toString(requireObjectCoercible($this));
        var position = toIntegerOrInfinity(pos);
        var size = S.length;
        var first, second;
        if (position < 0 || position >= size)
            return CONVERT_TO_STRING ? '' : undefined;
        first = charCodeAt(S, position);
        return first < 0xD800 || first > 0xDBFF || position + 1 === size
            || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
            ? CONVERT_TO_STRING
                ? charAt(S, position)
                : first
            : CONVERT_TO_STRING
                ? stringSlice(S, position, position + 2)
                : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
    };
};
module.exports = {
    codeAt: createMethod(false),
    charAt: createMethod(true)
};


/***/ }),

/***/ 73800:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var V8_VERSION = __webpack_require__(65190);
var fails = __webpack_require__(75834);
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
    var symbol = Symbol();
    return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
        !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ 13829:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(9093);
var getBuiltIn = __webpack_require__(98945);
var wellKnownSymbol = __webpack_require__(19517);
var defineBuiltIn = __webpack_require__(35065);
module.exports = function () {
    var Symbol = getBuiltIn('Symbol');
    var SymbolPrototype = Symbol && Symbol.prototype;
    var valueOf = SymbolPrototype && SymbolPrototype.valueOf;
    var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
    if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {
        defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function (hint) {
            return call(valueOf, this);
        }, { arity: 1 });
    }
};


/***/ }),

/***/ 31948:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_SYMBOL = __webpack_require__(73800);
module.exports = NATIVE_SYMBOL && !!Symbol['for'] && !!Symbol.keyFor;


/***/ }),

/***/ 10586:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIntegerOrInfinity = __webpack_require__(27876);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
    var integer = toIntegerOrInfinity(index);
    return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ 98651:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var IndexedObject = __webpack_require__(25049);
var requireObjectCoercible = __webpack_require__(60265);
module.exports = function (it) {
    return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ 27876:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var trunc = __webpack_require__(43932);
module.exports = function (argument) {
    var number = +argument;
    return number !== number || number === 0 ? 0 : trunc(number);
};


/***/ }),

/***/ 24431:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIntegerOrInfinity = __webpack_require__(27876);
var min = Math.min;
module.exports = function (argument) {
    return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0;
};


/***/ }),

/***/ 68488:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var requireObjectCoercible = __webpack_require__(60265);
var $Object = Object;
module.exports = function (argument) {
    return $Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ 11261:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(9093);
var isObject = __webpack_require__(8148);
var isSymbol = __webpack_require__(88253);
var getMethod = __webpack_require__(20156);
var ordinaryToPrimitive = __webpack_require__(82472);
var wellKnownSymbol = __webpack_require__(19517);
var $TypeError = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
module.exports = function (input, pref) {
    if (!isObject(input) || isSymbol(input))
        return input;
    var exoticToPrim = getMethod(input, TO_PRIMITIVE);
    var result;
    if (exoticToPrim) {
        if (pref === undefined)
            pref = 'default';
        result = call(exoticToPrim, input, pref);
        if (!isObject(result) || isSymbol(result))
            return result;
        throw $TypeError("Can't convert object to primitive value");
    }
    if (pref === undefined)
        pref = 'number';
    return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ 43836:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__(11261);
var isSymbol = __webpack_require__(88253);
module.exports = function (argument) {
    var key = toPrimitive(argument, 'string');
    return isSymbol(key) ? key : key + '';
};


/***/ }),

/***/ 6424:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var wellKnownSymbol = __webpack_require__(19517);
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};
test[TO_STRING_TAG] = 'z';
module.exports = String(test) === '[object z]';


/***/ }),

/***/ 63046:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var classof = __webpack_require__(8652);
var $String = String;
module.exports = function (argument) {
    if (classof(argument) === 'Symbol')
        throw TypeError('Cannot convert a Symbol value to a string');
    return $String(argument);
};


/***/ }),

/***/ 98418:
/***/ (function(module) {

"use strict";

var $String = String;
module.exports = function (argument) {
    try {
        return $String(argument);
    }
    catch (error) {
        return 'Object';
    }
};


/***/ }),

/***/ 15257:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(90838);
var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);
module.exports = function (key) {
    return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};


/***/ }),

/***/ 57982:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_SYMBOL = __webpack_require__(73800);
module.exports = NATIVE_SYMBOL
    && !Symbol.sham
    && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ 63142:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(13873);
var fails = __webpack_require__(75834);
module.exports = DESCRIPTORS && fails(function () {
    return Object.defineProperty(function () { }, 'prototype', {
        value: 42,
        writable: false
    }).prototype != 42;
});


/***/ }),

/***/ 95473:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(37042);
var isCallable = __webpack_require__(794);
var WeakMap = global.WeakMap;
module.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));


/***/ }),

/***/ 89633:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var path = __webpack_require__(31116);
var hasOwn = __webpack_require__(14434);
var wrappedWellKnownSymbolModule = __webpack_require__(96767);
var defineProperty = (__webpack_require__(73252).f);
module.exports = function (NAME) {
    var Symbol = path.Symbol || (path.Symbol = {});
    if (!hasOwn(Symbol, NAME))
        defineProperty(Symbol, NAME, {
            value: wrappedWellKnownSymbolModule.f(NAME)
        });
};


/***/ }),

/***/ 96767:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var wellKnownSymbol = __webpack_require__(19517);
exports.f = wellKnownSymbol;


/***/ }),

/***/ 19517:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(37042);
var shared = __webpack_require__(95138);
var hasOwn = __webpack_require__(14434);
var uid = __webpack_require__(15257);
var NATIVE_SYMBOL = __webpack_require__(73800);
var USE_SYMBOL_AS_UID = __webpack_require__(57982);
var Symbol = global.Symbol;
var WellKnownSymbolsStore = shared('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;
module.exports = function (name) {
    if (!hasOwn(WellKnownSymbolsStore, name)) {
        WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)
            ? Symbol[name]
            : createWellKnownSymbol('Symbol.' + name);
    }
    return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ 54166:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(50791);
var fails = __webpack_require__(75834);
var isArray = __webpack_require__(36222);
var isObject = __webpack_require__(8148);
var toObject = __webpack_require__(68488);
var lengthOfArrayLike = __webpack_require__(15050);
var doesNotExceedSafeInteger = __webpack_require__(39505);
var createProperty = __webpack_require__(89476);
var arraySpeciesCreate = __webpack_require__(6429);
var arrayMethodHasSpeciesSupport = __webpack_require__(63833);
var wellKnownSymbol = __webpack_require__(19517);
var V8_VERSION = __webpack_require__(65190);
var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
    var array = [];
    array[IS_CONCAT_SPREADABLE] = false;
    return array.concat()[0] !== array;
});
var isConcatSpreadable = function (O) {
    if (!isObject(O))
        return false;
    var spreadable = O[IS_CONCAT_SPREADABLE];
    return spreadable !== undefined ? !!spreadable : isArray(O);
};
var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport('concat');
$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {
    concat: function concat(arg) {
        var O = toObject(this);
        var A = arraySpeciesCreate(O, 0);
        var n = 0;
        var i, k, length, len, E;
        for (i = -1, length = arguments.length; i < length; i++) {
            E = i === -1 ? O : arguments[i];
            if (isConcatSpreadable(E)) {
                len = lengthOfArrayLike(E);
                doesNotExceedSafeInteger(n + len);
                for (k = 0; k < len; k++, n++)
                    if (k in E)
                        createProperty(A, n, E[k]);
            }
            else {
                doesNotExceedSafeInteger(n + 1);
                createProperty(A, n++, E);
            }
        }
        A.length = n;
        return A;
    }
});


/***/ }),

/***/ 22513:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(50791);
var $findIndex = (__webpack_require__(56881).findIndex);
var addToUnscopables = __webpack_require__(15179);
var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true;
if (FIND_INDEX in [])
    Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });
$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
    findIndex: function findIndex(callbackfn) {
        return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
});
addToUnscopables(FIND_INDEX);


/***/ }),

/***/ 70057:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(50791);
var from = __webpack_require__(92707);
var checkCorrectnessOfIteration = __webpack_require__(7581);
var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
    Array.from(iterable);
});
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
    from: from
});


/***/ }),

/***/ 67507:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(50791);
var getBuiltIn = __webpack_require__(98945);
var apply = __webpack_require__(55101);
var call = __webpack_require__(9093);
var uncurryThis = __webpack_require__(90838);
var fails = __webpack_require__(75834);
var isCallable = __webpack_require__(794);
var isSymbol = __webpack_require__(88253);
var arraySlice = __webpack_require__(54832);
var getReplacerFunction = __webpack_require__(6693);
var NATIVE_SYMBOL = __webpack_require__(73800);
var $String = String;
var $stringify = getBuiltIn('JSON', 'stringify');
var exec = uncurryThis(/./.exec);
var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var replace = uncurryThis(''.replace);
var numberToString = uncurryThis(1.0.toString);
var tester = /[\uD800-\uDFFF]/g;
var low = /^[\uD800-\uDBFF]$/;
var hi = /^[\uDC00-\uDFFF]$/;
var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {
    var symbol = getBuiltIn('Symbol')();
    return $stringify([symbol]) != '[null]'
        || $stringify({ a: symbol }) != '{}'
        || $stringify(Object(symbol)) != '{}';
});
var ILL_FORMED_UNICODE = fails(function () {
    return $stringify('\uDF06\uD834') !== '"\\udf06\\ud834"'
        || $stringify('\uDEAD') !== '"\\udead"';
});
var stringifyWithSymbolsFix = function (it, replacer) {
    var args = arraySlice(arguments);
    var $replacer = getReplacerFunction(replacer);
    if (!isCallable($replacer) && (it === undefined || isSymbol(it)))
        return;
    args[1] = function (key, value) {
        if (isCallable($replacer))
            value = call($replacer, this, $String(key), value);
        if (!isSymbol(value))
            return value;
    };
    return apply($stringify, null, args);
};
var fixIllFormed = function (match, offset, string) {
    var prev = charAt(string, offset - 1);
    var next = charAt(string, offset + 1);
    if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {
        return '\\u' + numberToString(charCodeAt(match, 0), 16);
    }
    return match;
};
if ($stringify) {
    $({ target: 'JSON', stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {
        stringify: function stringify(it, replacer, space) {
            var args = arraySlice(arguments);
            var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
            return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;
        }
    });
}


/***/ }),

/***/ 90217:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(37042);
var setToStringTag = __webpack_require__(44532);
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ 73477:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var setToStringTag = __webpack_require__(44532);
setToStringTag(Math, 'Math', true);


/***/ }),

/***/ 30165:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(50791);
var NATIVE_SYMBOL = __webpack_require__(73800);
var fails = __webpack_require__(75834);
var getOwnPropertySymbolsModule = __webpack_require__(23953);
var toObject = __webpack_require__(68488);
var FORCED = !NATIVE_SYMBOL || fails(function () { getOwnPropertySymbolsModule.f(1); });
$({ target: 'Object', stat: true, forced: FORCED }, {
    getOwnPropertySymbols: function getOwnPropertySymbols(it) {
        var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
        return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];
    }
});


/***/ }),

/***/ 32044:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(6424);
var defineBuiltIn = __webpack_require__(35065);
var toString = __webpack_require__(57555);
if (!TO_STRING_TAG_SUPPORT) {
    defineBuiltIn(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ 93697:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(50791);
var global = __webpack_require__(37042);
var setToStringTag = __webpack_require__(44532);
$({ global: true }, { Reflect: {} });
setToStringTag(global.Reflect, 'Reflect', true);


/***/ }),

/***/ 52867:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var charAt = (__webpack_require__(41397).charAt);
var toString = __webpack_require__(63046);
var InternalStateModule = __webpack_require__(56113);
var defineIterator = __webpack_require__(13759);
var createIterResultObject = __webpack_require__(17427);
var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);
defineIterator(String, 'String', function (iterated) {
    setInternalState(this, {
        type: STRING_ITERATOR,
        string: toString(iterated),
        index: 0
    });
}, function next() {
    var state = getInternalState(this);
    var string = state.string;
    var index = state.index;
    var point;
    if (index >= string.length)
        return createIterResultObject(undefined, true);
    point = charAt(string, index);
    state.index += point.length;
    return createIterResultObject(point, false);
});


/***/ }),

/***/ 28424:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
defineWellKnownSymbol('asyncIterator');


/***/ }),

/***/ 9656:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(50791);
var global = __webpack_require__(37042);
var call = __webpack_require__(9093);
var uncurryThis = __webpack_require__(90838);
var IS_PURE = __webpack_require__(70852);
var DESCRIPTORS = __webpack_require__(13873);
var NATIVE_SYMBOL = __webpack_require__(73800);
var fails = __webpack_require__(75834);
var hasOwn = __webpack_require__(14434);
var isPrototypeOf = __webpack_require__(54671);
var anObject = __webpack_require__(52313);
var toIndexedObject = __webpack_require__(98651);
var toPropertyKey = __webpack_require__(43836);
var $toString = __webpack_require__(63046);
var createPropertyDescriptor = __webpack_require__(32500);
var nativeObjectCreate = __webpack_require__(93503);
var objectKeys = __webpack_require__(3385);
var getOwnPropertyNamesModule = __webpack_require__(7792);
var getOwnPropertyNamesExternal = __webpack_require__(53305);
var getOwnPropertySymbolsModule = __webpack_require__(23953);
var getOwnPropertyDescriptorModule = __webpack_require__(36999);
var definePropertyModule = __webpack_require__(73252);
var definePropertiesModule = __webpack_require__(5770);
var propertyIsEnumerableModule = __webpack_require__(33244);
var defineBuiltIn = __webpack_require__(35065);
var defineBuiltInAccessor = __webpack_require__(97548);
var shared = __webpack_require__(95138);
var sharedKey = __webpack_require__(85475);
var hiddenKeys = __webpack_require__(48889);
var uid = __webpack_require__(15257);
var wellKnownSymbol = __webpack_require__(19517);
var wrappedWellKnownSymbolModule = __webpack_require__(96767);
var defineWellKnownSymbol = __webpack_require__(89633);
var defineSymbolToPrimitive = __webpack_require__(13829);
var setToStringTag = __webpack_require__(44532);
var InternalStateModule = __webpack_require__(56113);
var $forEach = (__webpack_require__(56881).forEach);
var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
var TypeError = global.TypeError;
var QObject = global.QObject;
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var push = uncurryThis([].push);
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var WellKnownSymbolsStore = shared('wks');
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
    return nativeObjectCreate(nativeDefineProperty({}, 'a', {
        get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
    })).a != 7;
}) ? function (O, P, Attributes) {
    var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
    if (ObjectPrototypeDescriptor)
        delete ObjectPrototype[P];
    nativeDefineProperty(O, P, Attributes);
    if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
        nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
    }
} : nativeDefineProperty;
var wrap = function (tag, description) {
    var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
    setInternalState(symbol, {
        type: SYMBOL,
        tag: tag,
        description: description
    });
    if (!DESCRIPTORS)
        symbol.description = description;
    return symbol;
};
var $defineProperty = function defineProperty(O, P, Attributes) {
    if (O === ObjectPrototype)
        $defineProperty(ObjectPrototypeSymbols, P, Attributes);
    anObject(O);
    var key = toPropertyKey(P);
    anObject(Attributes);
    if (hasOwn(AllSymbols, key)) {
        if (!Attributes.enumerable) {
            if (!hasOwn(O, HIDDEN))
                nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
            O[HIDDEN][key] = true;
        }
        else {
            if (hasOwn(O, HIDDEN) && O[HIDDEN][key])
                O[HIDDEN][key] = false;
            Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
        }
        return setSymbolDescriptor(O, key, Attributes);
    }
    return nativeDefineProperty(O, key, Attributes);
};
var $defineProperties = function defineProperties(O, Properties) {
    anObject(O);
    var properties = toIndexedObject(Properties);
    var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
    $forEach(keys, function (key) {
        if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key))
            $defineProperty(O, key, properties[key]);
    });
    return O;
};
var $create = function create(O, Properties) {
    return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};
var $propertyIsEnumerable = function propertyIsEnumerable(V) {
    var P = toPropertyKey(V);
    var enumerable = call(nativePropertyIsEnumerable, this, P);
    if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P))
        return false;
    return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]
        ? enumerable : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
    var it = toIndexedObject(O);
    var key = toPropertyKey(P);
    if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key))
        return;
    var descriptor = nativeGetOwnPropertyDescriptor(it, key);
    if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {
        descriptor.enumerable = true;
    }
    return descriptor;
};
var $getOwnPropertyNames = function getOwnPropertyNames(O) {
    var names = nativeGetOwnPropertyNames(toIndexedObject(O));
    var result = [];
    $forEach(names, function (key) {
        if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key))
            push(result, key);
    });
    return result;
};
var $getOwnPropertySymbols = function (O) {
    var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
    var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
    var result = [];
    $forEach(names, function (key) {
        if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {
            push(result, AllSymbols[key]);
        }
    });
    return result;
};
if (!NATIVE_SYMBOL) {
    $Symbol = function Symbol() {
        if (isPrototypeOf(SymbolPrototype, this))
            throw TypeError('Symbol is not a constructor');
        var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);
        var tag = uid(description);
        var setter = function (value) {
            if (this === ObjectPrototype)
                call(setter, ObjectPrototypeSymbols, value);
            if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag))
                this[HIDDEN][tag] = false;
            setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
        };
        if (DESCRIPTORS && USE_SETTER)
            setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
        return wrap(tag, description);
    };
    SymbolPrototype = $Symbol[PROTOTYPE];
    defineBuiltIn(SymbolPrototype, 'toString', function toString() {
        return getInternalState(this).tag;
    });
    defineBuiltIn($Symbol, 'withoutSetter', function (description) {
        return wrap(uid(description), description);
    });
    propertyIsEnumerableModule.f = $propertyIsEnumerable;
    definePropertyModule.f = $defineProperty;
    definePropertiesModule.f = $defineProperties;
    getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
    getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
    getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;
    wrappedWellKnownSymbolModule.f = function (name) {
        return wrap(wellKnownSymbol(name), name);
    };
    if (DESCRIPTORS) {
        defineBuiltInAccessor(SymbolPrototype, 'description', {
            configurable: true,
            get: function description() {
                return getInternalState(this).description;
            }
        });
        if (!IS_PURE) {
            defineBuiltIn(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
        }
    }
}
$({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
    Symbol: $Symbol
});
$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
    defineWellKnownSymbol(name);
});
$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
    useSetter: function () { USE_SETTER = true; },
    useSimple: function () { USE_SETTER = false; }
});
$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
    create: $create,
    defineProperty: $defineProperty,
    defineProperties: $defineProperties,
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});
$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
    getOwnPropertyNames: $getOwnPropertyNames
});
defineSymbolToPrimitive();
setToStringTag($Symbol, SYMBOL);
hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ 64514:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(50791);
var DESCRIPTORS = __webpack_require__(13873);
var global = __webpack_require__(37042);
var uncurryThis = __webpack_require__(90838);
var hasOwn = __webpack_require__(14434);
var isCallable = __webpack_require__(794);
var isPrototypeOf = __webpack_require__(54671);
var toString = __webpack_require__(63046);
var defineBuiltInAccessor = __webpack_require__(97548);
var copyConstructorProperties = __webpack_require__(58392);
var NativeSymbol = global.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;
if (DESCRIPTORS && isCallable(NativeSymbol) && (!('description' in SymbolPrototype) ||
    NativeSymbol().description !== undefined)) {
    var EmptyStringDescriptionStore = {};
    var SymbolWrapper = function Symbol() {
        var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString(arguments[0]);
        var result = isPrototypeOf(SymbolPrototype, this)
            ? new NativeSymbol(description)
            : description === undefined ? NativeSymbol() : NativeSymbol(description);
        if (description === '')
            EmptyStringDescriptionStore[result] = true;
        return result;
    };
    copyConstructorProperties(SymbolWrapper, NativeSymbol);
    SymbolWrapper.prototype = SymbolPrototype;
    SymbolPrototype.constructor = SymbolWrapper;
    var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';
    var thisSymbolValue = uncurryThis(SymbolPrototype.valueOf);
    var symbolDescriptiveString = uncurryThis(SymbolPrototype.toString);
    var regexp = /^Symbol\((.*)\)[^)]+$/;
    var replace = uncurryThis(''.replace);
    var stringSlice = uncurryThis(''.slice);
    defineBuiltInAccessor(SymbolPrototype, 'description', {
        configurable: true,
        get: function description() {
            var symbol = thisSymbolValue(this);
            if (hasOwn(EmptyStringDescriptionStore, symbol))
                return '';
            var string = symbolDescriptiveString(symbol);
            var desc = NATIVE_SYMBOL ? stringSlice(string, 7, -1) : replace(string, regexp, '$1');
            return desc === '' ? undefined : desc;
        }
    });
    $({ global: true, constructor: true, forced: true }, {
        Symbol: SymbolWrapper
    });
}


/***/ }),

/***/ 56202:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(50791);
var getBuiltIn = __webpack_require__(98945);
var hasOwn = __webpack_require__(14434);
var toString = __webpack_require__(63046);
var shared = __webpack_require__(95138);
var NATIVE_SYMBOL_REGISTRY = __webpack_require__(31948);
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {
    'for': function (key) {
        var string = toString(key);
        if (hasOwn(StringToSymbolRegistry, string))
            return StringToSymbolRegistry[string];
        var symbol = getBuiltIn('Symbol')(string);
        StringToSymbolRegistry[string] = symbol;
        SymbolToStringRegistry[symbol] = string;
        return symbol;
    }
});


/***/ }),

/***/ 30733:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
defineWellKnownSymbol('hasInstance');


/***/ }),

/***/ 40327:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
defineWellKnownSymbol('isConcatSpreadable');


/***/ }),

/***/ 53639:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
defineWellKnownSymbol('iterator');


/***/ }),

/***/ 95661:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

__webpack_require__(9656);
__webpack_require__(56202);
__webpack_require__(71940);
__webpack_require__(67507);
__webpack_require__(30165);


/***/ }),

/***/ 71940:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(50791);
var hasOwn = __webpack_require__(14434);
var isSymbol = __webpack_require__(88253);
var tryToString = __webpack_require__(98418);
var shared = __webpack_require__(95138);
var NATIVE_SYMBOL_REGISTRY = __webpack_require__(31948);
var SymbolToStringRegistry = shared('symbol-to-string-registry');
$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {
    keyFor: function keyFor(sym) {
        if (!isSymbol(sym))
            throw TypeError(tryToString(sym) + ' is not a symbol');
        if (hasOwn(SymbolToStringRegistry, sym))
            return SymbolToStringRegistry[sym];
    }
});


/***/ }),

/***/ 7290:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
defineWellKnownSymbol('matchAll');


/***/ }),

/***/ 6147:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
defineWellKnownSymbol('match');


/***/ }),

/***/ 95122:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
defineWellKnownSymbol('replace');


/***/ }),

/***/ 61322:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
defineWellKnownSymbol('search');


/***/ }),

/***/ 39605:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
defineWellKnownSymbol('species');


/***/ }),

/***/ 49341:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
defineWellKnownSymbol('split');


/***/ }),

/***/ 28809:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
var defineSymbolToPrimitive = __webpack_require__(13829);
defineWellKnownSymbol('toPrimitive');
defineSymbolToPrimitive();


/***/ }),

/***/ 82658:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(98945);
var defineWellKnownSymbol = __webpack_require__(89633);
var setToStringTag = __webpack_require__(44532);
defineWellKnownSymbol('toStringTag');
setToStringTag(getBuiltIn('Symbol'), 'Symbol');


/***/ }),

/***/ 43967:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineWellKnownSymbol = __webpack_require__(89633);
defineWellKnownSymbol('unscopables');


/***/ }),

/***/ 690:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

module.exports = (__webpack_require__(26002).polyfill)();


/***/ }),

/***/ 26002:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   v4.2.8+1e68dce6
 */
(function (global, factory) {
     true ? module.exports = factory() :
        0;
}(this, (function () {
    'use strict';
    function objectOrFunction(x) {
        var type = typeof x;
        return x !== null && (type === 'object' || type === 'function');
    }
    function isFunction(x) {
        return typeof x === 'function';
    }
    var _isArray = void 0;
    if (Array.isArray) {
        _isArray = Array.isArray;
    }
    else {
        _isArray = function (x) {
            return Object.prototype.toString.call(x) === '[object Array]';
        };
    }
    var isArray = _isArray;
    var len = 0;
    var vertxNext = void 0;
    var customSchedulerFn = void 0;
    var asap = function asap(callback, arg) {
        queue[len] = callback;
        queue[len + 1] = arg;
        len += 2;
        if (len === 2) {
            if (customSchedulerFn) {
                customSchedulerFn(flush);
            }
            else {
                scheduleFlush();
            }
        }
    };
    function setScheduler(scheduleFn) {
        customSchedulerFn = scheduleFn;
    }
    function setAsap(asapFn) {
        asap = asapFn;
    }
    var browserWindow = typeof window !== 'undefined' ? window : undefined;
    var browserGlobal = browserWindow || {};
    var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
    var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';
    var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';
    function useNextTick() {
        return function () {
            return process.nextTick(flush);
        };
    }
    function useVertxTimer() {
        if (typeof vertxNext !== 'undefined') {
            return function () {
                vertxNext(flush);
            };
        }
        return useSetTimeout();
    }
    function useMutationObserver() {
        var iterations = 0;
        var observer = new BrowserMutationObserver(flush);
        var node = document.createTextNode('');
        observer.observe(node, { characterData: true });
        return function () {
            node.data = iterations = ++iterations % 2;
        };
    }
    function useMessageChannel() {
        var channel = new MessageChannel();
        channel.port1.onmessage = flush;
        return function () {
            return channel.port2.postMessage(0);
        };
    }
    function useSetTimeout() {
        var globalSetTimeout = setTimeout;
        return function () {
            return globalSetTimeout(flush, 1);
        };
    }
    var queue = new Array(1000);
    function flush() {
        for (var i = 0; i < len; i += 2) {
            var callback = queue[i];
            var arg = queue[i + 1];
            callback(arg);
            queue[i] = undefined;
            queue[i + 1] = undefined;
        }
        len = 0;
    }
    function attemptVertx() {
        try {
            var vertx = Function('return this')().require('vertx');
            vertxNext = vertx.runOnLoop || vertx.runOnContext;
            return useVertxTimer();
        }
        catch (e) {
            return useSetTimeout();
        }
    }
    var scheduleFlush = void 0;
    if (isNode) {
        scheduleFlush = useNextTick();
    }
    else if (BrowserMutationObserver) {
        scheduleFlush = useMutationObserver();
    }
    else if (isWorker) {
        scheduleFlush = useMessageChannel();
    }
    else if (browserWindow === undefined && "function" === 'function') {
        scheduleFlush = attemptVertx();
    }
    else {
        scheduleFlush = useSetTimeout();
    }
    function then(onFulfillment, onRejection) {
        var parent = this;
        var child = new this.constructor(noop);
        if (child[PROMISE_ID] === undefined) {
            makePromise(child);
        }
        var _state = parent._state;
        if (_state) {
            var callback = arguments[_state - 1];
            asap(function () {
                return invokeCallback(_state, child, callback, parent._result);
            });
        }
        else {
            subscribe(parent, child, onFulfillment, onRejection);
        }
        return child;
    }
    function resolve$1(object) {
        var Constructor = this;
        if (object && typeof object === 'object' && object.constructor === Constructor) {
            return object;
        }
        var promise = new Constructor(noop);
        resolve(promise, object);
        return promise;
    }
    var PROMISE_ID = Math.random().toString(36).substring(2);
    function noop() { }
    var PENDING = void 0;
    var FULFILLED = 1;
    var REJECTED = 2;
    function selfFulfillment() {
        return new TypeError("You cannot resolve a promise with itself");
    }
    function cannotReturnOwn() {
        return new TypeError('A promises callback cannot return that same promise.');
    }
    function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {
        try {
            then$$1.call(value, fulfillmentHandler, rejectionHandler);
        }
        catch (e) {
            return e;
        }
    }
    function handleForeignThenable(promise, thenable, then$$1) {
        asap(function (promise) {
            var sealed = false;
            var error = tryThen(then$$1, thenable, function (value) {
                if (sealed) {
                    return;
                }
                sealed = true;
                if (thenable !== value) {
                    resolve(promise, value);
                }
                else {
                    fulfill(promise, value);
                }
            }, function (reason) {
                if (sealed) {
                    return;
                }
                sealed = true;
                reject(promise, reason);
            }, 'Settle: ' + (promise._label || ' unknown promise'));
            if (!sealed && error) {
                sealed = true;
                reject(promise, error);
            }
        }, promise);
    }
    function handleOwnThenable(promise, thenable) {
        if (thenable._state === FULFILLED) {
            fulfill(promise, thenable._result);
        }
        else if (thenable._state === REJECTED) {
            reject(promise, thenable._result);
        }
        else {
            subscribe(thenable, undefined, function (value) {
                return resolve(promise, value);
            }, function (reason) {
                return reject(promise, reason);
            });
        }
    }
    function handleMaybeThenable(promise, maybeThenable, then$$1) {
        if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {
            handleOwnThenable(promise, maybeThenable);
        }
        else {
            if (then$$1 === undefined) {
                fulfill(promise, maybeThenable);
            }
            else if (isFunction(then$$1)) {
                handleForeignThenable(promise, maybeThenable, then$$1);
            }
            else {
                fulfill(promise, maybeThenable);
            }
        }
    }
    function resolve(promise, value) {
        if (promise === value) {
            reject(promise, selfFulfillment());
        }
        else if (objectOrFunction(value)) {
            var then$$1 = void 0;
            try {
                then$$1 = value.then;
            }
            catch (error) {
                reject(promise, error);
                return;
            }
            handleMaybeThenable(promise, value, then$$1);
        }
        else {
            fulfill(promise, value);
        }
    }
    function publishRejection(promise) {
        if (promise._onerror) {
            promise._onerror(promise._result);
        }
        publish(promise);
    }
    function fulfill(promise, value) {
        if (promise._state !== PENDING) {
            return;
        }
        promise._result = value;
        promise._state = FULFILLED;
        if (promise._subscribers.length !== 0) {
            asap(publish, promise);
        }
    }
    function reject(promise, reason) {
        if (promise._state !== PENDING) {
            return;
        }
        promise._state = REJECTED;
        promise._result = reason;
        asap(publishRejection, promise);
    }
    function subscribe(parent, child, onFulfillment, onRejection) {
        var _subscribers = parent._subscribers;
        var length = _subscribers.length;
        parent._onerror = null;
        _subscribers[length] = child;
        _subscribers[length + FULFILLED] = onFulfillment;
        _subscribers[length + REJECTED] = onRejection;
        if (length === 0 && parent._state) {
            asap(publish, parent);
        }
    }
    function publish(promise) {
        var subscribers = promise._subscribers;
        var settled = promise._state;
        if (subscribers.length === 0) {
            return;
        }
        var child = void 0, callback = void 0, detail = promise._result;
        for (var i = 0; i < subscribers.length; i += 3) {
            child = subscribers[i];
            callback = subscribers[i + settled];
            if (child) {
                invokeCallback(settled, child, callback, detail);
            }
            else {
                callback(detail);
            }
        }
        promise._subscribers.length = 0;
    }
    function invokeCallback(settled, promise, callback, detail) {
        var hasCallback = isFunction(callback), value = void 0, error = void 0, succeeded = true;
        if (hasCallback) {
            try {
                value = callback(detail);
            }
            catch (e) {
                succeeded = false;
                error = e;
            }
            if (promise === value) {
                reject(promise, cannotReturnOwn());
                return;
            }
        }
        else {
            value = detail;
        }
        if (promise._state !== PENDING) {
        }
        else if (hasCallback && succeeded) {
            resolve(promise, value);
        }
        else if (succeeded === false) {
            reject(promise, error);
        }
        else if (settled === FULFILLED) {
            fulfill(promise, value);
        }
        else if (settled === REJECTED) {
            reject(promise, value);
        }
    }
    function initializePromise(promise, resolver) {
        try {
            resolver(function resolvePromise(value) {
                resolve(promise, value);
            }, function rejectPromise(reason) {
                reject(promise, reason);
            });
        }
        catch (e) {
            reject(promise, e);
        }
    }
    var id = 0;
    function nextId() {
        return id++;
    }
    function makePromise(promise) {
        promise[PROMISE_ID] = id++;
        promise._state = undefined;
        promise._result = undefined;
        promise._subscribers = [];
    }
    function validationError() {
        return new Error('Array Methods must be provided an Array');
    }
    var Enumerator = function () {
        function Enumerator(Constructor, input) {
            this._instanceConstructor = Constructor;
            this.promise = new Constructor(noop);
            if (!this.promise[PROMISE_ID]) {
                makePromise(this.promise);
            }
            if (isArray(input)) {
                this.length = input.length;
                this._remaining = input.length;
                this._result = new Array(this.length);
                if (this.length === 0) {
                    fulfill(this.promise, this._result);
                }
                else {
                    this.length = this.length || 0;
                    this._enumerate(input);
                    if (this._remaining === 0) {
                        fulfill(this.promise, this._result);
                    }
                }
            }
            else {
                reject(this.promise, validationError());
            }
        }
        Enumerator.prototype._enumerate = function _enumerate(input) {
            for (var i = 0; this._state === PENDING && i < input.length; i++) {
                this._eachEntry(input[i], i);
            }
        };
        Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {
            var c = this._instanceConstructor;
            var resolve$$1 = c.resolve;
            if (resolve$$1 === resolve$1) {
                var _then = void 0;
                var error = void 0;
                var didError = false;
                try {
                    _then = entry.then;
                }
                catch (e) {
                    didError = true;
                    error = e;
                }
                if (_then === then && entry._state !== PENDING) {
                    this._settledAt(entry._state, i, entry._result);
                }
                else if (typeof _then !== 'function') {
                    this._remaining--;
                    this._result[i] = entry;
                }
                else if (c === Promise$1) {
                    var promise = new c(noop);
                    if (didError) {
                        reject(promise, error);
                    }
                    else {
                        handleMaybeThenable(promise, entry, _then);
                    }
                    this._willSettleAt(promise, i);
                }
                else {
                    this._willSettleAt(new c(function (resolve$$1) {
                        return resolve$$1(entry);
                    }), i);
                }
            }
            else {
                this._willSettleAt(resolve$$1(entry), i);
            }
        };
        Enumerator.prototype._settledAt = function _settledAt(state, i, value) {
            var promise = this.promise;
            if (promise._state === PENDING) {
                this._remaining--;
                if (state === REJECTED) {
                    reject(promise, value);
                }
                else {
                    this._result[i] = value;
                }
            }
            if (this._remaining === 0) {
                fulfill(promise, this._result);
            }
        };
        Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {
            var enumerator = this;
            subscribe(promise, undefined, function (value) {
                return enumerator._settledAt(FULFILLED, i, value);
            }, function (reason) {
                return enumerator._settledAt(REJECTED, i, reason);
            });
        };
        return Enumerator;
    }();
    function all(entries) {
        return new Enumerator(this, entries).promise;
    }
    function race(entries) {
        var Constructor = this;
        if (!isArray(entries)) {
            return new Constructor(function (_, reject) {
                return reject(new TypeError('You must pass an array to race.'));
            });
        }
        else {
            return new Constructor(function (resolve, reject) {
                var length = entries.length;
                for (var i = 0; i < length; i++) {
                    Constructor.resolve(entries[i]).then(resolve, reject);
                }
            });
        }
    }
    function reject$1(reason) {
        var Constructor = this;
        var promise = new Constructor(noop);
        reject(promise, reason);
        return promise;
    }
    function needsResolver() {
        throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
    }
    function needsNew() {
        throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
    }
    var Promise$1 = function () {
        function Promise(resolver) {
            this[PROMISE_ID] = nextId();
            this._result = this._state = undefined;
            this._subscribers = [];
            if (noop !== resolver) {
                typeof resolver !== 'function' && needsResolver();
                this instanceof Promise ? initializePromise(this, resolver) : needsNew();
            }
        }
        Promise.prototype.catch = function _catch(onRejection) {
            return this.then(null, onRejection);
        };
        Promise.prototype.finally = function _finally(callback) {
            var promise = this;
            var constructor = promise.constructor;
            if (isFunction(callback)) {
                return promise.then(function (value) {
                    return constructor.resolve(callback()).then(function () {
                        return value;
                    });
                }, function (reason) {
                    return constructor.resolve(callback()).then(function () {
                        throw reason;
                    });
                });
            }
            return promise.then(callback, callback);
        };
        return Promise;
    }();
    Promise$1.prototype.then = then;
    Promise$1.all = all;
    Promise$1.race = race;
    Promise$1.resolve = resolve$1;
    Promise$1.reject = reject$1;
    Promise$1._setScheduler = setScheduler;
    Promise$1._setAsap = setAsap;
    Promise$1._asap = asap;
    function polyfill() {
        var local = void 0;
        if (typeof __webpack_require__.g !== 'undefined') {
            local = __webpack_require__.g;
        }
        else if (typeof self !== 'undefined') {
            local = self;
        }
        else {
            try {
                local = Function('return this')();
            }
            catch (e) {
                throw new Error('polyfill failed because global object is unavailable in this environment');
            }
        }
        var P = local.Promise;
        if (P) {
            var promiseToString = null;
            try {
                promiseToString = Object.prototype.toString.call(P.resolve());
            }
            catch (e) {
            }
            if (promiseToString === '[object Promise]' && !P.cast) {
                return;
            }
        }
        local.Promise = Promise$1;
    }
    Promise$1.polyfill = polyfill;
    Promise$1.Promise = Promise$1;
    return Promise$1;
})));


/***/ }),

/***/ 20255:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.__classPrivateFieldIn = exports.__classPrivateFieldSet = exports.__classPrivateFieldGet = exports.__importDefault = exports.__importStar = exports.__makeTemplateObject = exports.__asyncValues = exports.__asyncDelegator = exports.__asyncGenerator = exports.__await = exports.__spreadArray = exports.__spreadArrays = exports.__spread = exports.__read = exports.__values = exports.__exportStar = exports.__createBinding = exports.__generator = exports.__awaiter = exports.__metadata = exports.__setFunctionName = exports.__propKey = exports.__runInitializers = exports.__esDecorate = exports.__param = exports.__decorate = exports.__rest = exports.__assign = exports.__extends = void 0;
var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b)
            if (Object.prototype.hasOwnProperty.call(b, p))
                d[p] = b[p]; };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
exports.__extends = __extends;
var __assign = function () {
    exports.__assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return exports.__assign.apply(this, arguments);
};
exports.__assign = __assign;
function __rest(s, e) {
    var t = {};
    for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}
exports.__rest = __rest;
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
exports.__decorate = __decorate;
function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); };
}
exports.__param = __param;
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function")
        throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn)
            context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access)
            context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done)
            throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0)
                continue;
            if (result === null || typeof result !== "object")
                throw new TypeError("Object expected");
            if (_ = accept(result.get))
                descriptor.get = _;
            if (_ = accept(result.set))
                descriptor.set = _;
            if (_ = accept(result.init))
                initializers.push(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field")
                initializers.push(_);
            else
                descriptor[key] = _;
        }
    }
    if (target)
        Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
}
exports.__esDecorate = __esDecorate;
;
function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
}
exports.__runInitializers = __runInitializers;
;
function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
}
exports.__propKey = __propKey;
;
function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol")
        name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
}
exports.__setFunctionName = __setFunctionName;
;
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(metadataKey, metadataValue);
}
exports.__metadata = __metadata;
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try {
            step(generator.next(value));
        }
        catch (e) {
            reject(e);
        } }
        function rejected(value) { try {
            step(generator["throw"](value));
        }
        catch (e) {
            reject(e);
        } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
exports.__awaiter = __awaiter;
function __generator(thisArg, body) {
    var _ = { label: 0, sent: function () { if (t[0] & 1)
            throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f)
            throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _)
            try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                    return t;
                if (y = 0, t)
                    op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0:
                    case 1:
                        t = op;
                        break;
                    case 4:
                        _.label++;
                        return { value: op[1], done: false };
                    case 5:
                        _.label++;
                        y = op[1];
                        op = [0];
                        continue;
                    case 7:
                        op = _.ops.pop();
                        _.trys.pop();
                        continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                            _ = 0;
                            continue;
                        }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                            _.label = op[1];
                            break;
                        }
                        if (op[0] === 6 && _.label < t[1]) {
                            _.label = t[1];
                            t = op;
                            break;
                        }
                        if (t && _.label < t[2]) {
                            _.label = t[2];
                            _.ops.push(op);
                            break;
                        }
                        if (t[2])
                            _.ops.pop();
                        _.trys.pop();
                        continue;
                }
                op = body.call(thisArg, _);
            }
            catch (e) {
                op = [6, e];
                y = 0;
            }
            finally {
                f = t = 0;
            }
        if (op[0] & 5)
            throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
    }
}
exports.__generator = __generator;
exports.__createBinding = Object.create ? (function (o, m, k, k2) {
    if (k2 === undefined)
        k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function () { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function (o, m, k, k2) {
    if (k2 === undefined)
        k2 = k;
    o[k2] = m[k];
});
function __exportStar(m, o) {
    for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
            (0, exports.__createBinding)(o, m, p);
}
exports.__exportStar = __exportStar;
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m)
        return m.call(o);
    if (o && typeof o.length === "number")
        return {
            next: function () {
                if (o && i >= o.length)
                    o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
exports.__values = __values;
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m)
        return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
            ar.push(r.value);
    }
    catch (error) {
        e = { error: error };
    }
    finally {
        try {
            if (r && !r.done && (m = i["return"]))
                m.call(i);
        }
        finally {
            if (e)
                throw e.error;
        }
    }
    return ar;
}
exports.__read = __read;
function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}
exports.__spread = __spread;
function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++)
        s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}
exports.__spreadArrays = __spreadArrays;
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar)
                    ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
    return to.concat(ar || Array.prototype.slice.call(from));
}
exports.__spreadArray = __spreadArray;
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
exports.__await = __await;
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator)
        throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n])
        i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try {
        step(g[n](v));
    }
    catch (e) {
        settle(q[0][3], e);
    } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length)
        resume(q[0][0], q[0][1]); }
}
exports.__asyncGenerator = __asyncGenerator;
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
}
exports.__asyncDelegator = __asyncDelegator;
function __asyncValues(o) {
    if (!Symbol.asyncIterator)
        throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
}
exports.__asyncValues = __asyncValues;
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", { value: raw });
    }
    else {
        cooked.raw = raw;
    }
    return cooked;
}
exports.__makeTemplateObject = __makeTemplateObject;
;
var __setModuleDefault = Object.create ? (function (o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function (o, v) {
    o["default"] = v;
};
function __importStar(mod) {
    if (mod && mod.__esModule)
        return mod;
    var result = {};
    if (mod != null)
        for (var k in mod)
            if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                (0, exports.__createBinding)(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
}
exports.__importStar = __importStar;
function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}
exports.__importDefault = __importDefault;
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
exports.__classPrivateFieldGet = __classPrivateFieldGet;
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m")
        throw new TypeError("Private method is not writable");
    if (kind === "a" && !f)
        throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}
exports.__classPrivateFieldSet = __classPrivateFieldSet;
function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function"))
        throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}
exports.__classPrivateFieldIn = __classPrivateFieldIn;


/***/ }),

/***/ 93166:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Config = void 0;
var consts = __webpack_require__(86893);
var constants_1 = __webpack_require__(86893);
var Config = (function () {
    function Config() {
        this.defaultTimeout = 100;
        this.namespace = '';
        this.safeMode = false;
        this.width = 'auto';
        this.height = 'auto';
        this.safePluginsList = ['about', 'enter', 'backspace', 'size'];
        this.license = '';
        this.preset = 'custom';
        this.presets = {
            inline: {
                inline: true,
                toolbar: false,
                toolbarInline: true,
                toolbarInlineForSelection: true,
                showXPathInStatusbar: false,
                showCharsCounter: false,
                showWordsCounter: false,
                showPlaceholder: false
            }
        };
        this.ownerDocument = (typeof document !== 'undefined'
            ? document
            : null);
        this.ownerWindow = (typeof window !== 'undefined'
            ? window
            : null);
        this.shadowRoot = null;
        this.zIndex = 0;
        this.readonly = false;
        this.disabled = false;
        this.activeButtonsInReadOnly = [
            'source',
            'fullsize',
            'print',
            'about',
            'dots',
            'selectall'
        ];
        this.allowCommandsInReadOnly = ['selectall', 'preview', 'print'];
        this.toolbarButtonSize = 'middle';
        this.allowTabNavigation = false;
        this.inline = false;
        this.theme = 'default';
        this.saveModeInStorage = false;
        this.editorClassName = false;
        this.editorCssClass = false;
        this.className = false;
        this.style = false;
        this.containerStyle = false;
        this.styleValues = {};
        this.triggerChangeEvent = true;
        this.direction = '';
        this.language = 'auto';
        this.debugLanguage = false;
        this.i18n = false;
        this.tabIndex = -1;
        this.toolbar = true;
        this.statusbar = true;
        this.showTooltip = true;
        this.showTooltipDelay = 1000;
        this.useNativeTooltip = false;
        this.defaultActionOnPaste = constants_1.INSERT_AS_HTML;
        this.enter = consts.PARAGRAPH;
        this.iframe = false;
        this.editHTMLDocumentMode = false;
        this.enterBlock = this.enter !== 'br' ? this.enter : consts.PARAGRAPH;
        this.defaultMode = consts.MODE_WYSIWYG;
        this.useSplitMode = false;
        this.colors = {
            greyscale: [
                '#000000',
                '#434343',
                '#666666',
                '#999999',
                '#B7B7B7',
                '#CCCCCC',
                '#D9D9D9',
                '#EFEFEF',
                '#F3F3F3',
                '#FFFFFF'
            ],
            palette: [
                '#980000',
                '#FF0000',
                '#FF9900',
                '#FFFF00',
                '#00F0F0',
                '#00FFFF',
                '#4A86E8',
                '#0000FF',
                '#9900FF',
                '#FF00FF'
            ],
            full: [
                '#E6B8AF',
                '#F4CCCC',
                '#FCE5CD',
                '#FFF2CC',
                '#D9EAD3',
                '#D0E0E3',
                '#C9DAF8',
                '#CFE2F3',
                '#D9D2E9',
                '#EAD1DC',
                '#DD7E6B',
                '#EA9999',
                '#F9CB9C',
                '#FFE599',
                '#B6D7A8',
                '#A2C4C9',
                '#A4C2F4',
                '#9FC5E8',
                '#B4A7D6',
                '#D5A6BD',
                '#CC4125',
                '#E06666',
                '#F6B26B',
                '#FFD966',
                '#93C47D',
                '#76A5AF',
                '#6D9EEB',
                '#6FA8DC',
                '#8E7CC3',
                '#C27BA0',
                '#A61C00',
                '#CC0000',
                '#E69138',
                '#F1C232',
                '#6AA84F',
                '#45818E',
                '#3C78D8',
                '#3D85C6',
                '#674EA7',
                '#A64D79',
                '#85200C',
                '#990000',
                '#B45F06',
                '#BF9000',
                '#38761D',
                '#134F5C',
                '#1155CC',
                '#0B5394',
                '#351C75',
                '#733554',
                '#5B0F00',
                '#660000',
                '#783F04',
                '#7F6000',
                '#274E13',
                '#0C343D',
                '#1C4587',
                '#073763',
                '#20124D',
                '#4C1130'
            ]
        };
        this.colorPickerDefaultTab = 'background';
        this.imageDefaultWidth = 300;
        this.removeButtons = [];
        this.disablePlugins = [];
        this.extraPlugins = [];
        this.extraButtons = [];
        this.extraIcons = {};
        this.createAttributes = {
            table: {
                style: 'border-collapse:collapse;width: 100%;'
            }
        };
        this.sizeLG = 900;
        this.sizeMD = 700;
        this.sizeSM = 400;
        this.buttons = [
            {
                group: 'font-style',
                buttons: []
            },
            {
                group: 'list',
                buttons: []
            },
            {
                group: 'font',
                buttons: []
            },
            '---',
            {
                group: 'script',
                buttons: []
            },
            {
                group: 'media',
                buttons: []
            },
            '\n',
            {
                group: 'state',
                buttons: []
            },
            {
                group: 'clipboard',
                buttons: []
            },
            {
                group: 'insert',
                buttons: []
            },
            {
                group: 'indent',
                buttons: []
            },
            {
                group: 'color',
                buttons: []
            },
            {
                group: 'form',
                buttons: []
            },
            '---',
            {
                group: 'history',
                buttons: []
            },
            {
                group: 'search',
                buttons: []
            },
            {
                group: 'source',
                buttons: []
            },
            {
                group: 'other',
                buttons: []
            },
            {
                group: 'info',
                buttons: []
            }
        ];
        this.buttonsMD = [
            'bold',
            'italic',
            '|',
            'ul',
            'ol',
            'eraser',
            '|',
            'font',
            'fontsize',
            '---',
            'image',
            'table',
            '|',
            'link',
            '\n',
            'brush',
            'paragraph',
            'align',
            '|',
            'hr',
            'copyformat',
            'fullsize',
            '---',
            'undo',
            'redo',
            '|',
            'dots'
        ];
        this.buttonsSM = [
            'bold',
            'italic',
            '|',
            'ul',
            'ol',
            'eraser',
            '|',
            'fontsize',
            'brush',
            'paragraph',
            '---',
            'image',
            'table',
            '\n',
            'link',
            '|',
            'align',
            '|',
            'undo',
            'redo',
            '|',
            'copyformat',
            'fullsize',
            '---',
            'dots'
        ];
        this.buttonsXS = [
            'bold',
            'brush',
            'paragraph',
            'eraser',
            '|',
            'fontsize',
            '---',
            'image',
            '\n',
            'align',
            'undo',
            'redo',
            '|',
            'link',
            'table',
            '---',
            'dots'
        ];
        this.events = {};
        this.textIcons = false;
        this.showBrowserColorPicker = true;
    }
    Object.defineProperty(Config, "defaultOptions", {
        get: function () {
            if (!Config.__defaultOptions) {
                Config.__defaultOptions = new Config();
            }
            return Config.__defaultOptions;
        },
        enumerable: false,
        configurable: true
    });
    return Config;
}());
exports.Config = Config;
Config.prototype.controls = {};


/***/ }),

/***/ 77536:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Async = void 0;
var tslib_1 = __webpack_require__(20255);
var async_1 = __webpack_require__(4696);
var is_function_1 = __webpack_require__(42096);
var is_plain_object_1 = __webpack_require__(79736);
var is_promise_1 = __webpack_require__(26335);
var is_string_1 = __webpack_require__(24421);
var is_number_1 = __webpack_require__(61817);
var assert_1 = __webpack_require__(52378);
var Async = (function () {
    function Async() {
        var _this = this;
        var _a, _b, _c, _d;
        this.timers = new Map();
        this.__callbacks = new Map();
        this.promisesRejections = new Set();
        this.requestsIdle = new Set();
        this.requestsRaf = new Set();
        this.requestIdleCallbackNative = (_b = (_a = window['requestIdleCallback']) === null || _a === void 0 ? void 0 : _a.bind(window)) !== null && _b !== void 0 ? _b : (function (callback, options) {
            var _a;
            var start = Date.now();
            return _this.setTimeout(function () {
                callback({
                    didTimeout: false,
                    timeRemaining: function () { return Math.max(0, 50 - (Date.now() - start)); }
                });
            }, (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : 1);
        });
        this.cancelIdleCallbackNative = (_d = (_c = window['cancelIdleCallback']) === null || _c === void 0 ? void 0 : _c.bind(window)) !== null && _d !== void 0 ? _d : (function (request) {
            _this.clearTimeout(request);
        });
        this.isDestructed = false;
    }
    Async.prototype.delay = function (timeout) {
        var _this = this;
        return this.promise(function (resolve) { return _this.setTimeout(resolve, timeout); });
    };
    Async.prototype.setTimeout = function (callback, timeout) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        if (this.isDestructed) {
            return 0;
        }
        var options = {};
        if (!(0, is_number_1.isNumber)(timeout)) {
            options = timeout;
            timeout = options.timeout || 0;
        }
        if (options.label) {
            this.clearLabel(options.label);
        }
        var timer = async_1.setTimeout.apply(void 0, tslib_1.__spreadArray([callback, timeout], tslib_1.__read(args), false)), key = options.label || timer;
        this.timers.set(key, timer);
        this.__callbacks.set(key, callback);
        return timer;
    };
    Async.prototype.updateTimeout = function (label, timeout) {
        void 0;
        if (!label || !this.timers.has(label)) {
            return null;
        }
        var callback = this.__callbacks.get(label);
        void 0;
        return this.setTimeout(callback, { label: label, timeout: timeout });
    };
    Async.prototype.clearLabel = function (label) {
        if (label && this.timers.has(label)) {
            (0, async_1.clearTimeout)(this.timers.get(label));
            this.timers.delete(label);
            this.__callbacks.delete(label);
        }
    };
    Async.prototype.clearTimeout = function (timerOrLabel) {
        if ((0, is_string_1.isString)(timerOrLabel)) {
            return this.clearLabel(timerOrLabel);
        }
        (0, async_1.clearTimeout)(timerOrLabel);
        this.timers.delete(timerOrLabel);
        this.__callbacks.delete(timerOrLabel);
    };
    Async.prototype.debounce = function (fn, timeout, firstCallImmediately) {
        var _this = this;
        if (firstCallImmediately === void 0) { firstCallImmediately = false; }
        var timer = 0, fired = false;
        var promises = [];
        var callFn = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            if (!fired) {
                timer = 0;
                var res = fn.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args), false));
                fired = true;
                if (promises.length) {
                    var runPromises = function () {
                        promises.forEach(function (res) { return res(); });
                        promises.length = 0;
                    };
                    (0, is_promise_1.isPromise)(res) ? res.finally(runPromises) : runPromises();
                }
            }
        };
        var onFire = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            fired = false;
            if (!timeout) {
                callFn.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args), false));
            }
            else {
                if (!timer && firstCallImmediately) {
                    callFn.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args), false));
                }
                (0, async_1.clearTimeout)(timer);
                timer = _this.setTimeout(function () { return callFn.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args), false)); }, (0, is_function_1.isFunction)(timeout) ? timeout() : timeout);
                _this.timers.set(fn, timer);
            }
        };
        return (0, is_plain_object_1.isPlainObject)(timeout) && timeout.promisify
            ? function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var promise = _this.promise(function (res) {
                    promises.push(res);
                });
                onFire.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args), false));
                return promise;
            }
            : onFire;
    };
    Async.prototype.throttle = function (fn, timeout, ignore) {
        var _this = this;
        if (ignore === void 0) { ignore = false; }
        var timer = null, needInvoke, callee, lastArgs;
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            needInvoke = true;
            lastArgs = args;
            if (!timeout) {
                fn.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(lastArgs), false));
                return;
            }
            if (!timer) {
                callee = function () {
                    if (needInvoke) {
                        fn.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(lastArgs), false));
                        needInvoke = false;
                        timer = _this.setTimeout(callee, (0, is_function_1.isFunction)(timeout) ? timeout() : timeout);
                        _this.timers.set(callee, timer);
                    }
                    else {
                        timer = null;
                    }
                };
                callee();
            }
        };
    };
    Async.prototype.promise = function (executor) {
        var _this = this;
        var rejectCallback = function () { };
        var promise = new Promise(function (resolve, reject) {
            _this.promisesRejections.add(reject);
            rejectCallback = reject;
            return executor(resolve, reject);
        });
        if (!promise.finally && "es5" !== 'es2018') {
            promise.finally = function (onfinally) {
                promise.then(onfinally).catch(onfinally);
                return promise;
            };
        }
        promise
            .finally(function () {
            _this.promisesRejections.delete(rejectCallback);
        })
            .catch(function () { return null; });
        promise.rejectCallback = rejectCallback;
        return promise;
    };
    Async.prototype.promiseState = function (p) {
        var _this = this;
        if (p.status) {
            return p.status;
        }
        if (!Promise.race) {
            return new Promise(function (resolve) {
                p.then(function (v) {
                    resolve('fulfilled');
                    return v;
                }, function (e) {
                    resolve('rejected');
                    throw e;
                });
                _this.setTimeout(function () {
                    resolve('pending');
                }, 100);
            });
        }
        var t = {};
        return Promise.race([p, t]).then(function (v) { return (v === t ? 'pending' : 'fulfilled'); }, function () { return 'rejected'; });
    };
    Async.prototype.requestIdleCallback = function (callback, options) {
        var request = this.requestIdleCallbackNative(callback, options);
        this.requestsIdle.add(request);
        return request;
    };
    Async.prototype.requestIdlePromise = function (options) {
        var _this = this;
        return this.promise(function (res) {
            var request = _this.requestIdleCallback(function () { return res(request); }, options);
        });
    };
    Async.prototype.cancelIdleCallback = function (request) {
        this.requestsIdle.delete(request);
        return this.cancelIdleCallbackNative(request);
    };
    Async.prototype.requestAnimationFrame = function (callback) {
        var request = requestAnimationFrame(callback);
        this.requestsRaf.add(request);
        return request;
    };
    Async.prototype.cancelAnimationFrame = function (request) {
        this.requestsRaf.delete(request);
        cancelAnimationFrame(request);
    };
    Async.prototype.clear = function () {
        var _this = this;
        this.requestsIdle.forEach(function (key) { return _this.cancelIdleCallback(key); });
        this.requestsRaf.forEach(function (key) { return _this.cancelAnimationFrame(key); });
        this.timers.forEach(function (key) {
            return (0, async_1.clearTimeout)(_this.timers.get(key));
        });
        this.timers.clear();
        this.promisesRejections.forEach(function (reject) { return reject(); });
        this.promisesRejections.clear();
    };
    Async.prototype.destruct = function () {
        this.clear();
        this.isDestructed = true;
    };
    return Async;
}());
exports.Async = Async;


/***/ }),

/***/ 22630:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(77536), exports);


/***/ }),

/***/ 45113:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Component = void 0;
var helpers_1 = __webpack_require__(40332);
var global_1 = __webpack_require__(17332);
var statuses_1 = __webpack_require__(29411);
var async_1 = __webpack_require__(22630);
var StatusListHandlers = new Map();
var Component = (function () {
    function Component() {
        this.async = new async_1.Async();
        this.ownerWindow = window;
        this.__componentStatus = statuses_1.STATUSES.beforeInit;
        this.uid = 'jodit-uid-' + (0, global_1.uniqueUid)();
    }
    Object.defineProperty(Component.prototype, "componentName", {
        get: function () {
            if (!this.__componentName) {
                this.__componentName =
                    'jodit-' +
                        (0, helpers_1.kebabCase)(((0, helpers_1.isFunction)(this.className) ? this.className() : '') ||
                            (0, helpers_1.getClassName)(this));
            }
            return this.__componentName;
        },
        enumerable: false,
        configurable: true
    });
    Component.prototype.getFullElName = function (elementName, mod, modValue) {
        var result = [this.componentName];
        if (elementName) {
            elementName = elementName.replace(/[^a-z0-9-]/gi, '-');
            result.push("__".concat(elementName));
        }
        if (mod) {
            result.push('_', mod);
            result.push('_', (0, helpers_1.isVoid)(modValue) ? 'true' : modValue.toString());
        }
        return result.join('');
    };
    Object.defineProperty(Component.prototype, "ownerDocument", {
        get: function () {
            return this.ow.document;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "od", {
        get: function () {
            return this.ownerDocument;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "ow", {
        get: function () {
            return this.ownerWindow;
        },
        enumerable: false,
        configurable: true
    });
    Component.prototype.get = function (chain, obj) {
        return (0, helpers_1.get)(chain, obj || this);
    };
    Object.defineProperty(Component.prototype, "isReady", {
        get: function () {
            return this.componentStatus === statuses_1.STATUSES.ready;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "isDestructed", {
        get: function () {
            return this.componentStatus === statuses_1.STATUSES.destructed;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "isInDestruct", {
        get: function () {
            return (statuses_1.STATUSES.beforeDestruct === this.componentStatus ||
                statuses_1.STATUSES.destructed === this.componentStatus);
        },
        enumerable: false,
        configurable: true
    });
    Component.prototype.bindDestruct = function (component) {
        var _this = this;
        component.hookStatus(statuses_1.STATUSES.beforeDestruct, function () { return !_this.isInDestruct && _this.destruct(); });
        return this;
    };
    Component.prototype.destruct = function () {
        this.setStatus(statuses_1.STATUSES.destructed);
        this.async.destruct();
        if (StatusListHandlers.get(this)) {
            StatusListHandlers.delete(this);
        }
    };
    Object.defineProperty(Component.prototype, "componentStatus", {
        get: function () {
            return this.__componentStatus;
        },
        set: function (componentStatus) {
            this.setStatus(componentStatus);
        },
        enumerable: false,
        configurable: true
    });
    Component.prototype.setStatus = function (componentStatus) {
        return this.setStatusComponent(componentStatus, this);
    };
    Component.prototype.setStatusComponent = function (componentStatus, component) {
        if (componentStatus === this.__componentStatus) {
            return;
        }
        if (component === this) {
            this.__componentStatus = componentStatus;
        }
        var proto = Object.getPrototypeOf(this);
        if (proto && (0, helpers_1.isFunction)(proto.setStatusComponent)) {
            proto.setStatusComponent(componentStatus, component);
        }
        var statuses = StatusListHandlers.get(this), list = statuses === null || statuses === void 0 ? void 0 : statuses[componentStatus];
        if (list && list.length) {
            list.forEach(function (cb) { return cb(component); });
        }
    };
    Component.prototype.hookStatus = function (status, callback) {
        var list = StatusListHandlers.get(this);
        if (!list) {
            list = {};
            StatusListHandlers.set(this, list);
        }
        if (!list[status]) {
            list[status] = [];
        }
        list[status].push(callback);
    };
    Component.isInstanceOf = function (c, constructorFunc) {
        return c instanceof constructorFunc;
    };
    Component.STATUSES = statuses_1.STATUSES;
    return Component;
}());
exports.Component = Component;


/***/ }),

/***/ 56562:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(29411), exports);
tslib_1.__exportStar(__webpack_require__(45113), exports);
tslib_1.__exportStar(__webpack_require__(39840), exports);


/***/ }),

/***/ 29411:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.STATUSES = void 0;
exports.STATUSES = {
    beforeInit: 'beforeInit',
    ready: 'ready',
    beforeDestruct: 'beforeDestruct',
    destructed: 'destructed'
};


/***/ }),

/***/ 39840:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewComponent = void 0;
var tslib_1 = __webpack_require__(20255);
var component_1 = __webpack_require__(45113);
var ViewComponent = (function (_super) {
    tslib_1.__extends(ViewComponent, _super);
    function ViewComponent(jodit) {
        var _this = _super.call(this) || this;
        _this.setParentView(jodit);
        return _this;
    }
    Object.defineProperty(ViewComponent.prototype, "j", {
        get: function () {
            return this.jodit;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ViewComponent.prototype, "defaultTimeout", {
        get: function () {
            return this.j.defaultTimeout;
        },
        enumerable: false,
        configurable: true
    });
    ViewComponent.prototype.i18n = function (text) {
        var _a;
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        return (_a = this.j).i18n.apply(_a, tslib_1.__spreadArray([text], tslib_1.__read(params), false));
    };
    ViewComponent.prototype.setParentView = function (jodit) {
        this.jodit = jodit;
        jodit.components.add(this);
        return this;
    };
    ViewComponent.prototype.destruct = function () {
        this.j.components.delete(this);
        return _super.prototype.destruct.call(this);
    };
    return ViewComponent;
}(component_1.Component));
exports.ViewComponent = ViewComponent;


/***/ }),

/***/ 86893:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CLIPBOARD_ID = exports.lang = exports.TEMP_ATTR = exports.BASE_PATH = exports.KEY_ALIASES = exports.IS_MAC = exports.SAFE_COUNT_CHANGE_CALL = exports.INSERT_ONLY_TEXT = exports.INSERT_AS_TEXT = exports.INSERT_CLEAR_HTML = exports.INSERT_AS_HTML = exports.EMULATE_DBLCLICK_TIMEOUT = exports.MARKER_CLASS = exports.TEXT_RTF = exports.TEXT_HTML = exports.TEXT_PLAIN = exports.IS_IE = exports.MODE_SPLIT = exports.MODE_SOURCE = exports.MODE_WYSIWYG = exports.PARAGRAPH = exports.BR = exports.COMMAND_KEYS = exports.ACCURACY = exports.NEARBY = exports.KEY_F3 = exports.KEY_DELETE = exports.KEY_SPACE = exports.KEY_DOWN = exports.KEY_RIGHT = exports.KEY_UP = exports.KEY_LEFT = exports.KEY_ALT = exports.KEY_ESC = exports.KEY_ENTER = exports.KEY_TAB = exports.KEY_BACKSPACE = exports.KEY_META = exports.NO_EMPTY_TAGS = exports.INSEPARABLE_TAGS = exports.IS_INLINE = exports.IS_BLOCK = exports.SPACE_REG_EXP_END = exports.SPACE_REG_EXP_START = exports.SPACE_REG_EXP = exports.INVISIBLE_SPACE_REG_EXP_START = exports.INVISIBLE_SPACE_REG_EXP_END = exports.INVISIBLE_SPACE_REG_EXP = exports.NBSP_SPACE = exports.INVISIBLE_SPACE = void 0;
exports.SOURCE_CONSUMER = void 0;
var tslib_1 = __webpack_require__(20255);
exports.INVISIBLE_SPACE = '\uFEFF';
exports.NBSP_SPACE = '\u00A0';
var INVISIBLE_SPACE_REG_EXP = function () { return /[\uFEFF]/g; };
exports.INVISIBLE_SPACE_REG_EXP = INVISIBLE_SPACE_REG_EXP;
var INVISIBLE_SPACE_REG_EXP_END = function () { return /[\uFEFF]+$/g; };
exports.INVISIBLE_SPACE_REG_EXP_END = INVISIBLE_SPACE_REG_EXP_END;
var INVISIBLE_SPACE_REG_EXP_START = function () { return /^[\uFEFF]+/g; };
exports.INVISIBLE_SPACE_REG_EXP_START = INVISIBLE_SPACE_REG_EXP_START;
var SPACE_REG_EXP = function () { return /[\s\n\t\r\uFEFF\u200b]+/g; };
exports.SPACE_REG_EXP = SPACE_REG_EXP;
var SPACE_REG_EXP_START = function () { return /^[\s\n\t\r\uFEFF\u200b]+/g; };
exports.SPACE_REG_EXP_START = SPACE_REG_EXP_START;
var SPACE_REG_EXP_END = function () { return /[\s\n\t\r\uFEFF\u200b]+$/g; };
exports.SPACE_REG_EXP_END = SPACE_REG_EXP_END;
exports.IS_BLOCK = /^(ADDRESS|ARTICLE|ASIDE|BLOCKQUOTE|CANVAS|DD|DFN|DIV|DL|DT|FIELDSET|FIGCAPTION|FIGURE|FOOTER|FORM|H[1-6]|HEADER|HGROUP|HR|LI|MAIN|NAV|NOSCRIPT|OUTPUT|P|PRE|RUBY|SCRIPT|STYLE|OBJECT|OL|SECTION|IFRAME|JODIT|JODIT-MEDIA|UL|TR|TD|TH|TBODY|THEAD|TFOOT|TABLE|BODY|HTML|VIDEO)$/i;
exports.IS_INLINE = /^(STRONG|SPAN|I|EM|B|SUP|SUB|A|U)$/i;
var __UNSEPARABLE_TAGS = [
    'img',
    'video',
    'svg',
    'iframe',
    'script',
    'input',
    'textarea',
    'link',
    'jodit',
    'jodit-media'
];
exports.INSEPARABLE_TAGS = new Set(tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read(__UNSEPARABLE_TAGS), false), [
    'br',
    'hr'
], false));
exports.NO_EMPTY_TAGS = new Set(__UNSEPARABLE_TAGS);
exports.KEY_META = 'Meta';
exports.KEY_BACKSPACE = 'Backspace';
exports.KEY_TAB = 'Tab';
exports.KEY_ENTER = 'Enter';
exports.KEY_ESC = 'Escape';
exports.KEY_ALT = 'Alt';
exports.KEY_LEFT = 'ArrowLeft';
exports.KEY_UP = 'ArrowUp';
exports.KEY_RIGHT = 'ArrowRight';
exports.KEY_DOWN = 'ArrowDown';
exports.KEY_SPACE = 'Space';
exports.KEY_DELETE = 'Delete';
exports.KEY_F3 = 'F3';
exports.NEARBY = 5;
exports.ACCURACY = 10;
exports.COMMAND_KEYS = [
    exports.KEY_META,
    exports.KEY_BACKSPACE,
    exports.KEY_DELETE,
    exports.KEY_UP,
    exports.KEY_DOWN,
    exports.KEY_RIGHT,
    exports.KEY_LEFT,
    exports.KEY_ENTER,
    exports.KEY_ESC,
    exports.KEY_F3,
    exports.KEY_TAB
];
exports.BR = 'br';
exports.PARAGRAPH = 'p';
exports.MODE_WYSIWYG = 1;
exports.MODE_SOURCE = 2;
exports.MODE_SPLIT = 3;
exports.IS_IE = typeof navigator !== 'undefined' &&
    (navigator.userAgent.indexOf('MSIE') !== -1 ||
        /rv:11.0/i.test(navigator.userAgent));
exports.TEXT_PLAIN = exports.IS_IE ? 'text' : 'text/plain';
exports.TEXT_HTML = exports.IS_IE ? 'html' : 'text/html';
exports.TEXT_RTF = exports.IS_IE ? 'rtf' : 'text/rtf';
exports.MARKER_CLASS = 'jodit-selection_marker';
exports.EMULATE_DBLCLICK_TIMEOUT = 300;
exports.INSERT_AS_HTML = 'insert_as_html';
exports.INSERT_CLEAR_HTML = 'insert_clear_html';
exports.INSERT_AS_TEXT = 'insert_as_text';
exports.INSERT_ONLY_TEXT = 'insert_only_text';
exports.SAFE_COUNT_CHANGE_CALL = 10;
exports.IS_MAC = typeof window !== 'undefined' &&
    /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
exports.KEY_ALIASES = {
    add: '+',
    break: 'pause',
    cmd: 'meta',
    command: 'meta',
    ctl: 'control',
    ctrl: 'control',
    del: 'delete',
    down: 'arrowdown',
    esc: 'escape',
    ins: 'insert',
    left: 'arrowleft',
    mod: exports.IS_MAC ? 'meta' : 'control',
    opt: 'alt',
    option: 'alt',
    return: 'enter',
    right: 'arrowright',
    space: ' ',
    spacebar: ' ',
    up: 'arrowup',
    win: 'meta',
    windows: 'meta'
};
exports.BASE_PATH = (function () {
    if (typeof document === 'undefined') {
        return '';
    }
    var script = document.currentScript, removeScriptName = function (s) {
        var parts = s.split('/');
        if (/\.js/.test(parts[parts.length - 1])) {
            return parts.slice(0, parts.length - 1).join('/') + '/';
        }
        return s;
    };
    if (script) {
        return removeScriptName(script.src);
    }
    var scripts = document.querySelectorAll('script[src]');
    if (scripts && scripts.length) {
        return removeScriptName(scripts[scripts.length - 1].src);
    }
    return window.location.href;
})();
exports.TEMP_ATTR = 'data-jodit-temp';
exports.lang = {};
exports.CLIPBOARD_ID = 'clipboard';
exports.SOURCE_CONSUMER = 'source-consumer';


/***/ }),

/***/ 31897:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Create = void 0;
var helpers_1 = __webpack_require__(40332);
var assert_1 = __webpack_require__(52378);
var dom_1 = __webpack_require__(64968);
var constants_1 = __webpack_require__(86893);
var Create = (function () {
    function Create(document, createAttributes) {
        this.document = document;
        this.createAttributes = createAttributes;
    }
    Object.defineProperty(Create.prototype, "doc", {
        get: function () {
            return (0, helpers_1.isFunction)(this.document) ? this.document() : this.document;
        },
        enumerable: false,
        configurable: true
    });
    Create.prototype.element = function (tagName, childrenOrAttributes, children) {
        var _this = this;
        var elm = this.doc.createElement(tagName.toLowerCase());
        this.applyCreateAttributes(elm);
        if (childrenOrAttributes) {
            if ((0, helpers_1.isPlainObject)(childrenOrAttributes)) {
                (0, helpers_1.attr)(elm, childrenOrAttributes);
            }
            else {
                children = childrenOrAttributes;
            }
        }
        if (children) {
            (0, helpers_1.asArray)(children).forEach(function (child) {
                return elm.appendChild((0, helpers_1.isString)(child) ? _this.fromHTML(child) : child);
            });
        }
        return elm;
    };
    Create.prototype.div = function (className, childrenOrAttributes, children) {
        var div = this.element('div', childrenOrAttributes, children);
        if (className) {
            div.className = className;
        }
        return div;
    };
    Create.prototype.sandbox = function () {
        var _a;
        var iframe = this.element('iframe', { sandbox: 'allow-same-origin' });
        this.doc.body.appendChild(iframe);
        var doc = (_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document;
        void 0;
        if (!doc) {
            throw Error('Iframe error');
        }
        doc.open();
        doc.write('<!DOCTYPE html><html><head></head><body></body></html>');
        doc.close();
        return doc.body;
    };
    Create.prototype.span = function (className, childrenOrAttributes, children) {
        var span = this.element('span', childrenOrAttributes, children);
        if (className) {
            span.className = className;
        }
        return span;
    };
    Create.prototype.a = function (className, childrenOrAttributes, children) {
        var a = this.element('a', childrenOrAttributes, children);
        if (className) {
            a.className = className;
        }
        return a;
    };
    Create.prototype.text = function (value) {
        return this.doc.createTextNode(value);
    };
    Create.prototype.fake = function () {
        return this.text(constants_1.INVISIBLE_SPACE);
    };
    Create.prototype.fragment = function () {
        return this.doc.createDocumentFragment();
    };
    Create.prototype.fromHTML = function (html, refsToggleElement) {
        var div = this.div();
        div.innerHTML = html.toString();
        var child = div.firstChild !== div.lastChild || !div.firstChild
            ? div
            : div.firstChild;
        dom_1.Dom.safeRemove(child);
        if (refsToggleElement) {
            var refElements_1 = (0, helpers_1.refs)(child);
            Object.keys(refsToggleElement).forEach(function (key) {
                var elm = refElements_1[key];
                if (elm && refsToggleElement[key] === false) {
                    dom_1.Dom.hide(elm);
                }
            });
        }
        return child;
    };
    Create.prototype.applyCreateAttributes = function (elm) {
        if (this.createAttributes) {
            var ca = this.createAttributes;
            if (ca && ca[elm.tagName.toLowerCase()]) {
                var attrsOpt = ca[elm.tagName.toLowerCase()];
                if ((0, helpers_1.isFunction)(attrsOpt)) {
                    attrsOpt(elm);
                }
                else if ((0, helpers_1.isPlainObject)(attrsOpt)) {
                    (0, helpers_1.attr)(elm, attrsOpt);
                }
            }
        }
    };
    return Create;
}());
exports.Create = Create;


/***/ }),

/***/ 42841:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(31897), exports);


/***/ }),

/***/ 32358:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cache = void 0;
var helpers_1 = __webpack_require__(40332);
function cache(target, name, descriptor) {
    var getter = descriptor.get;
    if (!getter) {
        throw (0, helpers_1.error)('Getter property descriptor expected');
    }
    descriptor.get = function () {
        var value = getter.call(this);
        if (value && value.noCache === true) {
            return value;
        }
        Object.defineProperty(this, name, {
            configurable: descriptor.configurable,
            enumerable: descriptor.enumerable,
            writable: false,
            value: value
        });
        return value;
    };
}
exports.cache = cache;


/***/ }),

/***/ 11441:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.component = void 0;
var tslib_1 = __webpack_require__(20255);
function component(constructorFunction) {
    var newConstructorFunction = (function (_super) {
        tslib_1.__extends(newConstructorFunction, _super);
        function newConstructorFunction() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(args), false)) || this;
            var isRootConstructor = _this.constructor === newConstructorFunction;
            if (isRootConstructor) {
                if (!(_this instanceof newConstructorFunction)) {
                    Object.setPrototypeOf(_this, newConstructorFunction.prototype);
                }
                _this.setStatus('ready');
            }
            return _this;
        }
        return newConstructorFunction;
    }(constructorFunction));
    return newConstructorFunction;
}
exports.component = component;


/***/ }),

/***/ 55773:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.throttle = exports.debounce = void 0;
var checker_1 = __webpack_require__(10172);
var component_1 = __webpack_require__(56562);
var error_1 = __webpack_require__(56964);
var assert_1 = __webpack_require__(52378);
function debounce(timeout, firstCallImmediately, method) {
    if (firstCallImmediately === void 0) { firstCallImmediately = false; }
    if (method === void 0) { method = 'debounce'; }
    return function (target, propertyKey) {
        var fn = target[propertyKey];
        if (!(0, checker_1.isFunction)(fn)) {
            throw (0, error_1.error)('Handler must be a Function');
        }
        target.hookStatus(component_1.STATUSES.ready, function (component) {
            var async = component.async;
            void 0;
            var realTimeout = (0, checker_1.isFunction)(timeout)
                ? timeout(component)
                : timeout;
            Object.defineProperty(component, propertyKey, {
                configurable: true,
                value: async[method](component[propertyKey].bind(component), (0, checker_1.isNumber)(realTimeout) || (0, checker_1.isPlainObject)(realTimeout)
                    ? realTimeout
                    : component.defaultTimeout, firstCallImmediately)
            });
        });
        return {
            configurable: true,
            get: function () {
                return fn.bind(this);
            }
        };
    };
}
exports.debounce = debounce;
function throttle(timeout, firstCallImmediately) {
    if (firstCallImmediately === void 0) { firstCallImmediately = false; }
    return debounce(timeout, firstCallImmediately, 'throttle');
}
exports.throttle = throttle;


/***/ }),

/***/ 70669:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.derive = void 0;
var tslib_1 = __webpack_require__(20255);
var checker_1 = __webpack_require__(10172);
function derive() {
    var traits = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        traits[_i] = arguments[_i];
    }
    return function (target) {
        var origin = target.prototype;
        for (var i = 0; i < traits.length; i++) {
            var trait = traits[i];
            var keys = Object.getOwnPropertyNames(trait.prototype);
            var _loop_1 = function (j) {
                var key = keys[j], method = Object.getOwnPropertyDescriptor(trait.prototype, key);
                var canDerive = method != null &&
                    (0, checker_1.isFunction)(method.value) &&
                    !(0, checker_1.isFunction)(origin[key]);
                if (canDerive) {
                    Object.defineProperty(origin, key, {
                        enumerable: true,
                        configurable: true,
                        writable: true,
                        value: function () {
                            var _a;
                            var args = [];
                            for (var _i = 0; _i < arguments.length; _i++) {
                                args[_i] = arguments[_i];
                            }
                            return (_a = method.value).call.apply(_a, tslib_1.__spreadArray([this], tslib_1.__read(args), false));
                        }
                    });
                }
            };
            for (var j = 0; j < keys.length; j++) {
                _loop_1(j);
            }
        }
    };
}
exports.derive = derive;


/***/ }),

/***/ 64522:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hook = void 0;
var checker_1 = __webpack_require__(10172);
var error_1 = __webpack_require__(56964);
function hook(status) {
    return function (target, propertyKey) {
        if (!(0, checker_1.isFunction)(target[propertyKey])) {
            throw (0, error_1.error)('Handler must be a Function');
        }
        target.hookStatus(status, function (component) {
            component[propertyKey].call(component);
        });
    };
}
exports.hook = hook;


/***/ }),

/***/ 58682:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.idle = void 0;
var tslib_1 = __webpack_require__(20255);
var component_1 = __webpack_require__(56562);
var helpers_1 = __webpack_require__(40332);
function idle() {
    return function (target, propertyKey) {
        if (!(0, helpers_1.isFunction)(target[propertyKey])) {
            throw (0, helpers_1.error)('Handler must be a Function');
        }
        target.hookStatus(component_1.STATUSES.ready, function (component) {
            var async = component.async;
            var originalMethod = component[propertyKey];
            component[propertyKey] = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return async.requestIdleCallback(originalMethod.bind.apply(originalMethod, tslib_1.__spreadArray([component], tslib_1.__read(args), false)));
            };
        });
    };
}
exports.idle = idle;


/***/ }),

/***/ 43441:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.autobind = void 0;
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(32358), exports);
tslib_1.__exportStar(__webpack_require__(11441), exports);
tslib_1.__exportStar(__webpack_require__(55773), exports);
tslib_1.__exportStar(__webpack_require__(58682), exports);
tslib_1.__exportStar(__webpack_require__(64522), exports);
tslib_1.__exportStar(__webpack_require__(91627), exports);
tslib_1.__exportStar(__webpack_require__(31418), exports);
tslib_1.__exportStar(__webpack_require__(67587), exports);
tslib_1.__exportStar(__webpack_require__(46163), exports);
tslib_1.__exportStar(__webpack_require__(70669), exports);
var autobind_decorator_1 = __webpack_require__(70631);
Object.defineProperty(exports, "autobind", ({ enumerable: true, get: function () { return autobind_decorator_1.default; } }));


/***/ }),

/***/ 91627:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nonenumerable = void 0;
var nonenumerable = function (target, propertyKey) {
    var descriptor = Object.getOwnPropertyDescriptor(target, propertyKey) || {};
    if (descriptor.enumerable !== false) {
        Object.defineProperty(target, propertyKey, {
            enumerable: false,
            set: function (value) {
                Object.defineProperty(this, propertyKey, {
                    enumerable: false,
                    writable: true,
                    value: value
                });
            }
        });
    }
};
exports.nonenumerable = nonenumerable;


/***/ }),

/***/ 31418:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.persistent = void 0;
var component_1 = __webpack_require__(56562);
var is_view_object_1 = __webpack_require__(96574);
function persistent(target, propertyKey) {
    target.hookStatus(component_1.STATUSES.ready, function (component) {
        var jodit = (0, is_view_object_1.isViewObject)(component)
            ? component
            : component.jodit, storageKey = "".concat(jodit.options.namespace).concat(component.componentName, "_prop_").concat(propertyKey), initialValue = component[propertyKey];
        Object.defineProperty(component, propertyKey, {
            get: function () {
                var _a;
                return (_a = jodit.storage.get(storageKey)) !== null && _a !== void 0 ? _a : initialValue;
            },
            set: function (value) {
                jodit.storage.set(storageKey, value);
            }
        });
    });
}
exports.persistent = persistent;


/***/ }),

/***/ 67587:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.wait = void 0;
var tslib_1 = __webpack_require__(20255);
var helpers_1 = __webpack_require__(40332);
var component_1 = __webpack_require__(56562);
function wait(condition) {
    return function (target, propertyKey) {
        var fn = target[propertyKey];
        if (!(0, helpers_1.isFunction)(fn)) {
            throw (0, helpers_1.error)('Handler must be a Function');
        }
        target.hookStatus(component_1.STATUSES.ready, function (component) {
            var async = component.async;
            var realMethod = component[propertyKey];
            var timeout = 0;
            Object.defineProperty(component, propertyKey, {
                configurable: true,
                value: function callProxy() {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    async.clearTimeout(timeout);
                    if (condition(component)) {
                        realMethod.apply(component, args);
                    }
                    else {
                        timeout = async.setTimeout(function () { return callProxy.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args), false)); }, 10);
                    }
                }
            });
        });
    };
}
exports.wait = wait;


/***/ }),

/***/ 46163:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.watch = exports.getPropertyDescriptor = void 0;
var tslib_1 = __webpack_require__(20255);
var is_function_1 = __webpack_require__(42096);
var is_plain_object_1 = __webpack_require__(79736);
var is_view_object_1 = __webpack_require__(96574);
var observable_1 = __webpack_require__(88418);
var statuses_1 = __webpack_require__(29411);
var split_array_1 = __webpack_require__(14556);
var error_1 = __webpack_require__(56964);
function getPropertyDescriptor(obj, prop) {
    var desc;
    do {
        desc = Object.getOwnPropertyDescriptor(obj, prop);
        obj = Object.getPrototypeOf(obj);
    } while (!desc && obj);
    return desc;
}
exports.getPropertyDescriptor = getPropertyDescriptor;
function watch(observeFields, context) {
    return function (target, propertyKey) {
        if (!(0, is_function_1.isFunction)(target[propertyKey])) {
            throw (0, error_1.error)('Handler must be a Function');
        }
        var process = function (component) {
            var callback = function (key) {
                var _a;
                var args = [];
                for (var _i = 1; _i < arguments.length; _i++) {
                    args[_i - 1] = arguments[_i];
                }
                if (!component.isInDestruct) {
                    return (_a = component)[propertyKey].apply(_a, tslib_1.__spreadArray([key], tslib_1.__read(args), false));
                }
            };
            (0, split_array_1.splitArray)(observeFields).forEach(function (field) {
                if (/:/.test(field)) {
                    var _a = tslib_1.__read(field.split(':'), 2), objectPath = _a[0], eventName_1 = _a[1];
                    var ctx_1 = context;
                    var view_1 = (0, is_view_object_1.isViewObject)(component)
                        ? component
                        : component.jodit;
                    if (objectPath.length) {
                        ctx_1 = component.get(objectPath);
                    }
                    if ((0, is_function_1.isFunction)(ctx_1)) {
                        ctx_1 = ctx_1(component);
                    }
                    view_1.events.on(ctx_1 || component, eventName_1, callback);
                    if (!ctx_1) {
                        view_1.events.on(eventName_1, callback);
                    }
                    component.hookStatus('beforeDestruct', function () {
                        view_1.events
                            .off(ctx_1 || component, eventName_1, callback)
                            .off(eventName_1, callback);
                    });
                    return;
                }
                var parts = field.split('.'), _b = tslib_1.__read(parts, 1), key = _b[0], teil = parts.slice(1);
                var value = component[key];
                if ((0, is_plain_object_1.isPlainObject)(value)) {
                    var observableValue = (0, observable_1.observable)(value);
                    observableValue.on("change.".concat(teil.join('.')), callback);
                }
                var descriptor = getPropertyDescriptor(target, key);
                Object.defineProperty(component, key, {
                    configurable: true,
                    set: function (v) {
                        var oldValue = value;
                        if (oldValue === v) {
                            return;
                        }
                        value = v;
                        if (descriptor && descriptor.set) {
                            descriptor.set.call(component, v);
                        }
                        if ((0, is_plain_object_1.isPlainObject)(value)) {
                            value = (0, observable_1.observable)(value);
                            value.on("change.".concat(teil.join('.')), callback);
                        }
                        callback(key, oldValue, value);
                    },
                    get: function () {
                        if (descriptor && descriptor.get) {
                            return descriptor.get.call(component);
                        }
                        return value;
                    }
                });
            });
        };
        if ((0, is_function_1.isFunction)(target.hookStatus)) {
            target.hookStatus(statuses_1.STATUSES.ready, process);
        }
        else {
            process(target);
        }
    };
}
exports.watch = watch;
exports["default"] = watch;


/***/ }),

/***/ 24263:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Dom = void 0;
var tslib_1 = __webpack_require__(20255);
var consts = __webpack_require__(86893);
var checker_1 = __webpack_require__(10172);
var array_1 = __webpack_require__(12557);
var string_1 = __webpack_require__(19035);
var utils_1 = __webpack_require__(76502);
var is_marker_1 = __webpack_require__(37204);
var constants_1 = __webpack_require__(86893);
var Dom = (function () {
    function Dom() {
    }
    Dom.detach = function (node) {
        while (node.firstChild) {
            node.removeChild(node.firstChild);
        }
    };
    Dom.wrapInline = function (current, tag, editor) {
        var tmp, first = current, last = current;
        editor.s.save();
        var needFindNext = false;
        do {
            needFindNext = false;
            tmp = first.previousSibling;
            if (tmp && !Dom.isBlock(tmp)) {
                needFindNext = true;
                first = tmp;
            }
        } while (needFindNext);
        do {
            needFindNext = false;
            tmp = last.nextSibling;
            if (tmp && !Dom.isBlock(tmp)) {
                needFindNext = true;
                last = tmp;
            }
        } while (needFindNext);
        var wrapper = (0, checker_1.isString)(tag) ? editor.createInside.element(tag) : tag;
        if (first.parentNode) {
            first.parentNode.insertBefore(wrapper, first);
        }
        var next = first;
        while (next) {
            next = first.nextSibling;
            wrapper.appendChild(first);
            if (first === last || !next) {
                break;
            }
            first = next;
        }
        editor.s.restore();
        return wrapper;
    };
    Dom.wrap = function (current, tag, create) {
        var wrapper = (0, checker_1.isString)(tag) ? create.element(tag) : tag;
        if (Dom.isNode(current)) {
            if (!current.parentNode) {
                throw (0, utils_1.error)('Element should be in DOM');
            }
            current.parentNode.insertBefore(wrapper, current);
            wrapper.appendChild(current);
        }
        else {
            var fragment = current.extractContents();
            current.insertNode(wrapper);
            wrapper.appendChild(fragment);
        }
        return wrapper;
    };
    Dom.unwrap = function (node) {
        var parent = node.parentNode;
        if (parent) {
            while (node.firstChild) {
                parent.insertBefore(node.firstChild, node);
            }
            Dom.safeRemove(node);
        }
    };
    Dom.between = function (start, end, callback) {
        var next = start;
        while (next && next !== end) {
            if (start !== next && callback(next)) {
                break;
            }
            var step = next.firstChild || next.nextSibling;
            if (!step) {
                while (next && !next.nextSibling) {
                    next = next.parentNode;
                }
                step = next === null || next === void 0 ? void 0 : next.nextSibling;
            }
            next = step;
        }
    };
    Dom.replace = function (elm, newTagName, create, withAttributes, notMoveContent) {
        if (withAttributes === void 0) { withAttributes = false; }
        if (notMoveContent === void 0) { notMoveContent = false; }
        if ((0, checker_1.isHTML)(newTagName)) {
            newTagName = create.fromHTML(newTagName);
        }
        var tag = (0, checker_1.isString)(newTagName)
            ? create.element(newTagName)
            : newTagName;
        if (!notMoveContent) {
            while (elm.firstChild) {
                tag.appendChild(elm.firstChild);
            }
        }
        if (withAttributes && Dom.isElement(elm) && Dom.isElement(tag)) {
            (0, array_1.toArray)(elm.attributes).forEach(function (attr) {
                tag.setAttribute(attr.name, attr.value);
            });
        }
        if (elm.parentNode) {
            elm.parentNode.replaceChild(tag, elm);
        }
        return tag;
    };
    Dom.isEmptyTextNode = function (node) {
        return (Dom.isText(node) &&
            (!node.nodeValue ||
                node.nodeValue
                    .replace(consts.INVISIBLE_SPACE_REG_EXP(), '')
                    .trim().length === 0));
    };
    Dom.isEmptyContent = function (node) {
        return Dom.each(node, function (elm) {
            return Dom.isEmptyTextNode(elm);
        });
    };
    Dom.isContentEditable = function (node, root) {
        return (Dom.isNode(node) &&
            !Dom.closest(node, function (elm) {
                return Dom.isElement(elm) &&
                    elm.getAttribute('contenteditable') === 'false';
            }, root));
    };
    Dom.isEmpty = function (node, condNoEmptyElement) {
        if (condNoEmptyElement === void 0) { condNoEmptyElement = constants_1.NO_EMPTY_TAGS; }
        if (!node) {
            return true;
        }
        var cond;
        if (!(0, checker_1.isFunction)(condNoEmptyElement)) {
            cond = function (elm) {
                return condNoEmptyElement.has(elm.nodeName.toLowerCase());
            };
        }
        else {
            cond = condNoEmptyElement;
        }
        var emptyText = function (node) {
            return node.nodeValue == null || (0, string_1.trim)(node.nodeValue).length === 0;
        };
        if (Dom.isText(node)) {
            return emptyText(node);
        }
        return (!(Dom.isElement(node) && cond(node)) &&
            Dom.each(node, function (elm) {
                if ((Dom.isText(elm) && !emptyText(elm)) ||
                    (Dom.isElement(elm) && cond(elm))) {
                    return false;
                }
            }));
    };
    Dom.isNode = function (object) {
        return Boolean(object &&
            (0, checker_1.isString)(object.nodeName) &&
            typeof object.nodeType === 'number' &&
            object.childNodes &&
            (0, checker_1.isFunction)(object.appendChild));
    };
    Dom.isCell = function (elm) {
        return Dom.isNode(elm) && /^(td|th)$/i.test(elm.nodeName);
    };
    Dom.isImage = function (elm) {
        return (Dom.isNode(elm) && /^(img|svg|picture|canvas)$/i.test(elm.nodeName));
    };
    Dom.isBlock = function (node) {
        return (!(0, checker_1.isVoid)(node) &&
            typeof node === 'object' &&
            Dom.isNode(node) &&
            consts.IS_BLOCK.test(node.nodeName));
    };
    Dom.isText = function (node) {
        return Boolean(node && node.nodeType === Node.TEXT_NODE);
    };
    Dom.isElement = function (node) {
        var _a;
        if (!Dom.isNode(node)) {
            return false;
        }
        var win = (_a = node.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;
        return Boolean(win && node.nodeType === Node.ELEMENT_NODE);
    };
    Dom.isFragment = function (node) {
        var _a;
        if (!Dom.isNode(node)) {
            return false;
        }
        var win = (_a = node.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;
        return Boolean(win && node.nodeType === Node.DOCUMENT_FRAGMENT_NODE);
    };
    Dom.isHTMLElement = function (node) {
        var _a;
        if (!Dom.isNode(node)) {
            return false;
        }
        var win = (_a = node.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;
        return Boolean(win && node instanceof win.HTMLElement);
    };
    Dom.isInlineBlock = function (node) {
        return (Dom.isElement(node) &&
            !/^(BR|HR)$/i.test(node.tagName) &&
            ['inline', 'inline-block'].indexOf((0, utils_1.css)(node, 'display').toString()) !== -1);
    };
    Dom.canSplitBlock = function (node) {
        return (!(0, checker_1.isVoid)(node) &&
            Dom.isHTMLElement(node) &&
            Dom.isBlock(node) &&
            !/^(TD|TH|CAPTION|FORM)$/.test(node.nodeName) &&
            node.style !== undefined &&
            !/^(fixed|absolute)/i.test(node.style.position));
    };
    Dom.last = function (root, condition) {
        var last = root === null || root === void 0 ? void 0 : root.lastChild;
        if (!last) {
            return null;
        }
        do {
            if (condition(last)) {
                return last;
            }
            var next = last.lastChild;
            if (!next) {
                next = last.previousSibling;
            }
            if (!next && last.parentNode !== root) {
                do {
                    last = last.parentNode;
                } while (last &&
                    !(last === null || last === void 0 ? void 0 : last.previousSibling) &&
                    last.parentNode !== root);
                next = last === null || last === void 0 ? void 0 : last.previousSibling;
            }
            last = next;
        } while (last);
        return null;
    };
    Dom.prev = function (node, condition, root, withChild) {
        if (withChild === void 0) { withChild = true; }
        return Dom.find(node, condition, root, false, withChild);
    };
    Dom.next = function (node, condition, root, withChild) {
        if (withChild === void 0) { withChild = true; }
        return Dom.find(node, condition, root, true, withChild);
    };
    Dom.prevWithClass = function (node, className) {
        return Dom.prev(node, function (node) {
            return (Dom.isElement(node) && node.classList.contains(className));
        }, node.parentNode);
    };
    Dom.nextWithClass = function (node, className) {
        return Dom.next(node, function (elm) { return Dom.isElement(elm) && elm.classList.contains(className); }, node.parentNode);
    };
    Dom.find = function (node, condition, root, leftToRight, withChild) {
        if (leftToRight === void 0) { leftToRight = true; }
        if (withChild === void 0) { withChild = true; }
        var gen = this.nextGen(node, root, leftToRight, withChild);
        var item = gen.next();
        while (!item.done) {
            if (condition(item.value)) {
                return item.value;
            }
            item = gen.next();
        }
        return null;
    };
    Dom.nextGen = function (start, root, leftToRight, withChild) {
        var stack, currentNode, next;
        if (leftToRight === void 0) { leftToRight = true; }
        if (withChild === void 0) { withChild = true; }
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    stack = [];
                    currentNode = start;
                    _a.label = 1;
                case 1:
                    next = leftToRight
                        ? currentNode.nextSibling
                        : currentNode.previousSibling;
                    while (next) {
                        stack.unshift(next);
                        next = leftToRight ? next.nextSibling : next.previousSibling;
                    }
                    return [5, tslib_1.__values(this.runInStack(start, stack, leftToRight, withChild))];
                case 2:
                    _a.sent();
                    currentNode = currentNode.parentNode;
                    _a.label = 3;
                case 3:
                    if (currentNode && currentNode !== root) return [3, 1];
                    _a.label = 4;
                case 4: return [2, null];
            }
        });
    };
    Dom.each = function (elm, callback, leftToRight) {
        if (leftToRight === void 0) { leftToRight = true; }
        var gen = this.eachGen(elm, leftToRight);
        var item = gen.next();
        while (!item.done) {
            if (callback(item.value) === false) {
                return false;
            }
            item = gen.next();
        }
        return true;
    };
    Dom.eachGen = function (root, leftToRight) {
        if (leftToRight === void 0) { leftToRight = true; }
        return this.runInStack(root, [root], leftToRight);
    };
    Dom.runInStack = function (start, stack, leftToRight, withChild) {
        var item, child;
        if (withChild === void 0) { withChild = true; }
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!stack.length) return [3, 3];
                    item = stack.pop();
                    if (withChild) {
                        child = leftToRight ? item.lastChild : item.firstChild;
                        while (child) {
                            stack.push(child);
                            child = leftToRight
                                ? child.previousSibling
                                : child.nextSibling;
                        }
                    }
                    if (!(start !== item)) return [3, 2];
                    return [4, item];
                case 1:
                    _a.sent();
                    _a.label = 2;
                case 2: return [3, 0];
                case 3: return [2];
            }
        });
    };
    Dom.findWithCurrent = function (node, condition, root, sibling, child) {
        if (sibling === void 0) { sibling = 'nextSibling'; }
        if (child === void 0) { child = 'firstChild'; }
        var next = node;
        do {
            if (condition(next)) {
                return next || null;
            }
            if (child && next && next[child]) {
                var nextOne = Dom.findWithCurrent(next[child], condition, next, sibling, child);
                if (nextOne) {
                    return nextOne;
                }
            }
            while (next && !next[sibling] && next !== root) {
                next = next.parentNode;
            }
            if (next && next[sibling] && next !== root) {
                next = next[sibling];
            }
        } while (next && next !== root);
        return null;
    };
    Dom.findSibling = function (node, left, cond) {
        if (left === void 0) { left = true; }
        if (cond === void 0) { cond = function (n) {
            return !Dom.isEmptyTextNode(n);
        }; }
        var sibling = Dom.sibling(node, left);
        while (sibling && !cond(sibling)) {
            sibling = Dom.sibling(sibling, left);
        }
        return sibling && cond(sibling) ? sibling : null;
    };
    Dom.findNotEmptySibling = function (node, left) {
        return Dom.findSibling(node, left, function (n) {
            var _a;
            return (!Dom.isEmptyTextNode(n) &&
                Boolean(!Dom.isText(n) || (((_a = n.nodeValue) === null || _a === void 0 ? void 0 : _a.length) && (0, string_1.trim)(n.nodeValue))));
        });
    };
    Dom.findNotEmptyNeighbor = function (node, left, root) {
        return (0, utils_1.call)(left ? Dom.prev : Dom.next, node, function (n) {
            return Boolean(n && (!Dom.isText(n) || (0, string_1.trim)((n === null || n === void 0 ? void 0 : n.nodeValue) || '').length));
        }, root);
    };
    Dom.sibling = function (node, left) {
        return left ? node.previousSibling : node.nextSibling;
    };
    Dom.up = function (node, condition, root, checkRoot) {
        if (checkRoot === void 0) { checkRoot = false; }
        var start = node;
        if (!start) {
            return null;
        }
        do {
            if (condition(start)) {
                return start;
            }
            if (start === root || !start.parentNode) {
                break;
            }
            start = start.parentNode;
        } while (start && start !== root);
        if (start === root && checkRoot && condition(start)) {
            return start;
        }
        return null;
    };
    Dom.closest = function (node, tagsOrCondition, root) {
        var condition;
        var lc = function (s) { return s.toLowerCase(); };
        if ((0, checker_1.isFunction)(tagsOrCondition)) {
            condition = tagsOrCondition;
        }
        else if ((0, checker_1.isArray)(tagsOrCondition)) {
            var set_1 = new Set(tagsOrCondition.map(lc));
            condition = function (tag) {
                return Boolean(tag && set_1.has(lc(tag.nodeName)));
            };
        }
        else {
            condition = function (tag) {
                return Boolean(tag && lc(tagsOrCondition) === lc(tag.nodeName));
            };
        }
        return Dom.up(node, condition, root);
    };
    Dom.furthest = function (node, condition, root) {
        var matchedParent = null, current = node === null || node === void 0 ? void 0 : node.parentElement;
        while (current && current !== root) {
            if (condition(current)) {
                matchedParent = current;
            }
            current = current === null || current === void 0 ? void 0 : current.parentElement;
        }
        return matchedParent;
    };
    Dom.appendChildFirst = function (root, newElement) {
        var child = root.firstChild;
        if (child) {
            if (child !== newElement) {
                root.insertBefore(newElement, child);
            }
        }
        else {
            root.appendChild(newElement);
        }
    };
    Dom.after = function (elm, newElement) {
        var parentNode = elm.parentNode;
        if (!parentNode) {
            return;
        }
        if (parentNode.lastChild === elm) {
            parentNode.appendChild(newElement);
        }
        else {
            parentNode.insertBefore(newElement, elm.nextSibling);
        }
    };
    Dom.before = function (elm, newElement) {
        var parentNode = elm.parentNode;
        if (!parentNode) {
            return;
        }
        parentNode.insertBefore(newElement, elm);
    };
    Dom.prepend = function (root, newElement) {
        root.insertBefore(newElement, root.firstChild);
    };
    Dom.append = function (root, newElement) {
        var _this = this;
        if ((0, checker_1.isArray)(newElement)) {
            newElement.forEach(function (node) {
                _this.append(root, node);
            });
        }
        else {
            root.appendChild(newElement);
        }
    };
    Dom.moveContent = function (from, to, inStart, filter) {
        if (inStart === void 0) { inStart = false; }
        if (filter === void 0) { filter = function () { return true; }; }
        var fragment = (from.ownerDocument || document).createDocumentFragment();
        (0, array_1.toArray)(from.childNodes)
            .filter(function (elm) {
            if (filter(elm)) {
                return true;
            }
            Dom.safeRemove(elm);
            return false;
        })
            .forEach(function (node) {
            fragment.appendChild(node);
        });
        if (!inStart || !to.firstChild) {
            to.appendChild(fragment);
        }
        else {
            to.insertBefore(fragment, to.firstChild);
        }
    };
    Dom.isOrContains = function (root, child, onlyContains) {
        if (onlyContains === void 0) { onlyContains = false; }
        if (root === child) {
            return !onlyContains;
        }
        return Boolean(child && root && this.up(child, function (nd) { return nd === root; }, root, true));
    };
    Dom.safeRemove = function () {
        var nodes = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            nodes[_i] = arguments[_i];
        }
        nodes.forEach(function (node) {
            return Dom.isNode(node) &&
                node.parentNode &&
                node.parentNode.removeChild(node);
        });
    };
    Dom.safeInsertNode = function (range, node) {
        range.collapsed || range.deleteContents();
        range.insertNode(node);
        range.setStartBefore(node);
        range.collapse(true);
        [node.nextSibling, node.previousSibling].forEach(function (n) { return Dom.isText(n) && !n.nodeValue && Dom.safeRemove(n); });
    };
    Dom.hide = function (node) {
        if (!node) {
            return;
        }
        (0, utils_1.dataBind)(node, '__old_display', node.style.display);
        node.style.display = 'none';
    };
    Dom.show = function (node) {
        if (!node) {
            return;
        }
        var display = (0, utils_1.dataBind)(node, '__old_display');
        if (node.style.display === 'none') {
            node.style.display = display || '';
        }
    };
    Dom.isTag = function (node, tagNames) {
        if (!this.isElement(node)) {
            return false;
        }
        var nameL = node.tagName.toLowerCase();
        var nameU = node.tagName.toUpperCase();
        if (tagNames instanceof Set) {
            return tagNames.has(nameL) || tagNames.has(nameU);
        }
        var tags = (0, array_1.asArray)(tagNames).map(function (s) { return String(s).toLowerCase(); });
        for (var i = 0; i < tags.length; i += 1) {
            if (nameL === tags[i] || nameU === tags[i]) {
                return true;
            }
        }
        return false;
    };
    Dom.markTemporary = function (element, attributes) {
        attributes && (0, utils_1.attr)(element, attributes);
        (0, utils_1.attr)(element, constants_1.TEMP_ATTR, true);
        return element;
    };
    Dom.isTemporary = function (element) {
        if (!Dom.isElement(element)) {
            return false;
        }
        return (0, is_marker_1.isMarker)(element) || (0, utils_1.attr)(element, constants_1.TEMP_ATTR) === 'true';
    };
    Dom.replaceTemporaryFromString = function (value) {
        return value.replace(/<([a-z]+)[^>]+data-jodit-temp[^>]+>(.+?)<\/\1>/gi, '$2');
    };
    Dom.temporaryList = function (root) {
        return (0, utils_1.$$)("[".concat(constants_1.TEMP_ATTR, "]"), root);
    };
    return Dom;
}());
exports.Dom = Dom;


/***/ }),

/***/ 64968:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(24263), exports);
tslib_1.__exportStar(__webpack_require__(33841), exports);


/***/ }),

/***/ 33841:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LazyWalker = void 0;
var tslib_1 = __webpack_require__(20255);
var eventify_1 = __webpack_require__(73852);
var decorators_1 = __webpack_require__(43441);
var dom_1 = __webpack_require__(24263);
var LazyWalker = (function (_super) {
    tslib_1.__extends(LazyWalker, _super);
    function LazyWalker(async, options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this) || this;
        _this.async = async;
        _this.options = options;
        _this.workNodes = null;
        _this.hadAffect = false;
        _this.isWorked = false;
        _this.isFinished = false;
        _this.idleId = 0;
        return _this;
    }
    LazyWalker.prototype.setWork = function (root) {
        if (this.isWorked) {
            this.break();
        }
        this.workNodes = dom_1.Dom.eachGen(root, !this.options.reverse);
        this.isFinished = false;
        this.startIdleRequest();
        return this;
    };
    LazyWalker.prototype.startIdleRequest = function () {
        var _a;
        this.idleId = this.async.requestIdleCallback(this.workPerform, {
            timeout: (_a = this.options.timeout) !== null && _a !== void 0 ? _a : 10
        });
    };
    LazyWalker.prototype.break = function (reason) {
        if (this.isWorked) {
            this.stop();
            this.emit('break', reason);
        }
    };
    LazyWalker.prototype.end = function () {
        if (this.isWorked) {
            this.stop();
            this.emit('end', this.hadAffect);
            this.hadAffect = false;
        }
    };
    LazyWalker.prototype.stop = function () {
        this.isWorked = false;
        this.isFinished = true;
        this.workNodes = null;
        this.async.cancelIdleCallback(this.idleId);
    };
    LazyWalker.prototype.destruct = function () {
        _super.prototype.destruct.call(this);
        this.stop();
    };
    LazyWalker.prototype.workPerform = function (deadline) {
        var _a;
        if (this.workNodes) {
            this.isWorked = true;
            var count = 0;
            var chunkSize = (_a = this.options.timeoutChunkSize) !== null && _a !== void 0 ? _a : 50;
            while (!this.isFinished &&
                (deadline.timeRemaining() > 0 ||
                    (deadline.didTimeout && count <= chunkSize))) {
                var item = this.workNodes.next();
                count += 1;
                if (this.visitNode(item.value)) {
                    this.hadAffect = true;
                }
                if (item.done) {
                    this.end();
                    return;
                }
            }
        }
        else {
            this.end();
        }
        if (!this.isFinished) {
            this.startIdleRequest();
        }
    };
    LazyWalker.prototype.visitNode = function (nodeElm) {
        var _a;
        if (!nodeElm ||
            (this.options.whatToShow !== undefined &&
                nodeElm.nodeType !== this.options.whatToShow)) {
            return false;
        }
        return (_a = this.emit('visit', nodeElm)) !== null && _a !== void 0 ? _a : false;
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], LazyWalker.prototype, "workPerform", null);
    return LazyWalker;
}(eventify_1.Eventify));
exports.LazyWalker = LazyWalker;


/***/ }),

/***/ 3808:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EventEmitter = void 0;
var tslib_1 = __webpack_require__(20255);
var store_1 = __webpack_require__(83611);
var is_string_1 = __webpack_require__(24421);
var is_function_1 = __webpack_require__(42096);
var is_array_1 = __webpack_require__(49781);
var error_1 = __webpack_require__(56964);
var split_array_1 = __webpack_require__(14556);
var EventEmitter = (function () {
    function EventEmitter(doc) {
        var _this = this;
        this.__mutedEvents = new Set();
        this.__key = '__JoditEventEmitterNamespaces';
        this.__doc = document;
        this.__prepareEvent = function (e) {
            if (e.cancelBubble) {
                return;
            }
            if (e.composed && (0, is_function_1.isFunction)(e.composedPath) && e.composedPath()[0]) {
                Object.defineProperty(e, 'target', {
                    value: e.composedPath()[0],
                    configurable: true,
                    enumerable: true
                });
            }
            if (e.type.match(/^touch/) &&
                e.changedTouches &&
                e.changedTouches.length) {
                ['clientX', 'clientY', 'pageX', 'pageY'].forEach(function (key) {
                    Object.defineProperty(e, key, {
                        value: e.changedTouches[0][key],
                        configurable: true,
                        enumerable: true
                    });
                });
            }
            if (!e.originalEvent) {
                e.originalEvent = e;
            }
            if (e.type === 'paste' &&
                e.clipboardData === undefined &&
                _this.__doc.defaultView.clipboardData) {
                Object.defineProperty(e, 'clipboardData', {
                    get: function () {
                        return _this.__doc.defaultView.clipboardData;
                    },
                    configurable: true,
                    enumerable: true
                });
            }
        };
        this.currents = [];
        this.__stopped = [];
        this.__isDestructed = false;
        if (doc) {
            this.__doc = doc;
        }
        this.__key += new Date().getTime();
    }
    EventEmitter.prototype.mute = function (event) {
        this.__mutedEvents.add(event !== null && event !== void 0 ? event : '*');
        return this;
    };
    EventEmitter.prototype.isMuted = function (event) {
        if (event && this.__mutedEvents.has(event)) {
            return true;
        }
        return this.__mutedEvents.has('*');
    };
    EventEmitter.prototype.unmute = function (event) {
        this.__mutedEvents.delete(event !== null && event !== void 0 ? event : '*');
        return this;
    };
    EventEmitter.prototype.__eachEvent = function (events, callback) {
        var _this = this;
        var eventParts = (0, split_array_1.splitArray)(events).map(function (e) { return e.trim(); });
        eventParts.forEach(function (eventNameSpace) {
            var eventAndNameSpace = eventNameSpace.split('.');
            var namespace = eventAndNameSpace[1] || store_1.defaultNameSpace;
            callback.call(_this, eventAndNameSpace[0], namespace);
        });
    };
    EventEmitter.prototype.__getStore = function (subject) {
        if (!subject) {
            throw (0, error_1.error)('Need subject');
        }
        if (subject[this.__key] === undefined) {
            var store = new store_1.EventHandlersStore();
            Object.defineProperty(subject, this.__key, {
                enumerable: false,
                configurable: true,
                writable: true,
                value: store
            });
        }
        return subject[this.__key];
    };
    EventEmitter.prototype.__removeStoreFromSubject = function (subject) {
        if (subject[this.__key] !== undefined) {
            Object.defineProperty(subject, this.__key, {
                enumerable: false,
                configurable: true,
                writable: true,
                value: undefined
            });
        }
    };
    EventEmitter.prototype.__triggerNativeEvent = function (element, event) {
        var evt = this.__doc.createEvent('HTMLEvents');
        if ((0, is_string_1.isString)(event)) {
            evt.initEvent(event, true, true);
        }
        else {
            evt.initEvent(event.type, event.bubbles, event.cancelable);
            [
                'screenX',
                'screenY',
                'clientX',
                'clientY',
                'target',
                'srcElement',
                'currentTarget',
                'timeStamp',
                'which',
                'keyCode'
            ].forEach(function (property) {
                Object.defineProperty(evt, property, {
                    value: event[property],
                    enumerable: true
                });
            });
            Object.defineProperty(evt, 'originalEvent', {
                value: event,
                enumerable: true
            });
        }
        element.dispatchEvent(evt);
    };
    Object.defineProperty(EventEmitter.prototype, "current", {
        get: function () {
            return this.currents[this.currents.length - 1];
        },
        enumerable: false,
        configurable: true
    });
    EventEmitter.prototype.on = function (eventsOrSubjects, callbackOrEvents, optionsOrCallback, opts) {
        var _this = this;
        var subjects;
        var events;
        var callback;
        var options;
        if ((0, is_string_1.isString)(eventsOrSubjects) || (0, is_string_1.isStringArray)(eventsOrSubjects)) {
            subjects = this;
            events = eventsOrSubjects;
            callback = callbackOrEvents;
            options = optionsOrCallback;
        }
        else {
            subjects = eventsOrSubjects;
            events = callbackOrEvents;
            callback = optionsOrCallback;
            options = opts;
        }
        if (!((0, is_string_1.isString)(events) || (0, is_string_1.isStringArray)(events)) ||
            events.length === 0) {
            throw (0, error_1.error)('Need events names');
        }
        if (!(0, is_function_1.isFunction)(callback)) {
            throw (0, error_1.error)('Need event handler');
        }
        if ((0, is_array_1.isArray)(subjects)) {
            subjects.forEach(function (subj) {
                _this.on(subj, events, callback, options);
            });
            return this;
        }
        var subject = subjects;
        var store = this.__getStore(subject);
        var isDOMElement = (0, is_function_1.isFunction)(subject.addEventListener), self = this;
        var syntheticCallback = function (event) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            if (self.isMuted(event)) {
                return;
            }
            return callback && callback.call.apply(callback, tslib_1.__spreadArray([this], tslib_1.__read(args), false));
        };
        if (isDOMElement) {
            syntheticCallback = function (event) {
                if (self.isMuted(event.type)) {
                    return;
                }
                self.__prepareEvent(event);
                if (callback && callback.call(this, event) === false) {
                    event.preventDefault();
                    event.stopImmediatePropagation();
                    return false;
                }
                return;
            };
        }
        this.__eachEvent(events, function (event, namespace) {
            if (event.length === 0) {
                throw (0, error_1.error)('Need event name');
            }
            if (store.indexOf(event, namespace, callback) === false) {
                var block = {
                    event: event,
                    originalCallback: callback,
                    syntheticCallback: syntheticCallback
                };
                store.set(event, namespace, block, options === null || options === void 0 ? void 0 : options.top);
                if (isDOMElement) {
                    var options_1 = [
                        'touchstart',
                        'touchend',
                        'scroll',
                        'mousewheel',
                        'mousemove',
                        'touchmove'
                    ].includes(event)
                        ? {
                            passive: true
                        }
                        : false;
                    subject.addEventListener(event, syntheticCallback, options_1);
                }
            }
        });
        return this;
    };
    EventEmitter.prototype.one = function (eventsOrSubjects, callbackOrEvents, optionsOrCallback, opts) {
        var _this = this;
        var subjects;
        var events;
        var callback;
        var options;
        if ((0, is_string_1.isString)(eventsOrSubjects) || (0, is_string_1.isStringArray)(eventsOrSubjects)) {
            subjects = this;
            events = eventsOrSubjects;
            callback = callbackOrEvents;
            options = optionsOrCallback;
        }
        else {
            subjects = eventsOrSubjects;
            events = callbackOrEvents;
            callback = optionsOrCallback;
            options = opts;
        }
        var newCallback = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            _this.off(subjects, events, newCallback);
            return callback.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args), false));
        };
        this.on(subjects, events, newCallback, options);
        return this;
    };
    EventEmitter.prototype.off = function (eventsOrSubjects, callbackOrEvents, handler) {
        var _this = this;
        var subjects;
        var events;
        var callback;
        if ((0, is_string_1.isString)(eventsOrSubjects) || (0, is_string_1.isStringArray)(eventsOrSubjects)) {
            subjects = this;
            events = eventsOrSubjects;
            callback = callbackOrEvents;
        }
        else {
            subjects = eventsOrSubjects;
            events = callbackOrEvents;
            callback = handler;
        }
        if ((0, is_array_1.isArray)(subjects)) {
            subjects.forEach(function (subj) {
                _this.off(subj, events, callback);
            });
            return this;
        }
        var subject = subjects;
        var store = this.__getStore(subject);
        if (!((0, is_string_1.isString)(events) || (0, is_string_1.isStringArray)(events)) ||
            events.length === 0) {
            store.namespaces().forEach(function (namespace) {
                _this.off(subject, '.' + namespace);
            });
            this.__removeStoreFromSubject(subject);
            return this;
        }
        var isDOMElement = (0, is_function_1.isFunction)(subject.removeEventListener), removeEventListener = function (block) {
            if (isDOMElement) {
                subject.removeEventListener(block.event, block.syntheticCallback, false);
            }
        }, removeCallbackFromNameSpace = function (event, namespace) {
            if (event === '') {
                store.events(namespace).forEach(function (eventName) {
                    if (eventName !== '') {
                        removeCallbackFromNameSpace(eventName, namespace);
                    }
                });
                return;
            }
            var blocks = store.get(event, namespace);
            if (!blocks || !blocks.length) {
                return;
            }
            if (!(0, is_function_1.isFunction)(callback)) {
                blocks.forEach(removeEventListener);
                blocks.length = 0;
                store.clearEvents(namespace, event);
            }
            else {
                var index = store.indexOf(event, namespace, callback);
                if (index !== false) {
                    removeEventListener(blocks[index]);
                    blocks.splice(index, 1);
                    if (!blocks.length) {
                        store.clearEvents(namespace, event);
                    }
                }
            }
        };
        this.__eachEvent(events, function (event, namespace) {
            if (namespace === store_1.defaultNameSpace) {
                store.namespaces().forEach(function (namespace) {
                    removeCallbackFromNameSpace(event, namespace);
                });
            }
            else {
                removeCallbackFromNameSpace(event, namespace);
            }
        });
        if (store.isEmpty()) {
            this.__removeStoreFromSubject(subject);
        }
        return this;
    };
    EventEmitter.prototype.stopPropagation = function (subjectOrEvents, eventsList) {
        var _this = this;
        var subject = (0, is_string_1.isString)(subjectOrEvents)
            ? this
            : subjectOrEvents;
        var events = (0, is_string_1.isString)(subjectOrEvents)
            ? subjectOrEvents
            : eventsList;
        if (typeof events !== 'string') {
            throw (0, error_1.error)('Need event names');
        }
        var store = this.__getStore(subject);
        this.__eachEvent(events, function (event, namespace) {
            var blocks = store.get(event, namespace);
            if (blocks) {
                _this.__stopped.push(blocks);
            }
            if (namespace === store_1.defaultNameSpace) {
                store
                    .namespaces(true)
                    .forEach(function (ns) {
                    return _this.stopPropagation(subject, event + '.' + ns);
                });
            }
        });
    };
    EventEmitter.prototype.__removeStop = function (currentBlocks) {
        if (currentBlocks) {
            var index = this.__stopped.indexOf(currentBlocks);
            index !== -1 && this.__stopped.splice(0, index + 1);
        }
    };
    EventEmitter.prototype.__isStopped = function (currentBlocks) {
        return (currentBlocks !== undefined &&
            this.__stopped.indexOf(currentBlocks) !== -1);
    };
    EventEmitter.prototype.fire = function (subjectOrEvents, eventsList) {
        var _this = this;
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        var result, result_value;
        var subject = (0, is_string_1.isString)(subjectOrEvents)
            ? this
            : subjectOrEvents;
        var events = (0, is_string_1.isString)(subjectOrEvents)
            ? subjectOrEvents
            : eventsList;
        var argumentsList = (0, is_string_1.isString)(subjectOrEvents)
            ? tslib_1.__spreadArray([eventsList], tslib_1.__read(args), false) : args;
        var isDOMElement = (0, is_function_1.isFunction)(subject.dispatchEvent);
        if (!isDOMElement && !(0, is_string_1.isString)(events)) {
            throw (0, error_1.error)('Need events names');
        }
        var store = this.__getStore(subject);
        if (!(0, is_string_1.isString)(events) && isDOMElement) {
            this.__triggerNativeEvent(subject, eventsList);
        }
        else {
            this.__eachEvent(events, function (event, namespace) {
                if (isDOMElement) {
                    _this.__triggerNativeEvent(subject, event);
                }
                else {
                    var blocks_1 = store.get(event, namespace);
                    if (blocks_1) {
                        try {
                            tslib_1.__spreadArray([], tslib_1.__read(blocks_1), false).every(function (block) {
                                var _a;
                                if (_this.__isStopped(blocks_1)) {
                                    return false;
                                }
                                _this.currents.push(event);
                                result_value = (_a = block.syntheticCallback).call.apply(_a, tslib_1.__spreadArray([subject,
                                    event], tslib_1.__read(argumentsList), false));
                                _this.currents.pop();
                                if (result_value !== undefined) {
                                    result = result_value;
                                }
                                return true;
                            });
                        }
                        finally {
                            _this.__removeStop(blocks_1);
                        }
                    }
                    if (namespace === store_1.defaultNameSpace && !isDOMElement) {
                        store
                            .namespaces()
                            .filter(function (ns) { return ns !== namespace; })
                            .forEach(function (ns) {
                            var result_second = _this.fire.apply(_this, tslib_1.__spreadArray([
                                subject,
                                event + '.' + ns
                            ], tslib_1.__read(argumentsList), false));
                            if (result_second !== undefined) {
                                result = result_second;
                            }
                        });
                    }
                }
            });
        }
        return result;
    };
    EventEmitter.prototype.destruct = function () {
        if (!this.__isDestructed) {
            return;
        }
        this.__isDestructed = true;
        this.off(this);
        this.__getStore(this).clear();
        this.__removeStoreFromSubject(this);
    };
    return EventEmitter;
}());
exports.EventEmitter = EventEmitter;


/***/ }),

/***/ 73852:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Eventify = void 0;
var tslib_1 = __webpack_require__(20255);
var Eventify = (function () {
    function Eventify() {
        this.__map = new Map();
    }
    Eventify.prototype.on = function (name, func) {
        var _a;
        if (!this.__map.has(name)) {
            this.__map.set(name, new Set());
        }
        (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.add(func);
        return this;
    };
    Eventify.prototype.off = function (name, func) {
        var _a;
        if (this.__map.has(name)) {
            (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.delete(func);
        }
        return this;
    };
    Eventify.prototype.destruct = function () {
        this.__map.clear();
    };
    Eventify.prototype.emit = function (name) {
        var _a;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var result;
        if (this.__map.has(name)) {
            (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.forEach(function (cb) {
                result = cb.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args), false));
            });
        }
        return result;
    };
    return Eventify;
}());
exports.Eventify = Eventify;


/***/ }),

/***/ 55395:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(3808), exports);
tslib_1.__exportStar(__webpack_require__(73852), exports);
tslib_1.__exportStar(__webpack_require__(88418), exports);
tslib_1.__exportStar(__webpack_require__(83611), exports);


/***/ }),

/***/ 88418:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.observable = void 0;
var tslib_1 = __webpack_require__(20255);
var is_array_1 = __webpack_require__(49781);
var is_equal_1 = __webpack_require__(32756);
var is_plain_object_1 = __webpack_require__(79736);
var watch_1 = __webpack_require__(46163);
var OBSERVABLE_OBJECT = Symbol('observable-object');
function isObservableObject(obj) {
    return obj[OBSERVABLE_OBJECT] !== undefined;
}
function observable(obj) {
    if (isObservableObject(obj)) {
        return obj;
    }
    var __lockEvent = {};
    var __onEvents = {};
    var on = function (event, callback) {
        if ((0, is_array_1.isArray)(event)) {
            event.map(function (e) { return on(e, callback); });
            return obj;
        }
        if (!__onEvents[event]) {
            __onEvents[event] = [];
        }
        __onEvents[event].push(callback);
        return obj;
    };
    var fire = function (event) {
        var attr = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            attr[_i - 1] = arguments[_i];
        }
        if ((0, is_array_1.isArray)(event)) {
            event.map(function (e) { return fire.apply(void 0, tslib_1.__spreadArray([e], tslib_1.__read(attr), false)); });
            return;
        }
        try {
            if (!__lockEvent[event] && __onEvents[event]) {
                __lockEvent[event] = true;
                __onEvents[event].forEach(function (clb) { return clb.call.apply(clb, tslib_1.__spreadArray([obj], tslib_1.__read(attr), false)); });
            }
        }
        finally {
            __lockEvent[event] = false;
        }
    };
    var initAccessors = function (dict, prefixes) {
        if (prefixes === void 0) { prefixes = []; }
        var store = {};
        if (isObservableObject(dict)) {
            return;
        }
        Object.defineProperty(dict, OBSERVABLE_OBJECT, {
            enumerable: false,
            value: true
        });
        Object.keys(dict).forEach(function (_key) {
            var key = _key;
            var prefix = prefixes.concat(key).filter(function (a) { return a.length; });
            store[key] = dict[key];
            var descriptor = (0, watch_1.getPropertyDescriptor)(dict, key);
            Object.defineProperty(dict, key, {
                set: function (value) {
                    var oldValue = store[key];
                    if (!(0, is_equal_1.isFastEqual)(store[key], value)) {
                        fire([
                            'beforeChange',
                            "beforeChange.".concat(prefix.join('.'))
                        ], key, value);
                        if ((0, is_plain_object_1.isPlainObject)(value)) {
                            initAccessors(value, prefix);
                        }
                        if (descriptor && descriptor.set) {
                            descriptor.set.call(obj, value);
                        }
                        else {
                            store[key] = value;
                        }
                        var sum_1 = [];
                        fire(tslib_1.__spreadArray([
                            'change'
                        ], tslib_1.__read(prefix.reduce(function (rs, p) {
                            sum_1.push(p);
                            rs.push("change.".concat(sum_1.join('.')));
                            return rs;
                        }, [])), false), prefix.join('.'), oldValue, (value === null || value === void 0 ? void 0 : value.valueOf)
                            ? value.valueOf()
                            : value);
                    }
                },
                get: function () {
                    if (descriptor && descriptor.get) {
                        return descriptor.get.call(obj);
                    }
                    return store[key];
                },
                enumerable: true,
                configurable: true
            });
            if ((0, is_plain_object_1.isPlainObject)(store[key])) {
                initAccessors(store[key], prefix);
            }
        });
        Object.defineProperty(obj, 'on', {
            value: on
        });
    };
    initAccessors(obj);
    return obj;
}
exports.observable = observable;


/***/ }),

/***/ 83611:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EventHandlersStore = exports.defaultNameSpace = void 0;
var assert_1 = __webpack_require__(52378);
var to_array_1 = __webpack_require__(1853);
exports.defaultNameSpace = 'JoditEventDefaultNamespace';
var EventHandlersStore = (function () {
    function EventHandlersStore() {
        this.__store = new Map();
    }
    EventHandlersStore.prototype.get = function (event, namespace) {
        if (this.__store.has(namespace)) {
            var ns = this.__store.get(namespace);
            void 0;
            return ns[event];
        }
    };
    EventHandlersStore.prototype.indexOf = function (event, namespace, originalCallback) {
        var blocks = this.get(event, namespace);
        if (blocks) {
            for (var i = 0; i < blocks.length; i += 1) {
                if (blocks[i].originalCallback === originalCallback) {
                    return i;
                }
            }
        }
        return false;
    };
    EventHandlersStore.prototype.namespaces = function (withoutDefault) {
        if (withoutDefault === void 0) { withoutDefault = false; }
        var nss = (0, to_array_1.toArray)(this.__store.keys());
        return withoutDefault ? nss.filter(function (ns) { return ns !== exports.defaultNameSpace; }) : nss;
    };
    EventHandlersStore.prototype.events = function (namespace) {
        var ns = this.__store.get(namespace);
        return ns ? Object.keys(ns) : [];
    };
    EventHandlersStore.prototype.set = function (event, namespace, data, onTop) {
        if (onTop === void 0) { onTop = false; }
        var ns = this.__store.get(namespace);
        if (!ns) {
            ns = {};
            this.__store.set(namespace, ns);
        }
        if (ns[event] === undefined) {
            ns[event] = [];
        }
        if (!onTop) {
            ns[event].push(data);
        }
        else {
            ns[event].unshift(data);
        }
    };
    EventHandlersStore.prototype.clear = function () {
        this.__store.clear();
    };
    EventHandlersStore.prototype.clearEvents = function (namespace, event) {
        var ns = this.__store.get(namespace);
        if (ns && ns[event]) {
            delete ns[event];
            if (!Object.keys(ns).length) {
                this.__store.delete(namespace);
            }
        }
    };
    EventHandlersStore.prototype.isEmpty = function () {
        return this.__store.size === 0;
    };
    return EventHandlersStore;
}());
exports.EventHandlersStore = EventHandlersStore;


/***/ }),

/***/ 17332:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.eventEmitter = exports.getContainer = exports.extendLang = exports.modules = exports.pluginSystem = exports.uniqueUid = exports.instances = void 0;
var plugin_system_1 = __webpack_require__(44540);
var dom_1 = __webpack_require__(64968);
var event_emitter_1 = __webpack_require__(55395);
var is_jodit_object_1 = __webpack_require__(77892);
var is_view_object_1 = __webpack_require__(96574);
var get_class_name_1 = __webpack_require__(87247);
var kebab_case_1 = __webpack_require__(11278);
var constants_1 = __webpack_require__(86893);
exports.instances = {};
var counter = 1;
var uuids = new Set();
function uniqueUid() {
    function gen() {
        counter += 10 * (Math.random() + 1);
        return Math.round(counter).toString(16);
    }
    var uid = gen();
    while (uuids.has(uid)) {
        uid = gen();
    }
    uuids.add(uid);
    return uid;
}
exports.uniqueUid = uniqueUid;
exports.pluginSystem = new plugin_system_1.PluginSystem();
exports.modules = {};
var extendLang = function (langs) {
    Object.keys(langs).forEach(function (key) {
        if (constants_1.lang[key]) {
            Object.assign(constants_1.lang[key], langs[key]);
        }
        else {
            constants_1.lang[key] = langs[key];
        }
    });
};
exports.extendLang = extendLang;
var boxes = new WeakMap();
function getContainer(jodit, classFunc, tag, createInsideEditor) {
    if (tag === void 0) { tag = 'div'; }
    if (createInsideEditor === void 0) { createInsideEditor = false; }
    var name = classFunc ? (0, get_class_name_1.getClassName)(classFunc.prototype) : 'jodit-utils';
    var data = boxes.get(jodit) || {}, key = name + tag;
    var view = (0, is_view_object_1.isViewObject)(jodit) ? jodit : jodit.j;
    if (!data[key]) {
        var c = view.c, body = (0, is_jodit_object_1.isJoditObject)(jodit) && jodit.o.shadowRoot
            ? jodit.o.shadowRoot
            : jodit.od.body;
        if (createInsideEditor &&
            (0, is_jodit_object_1.isJoditObject)(jodit) &&
            jodit.od !== jodit.ed) {
            c = jodit.createInside;
            var place = tag === 'style' ? jodit.ed.head : jodit.ed.body;
            body =
                (0, is_jodit_object_1.isJoditObject)(jodit) && jodit.o.shadowRoot
                    ? jodit.o.shadowRoot
                    : place;
        }
        var box_1 = c.element(tag, {
            className: "jodit jodit-".concat((0, kebab_case_1.kebabCase)(name), "-container jodit-box")
        });
        box_1.classList.add("jodit_theme_".concat(view.o.theme || 'default'));
        body.appendChild(box_1);
        data[key] = box_1;
        jodit.hookStatus('beforeDestruct', function () {
            dom_1.Dom.safeRemove(box_1);
            delete data[key];
            if (Object.keys(data).length) {
                boxes.delete(jodit);
            }
        });
        boxes.set(jodit, data);
    }
    data[key].classList.remove('jodit_theme_default', 'jodit_theme_dark');
    data[key].classList.add("jodit_theme_".concat(view.o.theme || 'default'));
    return data[key];
}
exports.getContainer = getContainer;
exports.eventEmitter = new event_emitter_1.EventEmitter();


/***/ }),

/***/ 34578:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.asArray = void 0;
var is_array_1 = __webpack_require__(49781);
var asArray = function (a) { return ((0, is_array_1.isArray)(a) ? a : [a]); };
exports.asArray = asArray;


/***/ }),

/***/ 12557:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toArray = exports.splitArray = exports.asArray = void 0;
var as_array_1 = __webpack_require__(34578);
Object.defineProperty(exports, "asArray", ({ enumerable: true, get: function () { return as_array_1.asArray; } }));
var split_array_1 = __webpack_require__(14556);
Object.defineProperty(exports, "splitArray", ({ enumerable: true, get: function () { return split_array_1.splitArray; } }));
var to_array_1 = __webpack_require__(1853);
Object.defineProperty(exports, "toArray", ({ enumerable: true, get: function () { return to_array_1.toArray; } }));


/***/ }),

/***/ 14556:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.splitArray = void 0;
function splitArray(a) {
    return Array.isArray(a) ? a : a.split(/[,\s]+/);
}
exports.splitArray = splitArray;


/***/ }),

/***/ 1853:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toArray = void 0;
var reset_1 = __webpack_require__(80861);
var is_native_function_1 = __webpack_require__(28069);
exports.toArray = function toArray() {
    var _a;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var func = (0, is_native_function_1.isNativeFunction)(Array.from)
        ? Array.from
        : (_a = (0, reset_1.reset)('Array.from')) !== null && _a !== void 0 ? _a : Array.from;
    return func.apply(Array, args);
};


/***/ }),

/***/ 4696:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(27512), exports);


/***/ }),

/***/ 27512:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.clearTimeout = exports.setTimeout = void 0;
var tslib_1 = __webpack_require__(20255);
function setTimeout(callback, timeout) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    if (!timeout) {
        callback.call.apply(callback, tslib_1.__spreadArray([null], tslib_1.__read(args), false));
    }
    else {
        return window.setTimeout.apply(window, tslib_1.__spreadArray([callback, timeout], tslib_1.__read(args), false));
    }
    return 0;
}
exports.setTimeout = setTimeout;
function clearTimeout(timer) {
    window.clearTimeout(timer);
}
exports.clearTimeout = clearTimeout;


/***/ }),

/***/ 31553:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasBrowserColorPicker = void 0;
function hasBrowserColorPicker() {
    var supportsColor = true;
    try {
        var a = document.createElement('input');
        a.type = 'color';
        a.value = '!';
        supportsColor = a.type === 'color' && a.value !== '!';
    }
    catch (e) {
        supportsColor = false;
    }
    return supportsColor;
}
exports.hasBrowserColorPicker = hasBrowserColorPicker;


/***/ }),

/***/ 10172:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(31553), exports);
tslib_1.__exportStar(__webpack_require__(49781), exports);
tslib_1.__exportStar(__webpack_require__(67749), exports);
tslib_1.__exportStar(__webpack_require__(32756), exports);
tslib_1.__exportStar(__webpack_require__(42096), exports);
tslib_1.__exportStar(__webpack_require__(66869), exports);
tslib_1.__exportStar(__webpack_require__(72543), exports);
tslib_1.__exportStar(__webpack_require__(33156), exports);
tslib_1.__exportStar(__webpack_require__(93578), exports);
tslib_1.__exportStar(__webpack_require__(77892), exports);
tslib_1.__exportStar(__webpack_require__(96574), exports);
tslib_1.__exportStar(__webpack_require__(60280), exports);
tslib_1.__exportStar(__webpack_require__(28069), exports);
tslib_1.__exportStar(__webpack_require__(61817), exports);
tslib_1.__exportStar(__webpack_require__(57649), exports);
tslib_1.__exportStar(__webpack_require__(79736), exports);
tslib_1.__exportStar(__webpack_require__(26335), exports);
tslib_1.__exportStar(__webpack_require__(24421), exports);
tslib_1.__exportStar(__webpack_require__(64350), exports);
tslib_1.__exportStar(__webpack_require__(19179), exports);
tslib_1.__exportStar(__webpack_require__(24021), exports);
tslib_1.__exportStar(__webpack_require__(85994), exports);
tslib_1.__exportStar(__webpack_require__(37204), exports);


/***/ }),

/***/ 49781:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isArray = void 0;
function isArray(elm) {
    return Array.isArray(elm);
}
exports.isArray = isArray;


/***/ }),

/***/ 67749:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isBoolean = void 0;
function isBoolean(elm) {
    return typeof elm === 'boolean';
}
exports.isBoolean = isBoolean;


/***/ }),

/***/ 32756:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isFastEqual = exports.isEqual = void 0;
var stringify_1 = __webpack_require__(42554);
function isEqual(a, b) {
    return a === b || (0, stringify_1.stringify)(a) === (0, stringify_1.stringify)(b);
}
exports.isEqual = isEqual;
function isFastEqual(a, b) {
    return a === b;
}
exports.isFastEqual = isFastEqual;


/***/ }),

/***/ 42096:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isFunction = void 0;
function isFunction(value) {
    return typeof value === 'function';
}
exports.isFunction = isFunction;


/***/ }),

/***/ 72543:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isHtmlFromWord = void 0;
function isHtmlFromWord(data) {
    return (data.search(/<meta.*?Microsoft Excel\s[\d].*?>/) !== -1 ||
        data.search(/<meta.*?Microsoft Word\s[\d].*?>/) !== -1 ||
        (data.search(/style="[^"]*mso-/) !== -1 && data.search(/<font/) !== -1));
}
exports.isHtmlFromWord = isHtmlFromWord;


/***/ }),

/***/ 66869:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isHTML = void 0;
var is_string_1 = __webpack_require__(24421);
var isHTML = function (str) {
    return (0, is_string_1.isString)(str) &&
        /<([A-Za-z][A-Za-z0-9]*)\b[^>]*>(.*?)<\/\1>/m.test(str.replace(/[\r\n]/g, ''));
};
exports.isHTML = isHTML;


/***/ }),

/***/ 33156:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasContainer = exports.isDestructable = exports.isInitable = void 0;
var is_function_1 = __webpack_require__(42096);
var dom_1 = __webpack_require__(24263);
var is_void_1 = __webpack_require__(24021);
function isInitable(value) {
    return !(0, is_void_1.isVoid)(value) && (0, is_function_1.isFunction)(value.init);
}
exports.isInitable = isInitable;
function isDestructable(value) {
    return !(0, is_void_1.isVoid)(value) && (0, is_function_1.isFunction)(value.destruct);
}
exports.isDestructable = isDestructable;
function hasContainer(value) {
    return !(0, is_void_1.isVoid)(value) && dom_1.Dom.isElement(value.container);
}
exports.hasContainer = hasContainer;


/***/ }),

/***/ 93578:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isInt = void 0;
var is_numeric_1 = __webpack_require__(57649);
var is_string_1 = __webpack_require__(24421);
function isInt(value) {
    if ((0, is_string_1.isString)(value) && (0, is_numeric_1.isNumeric)(value)) {
        value = parseFloat(value);
    }
    return typeof value === 'number' && Number.isFinite(value) && !(value % 1);
}
exports.isInt = isInt;


/***/ }),

/***/ 77892:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isJoditObject = void 0;
var is_function_1 = __webpack_require__(42096);
function isJoditObject(jodit) {
    return Boolean(jodit &&
        jodit instanceof Object &&
        (0, is_function_1.isFunction)(jodit.constructor) &&
        ((typeof Jodit !== 'undefined' && jodit instanceof Jodit) ||
            jodit.isJodit));
}
exports.isJoditObject = isJoditObject;


/***/ }),

/***/ 60280:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isLicense = void 0;
var is_string_1 = __webpack_require__(24421);
var isLicense = function (license) {
    return (0, is_string_1.isString)(license) &&
        license.length === 23 &&
        /^[a-z0-9]{5}-[a-z0-9]{5}-[a-z0-9]{5}-[a-z0-9]{5}$/i.test(license);
};
exports.isLicense = isLicense;


/***/ }),

/***/ 37204:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isMarker = void 0;
var dom_1 = __webpack_require__(24263);
var constants_1 = __webpack_require__(86893);
function isMarker(elm) {
    return (dom_1.Dom.isNode(elm) &&
        dom_1.Dom.isTag(elm, 'span') &&
        elm.hasAttribute('data-' + constants_1.MARKER_CLASS));
}
exports.isMarker = isMarker;


/***/ }),

/***/ 28069:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNativeFunction = void 0;
function isNativeFunction(f) {
    return (Boolean(f) &&
        (typeof f).toLowerCase() === 'function' &&
        (f === Function.prototype ||
            /^\s*function\s*(\b[a-z$_][a-z0-9$_]*\b)*\s*\((|([a-z$_][a-z0-9$_]*)(\s*,[a-z$_][a-z0-9$_]*)*)\)\s*{\s*\[native code]\s*}\s*$/i.test(String(f))));
}
exports.isNativeFunction = isNativeFunction;


/***/ }),

/***/ 61817:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNumber = void 0;
function isNumber(value) {
    return typeof value === 'number' && !isNaN(value) && isFinite(value);
}
exports.isNumber = isNumber;


/***/ }),

/***/ 57649:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNumeric = void 0;
var is_string_1 = __webpack_require__(24421);
function isNumeric(value) {
    if ((0, is_string_1.isString)(value)) {
        if (!value.match(/^([+-])?[0-9]+(\.?)([0-9]+)?(e[0-9]+)?$/)) {
            return false;
        }
        value = parseFloat(value);
    }
    return typeof value === 'number' && !isNaN(value) && isFinite(value);
}
exports.isNumeric = isNumeric;


/***/ }),

/***/ 79736:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isPlainObject = void 0;
var is_window_1 = __webpack_require__(85994);
function isPlainObject(obj) {
    if (!obj || typeof obj !== 'object' || obj.nodeType || (0, is_window_1.isWindow)(obj)) {
        return false;
    }
    return !(obj.constructor &&
        !{}.hasOwnProperty.call(obj.constructor.prototype, 'isPrototypeOf'));
}
exports.isPlainObject = isPlainObject;


/***/ }),

/***/ 26335:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isPromise = void 0;
function isPromise(val) {
    return val && typeof val.then === 'function';
}
exports.isPromise = isPromise;


/***/ }),

/***/ 24421:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isStringArray = exports.isString = void 0;
var is_array_1 = __webpack_require__(49781);
function isString(value) {
    return typeof value === 'string';
}
exports.isString = isString;
function isStringArray(value) {
    return (0, is_array_1.isArray)(value) && isString(value[0]);
}
exports.isStringArray = isStringArray;


/***/ }),

/***/ 64350:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isURL = void 0;
function isURL(str) {
    if (str.includes(' ')) {
        return false;
    }
    if (typeof URL !== 'undefined') {
        try {
            var url = new URL(str);
            return ['https:', 'http:', 'ftp:', 'file:', 'rtmp:'].includes(url.protocol);
        }
        catch (e) {
            return false;
        }
    }
    var a = document.createElement('a');
    a.href = str;
    return Boolean(a.hostname);
}
exports.isURL = isURL;


/***/ }),

/***/ 19179:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isValidName = void 0;
function isValidName(name) {
    if (!name.length) {
        return false;
    }
    return !/[^0-9A-Za-zа-яА-ЯЁё\w\-_.]/.test(name);
}
exports.isValidName = isValidName;


/***/ }),

/***/ 96574:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isViewObject = void 0;
var is_function_1 = __webpack_require__(42096);
function isViewObject(jodit) {
    return Boolean(jodit &&
        jodit instanceof Object &&
        (0, is_function_1.isFunction)(jodit.constructor) &&
        jodit.isView);
}
exports.isViewObject = isViewObject;


/***/ }),

/***/ 24021:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isVoid = void 0;
function isVoid(value) {
    return value === undefined || value === null;
}
exports.isVoid = isVoid;


/***/ }),

/***/ 85994:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isWindow = void 0;
function isWindow(obj) {
    return obj != null && obj === obj.window;
}
exports.isWindow = isWindow;


/***/ }),

/***/ 13203:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.colorToHex = void 0;
var colorToHex = function (color) {
    if (color === 'rgba(0, 0, 0, 0)' || color === '') {
        return false;
    }
    if (!color) {
        return '#000000';
    }
    if (color.substr(0, 1) === '#') {
        return color;
    }
    var digits = /([\s\n\t\r]*?)rgb\((\d+), (\d+), (\d+)\)/.exec(color) ||
        /([\s\n\t\r]*?)rgba\((\d+), (\d+), (\d+), ([\d.]+)\)/.exec(color);
    if (!digits) {
        return '#000000';
    }
    var red = parseInt(digits[2], 10), green = parseInt(digits[3], 10), blue = parseInt(digits[4], 10), rgb = blue | (green << 8) | (red << 16);
    var hex = rgb.toString(16).toUpperCase();
    while (hex.length < 6) {
        hex = '0' + hex;
    }
    return digits[1] + '#' + hex;
};
exports.colorToHex = colorToHex;


/***/ }),

/***/ 61354:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(13203), exports);


/***/ }),

/***/ 66546:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.applyStyles = void 0;
var dom_1 = __webpack_require__(24263);
var utils_1 = __webpack_require__(76502);
var trim_1 = __webpack_require__(33941);
function normalizeCSS(s) {
    return s
        .replace(/mso-[a-z-]+:[\s]*[^;]+;/gi, '')
        .replace(/mso-[a-z-]+:[\s]*[^";']+$/gi, '')
        .replace(/border[a-z-]*:[\s]*[^;]+;/gi, '')
        .replace(/([0-9.]+)(pt|cm)/gi, function (match, units, metrics) {
        switch (metrics.toLowerCase()) {
            case 'pt':
                return (parseFloat(units) * 1.328).toFixed(0) + 'px';
            case 'cm':
                return (parseFloat(units) * 0.02645833).toFixed(0) + 'px';
        }
        return match;
    });
}
function applyStyles(html) {
    if (html.indexOf('<html ') === -1) {
        return html;
    }
    html = html.substring(html.indexOf('<html '), html.length);
    html = html.substring(0, html.lastIndexOf('</html>') + '</html>'.length);
    var iframe = document.createElement('iframe');
    iframe.style.display = 'none';
    document.body.appendChild(iframe);
    var convertedString = '', collection = [];
    try {
        var iframeDoc = iframe.contentDocument ||
            (iframe.contentWindow ? iframe.contentWindow.document : null);
        if (iframeDoc) {
            iframeDoc.open();
            iframeDoc.write(html);
            iframeDoc.close();
            try {
                var _loop_1 = function (i) {
                    var rules = iframeDoc.styleSheets[i].cssRules;
                    var _loop_2 = function (idx) {
                        if (rules[idx].selectorText === '') {
                            return "continue";
                        }
                        collection = (0, utils_1.$$)(rules[idx].selectorText, iframeDoc.body);
                        collection.forEach(function (elm) {
                            elm.style.cssText = normalizeCSS(rules[idx].style.cssText +
                                ';' +
                                elm.style.cssText);
                        });
                    };
                    for (var idx = 0; idx < rules.length; idx += 1) {
                        _loop_2(idx);
                    }
                };
                for (var i = 0; i < iframeDoc.styleSheets.length; i += 1) {
                    _loop_1(i);
                }
            }
            catch (e) {
                if (false) {}
            }
            dom_1.Dom.each(iframeDoc.body, function (node) {
                if (dom_1.Dom.isElement(node)) {
                    var elm = node;
                    var css = elm.getAttribute('style');
                    if (css) {
                        elm.style.cssText = normalizeCSS(css);
                    }
                    if (elm.hasAttribute('style') &&
                        !elm.getAttribute('style')) {
                        elm.removeAttribute('style');
                    }
                }
            });
            convertedString = iframeDoc.firstChild
                ? (0, trim_1.trim)(iframeDoc.body.innerHTML)
                : '';
        }
    }
    catch (_a) {
    }
    finally {
        dom_1.Dom.safeRemove(iframe);
    }
    if (convertedString) {
        html = convertedString;
    }
    return (0, trim_1.trim)(html
        .replace(/<(\/)?(html|colgroup|col|o:p)[^>]*>/g, '')
        .replace(/<!--[^>]*>/g, ''));
}
exports.applyStyles = applyStyles;


/***/ }),

/***/ 33316:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cleanFromWord = void 0;
var dom_1 = __webpack_require__(24263);
var trim_1 = __webpack_require__(33941);
var to_array_1 = __webpack_require__(1853);
function cleanFromWord(html) {
    if (html.indexOf('<html ') !== -1) {
        html = html.substring(html.indexOf('<html '), html.length);
        html = html.substring(0, html.lastIndexOf('</html>') + '</html>'.length);
    }
    var convertedString = '';
    try {
        var div = document.createElement('div');
        div.innerHTML = html;
        var marks_1 = [];
        if (div.firstChild) {
            dom_1.Dom.each(div, function (node) {
                if (!node) {
                    return;
                }
                switch (node.nodeType) {
                    case Node.ELEMENT_NODE:
                        switch (node.nodeName) {
                            case 'STYLE':
                            case 'LINK':
                            case 'META':
                                marks_1.push(node);
                                break;
                            case 'W:SDT':
                            case 'W:SDTPR':
                            case 'FONT':
                                dom_1.Dom.unwrap(node);
                                break;
                            default:
                                (0, to_array_1.toArray)(node.attributes).forEach(function (attr) {
                                    if ([
                                        'src',
                                        'href',
                                        'rel',
                                        'content'
                                    ].indexOf(attr.name.toLowerCase()) === -1) {
                                        node.removeAttribute(attr.name);
                                    }
                                });
                        }
                        break;
                    case Node.TEXT_NODE:
                        break;
                    default:
                        marks_1.push(node);
                }
            });
        }
        dom_1.Dom.safeRemove.apply(null, marks_1);
        convertedString = div.innerHTML;
    }
    catch (e) { }
    if (convertedString) {
        html = convertedString;
    }
    html = html.split(/(\n)/).filter(trim_1.trim).join('\n');
    return html
        .replace(/<(\/)?(html|colgroup|col|o:p)[^>]*>/g, '')
        .replace(/<!--[^>]*>/g, '');
}
exports.cleanFromWord = cleanFromWord;


/***/ }),

/***/ 46639:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.htmlspecialchars = void 0;
function htmlspecialchars(html) {
    var tmp = document.createElement('div');
    tmp.textContent = html;
    return tmp.innerHTML;
}
exports.htmlspecialchars = htmlspecialchars;


/***/ }),

/***/ 13098:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(66546), exports);
tslib_1.__exportStar(__webpack_require__(33316), exports);
tslib_1.__exportStar(__webpack_require__(46639), exports);
tslib_1.__exportStar(__webpack_require__(11336), exports);
tslib_1.__exportStar(__webpack_require__(67128), exports);
tslib_1.__exportStar(__webpack_require__(86645), exports);


/***/ }),

/***/ 86645:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nl2br = void 0;
function nl2br(html) {
    return html.replace(/\r\n|\r|\n/g, '<br/>');
}
exports.nl2br = nl2br;


/***/ }),

/***/ 67128:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sanitizeHTMLElement = exports.safeHTML = void 0;
var utils_1 = __webpack_require__(76502);
var dom_1 = __webpack_require__(24263);
function safeHTML(box, options) {
    if (!dom_1.Dom.isElement(box) && !dom_1.Dom.isFragment(box)) {
        return;
    }
    if (options.removeOnError) {
        sanitizeHTMLElement(box);
        (0, utils_1.$$)('[onerror]', box).forEach(function (elm) { return sanitizeHTMLElement(elm, options); });
    }
    if (options.safeJavaScriptLink) {
        sanitizeHTMLElement(box);
        (0, utils_1.$$)('a[href^="javascript"]', box).forEach(function (elm) {
            return sanitizeHTMLElement(elm, options);
        });
    }
}
exports.safeHTML = safeHTML;
function sanitizeHTMLElement(elm, _a) {
    var _b = _a === void 0 ? {
        safeJavaScriptLink: true,
        removeOnError: true
    } : _a, safeJavaScriptLink = _b.safeJavaScriptLink, removeOnError = _b.removeOnError;
    if (!dom_1.Dom.isElement(elm)) {
        return false;
    }
    var effected = false;
    if (removeOnError && elm.hasAttribute('onerror')) {
        (0, utils_1.attr)(elm, 'onerror', null);
        effected = true;
    }
    var href = elm.getAttribute('href');
    if (safeJavaScriptLink && href && href.trim().indexOf('javascript') === 0) {
        (0, utils_1.attr)(elm, 'href', location.protocol + '//' + href);
        effected = true;
    }
    return effected;
}
exports.sanitizeHTMLElement = sanitizeHTMLElement;


/***/ }),

/***/ 11336:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stripTags = void 0;
var is_string_1 = __webpack_require__(24421);
var utils_1 = __webpack_require__(76502);
var trim_1 = __webpack_require__(33941);
var dom_1 = __webpack_require__(24263);
var NEW_LINE_TAGS = new Set([
    'div',
    'p',
    'br',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'hr'
]);
var INVISIBLE_TAGS = new Set(['script', 'style']);
function stripTags(html, doc, exclude) {
    if (doc === void 0) { doc = document; }
    if (exclude === void 0) { exclude = null; }
    var tmp = doc.createElement('div');
    if ((0, is_string_1.isString)(html)) {
        tmp.innerHTML = html;
    }
    else {
        tmp.appendChild(html);
    }
    (0, utils_1.$$)('*', tmp).forEach(function (p) {
        var pr = p.parentNode;
        if (!pr) {
            return;
        }
        if (exclude && dom_1.Dom.isTag(p, exclude)) {
            var tag = p.nodeName.toLowerCase();
            var text = !dom_1.Dom.isTag(p, ['br', 'hr', 'input'])
                ? "%%%jodit-".concat(tag, "%%%").concat(stripTags(p.innerHTML, doc, exclude), "%%%/jodit-").concat(tag, "%%%")
                : "%%%jodit-single-".concat(tag, "%%%");
            dom_1.Dom.before(p, doc.createTextNode(text));
            dom_1.Dom.safeRemove(p);
            return;
        }
        if (dom_1.Dom.isTag(p, INVISIBLE_TAGS)) {
            dom_1.Dom.safeRemove(p);
            return;
        }
        if (!dom_1.Dom.isTag(p, NEW_LINE_TAGS)) {
            return;
        }
        var nx = p.nextSibling;
        if (dom_1.Dom.isText(nx) && /^\s/.test(nx.nodeValue || '')) {
            return;
        }
        if (nx) {
            pr.insertBefore(doc.createTextNode(' '), nx);
        }
    });
    return restoreTags((0, trim_1.trim)(tmp.innerText));
}
exports.stripTags = stripTags;
function restoreTags(content) {
    return content.replace(/%%%(\/)?jodit(-single)?-([\w\n]+)%%%/g, function (_, isClosed, isSingle, tag) { return "<".concat(isClosed ? '/' : '').concat(tag, ">"); });
}


/***/ }),

/***/ 40332:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(76502), exports);
tslib_1.__exportStar(__webpack_require__(12557), exports);
tslib_1.__exportStar(__webpack_require__(4696), exports);
tslib_1.__exportStar(__webpack_require__(10172), exports);
tslib_1.__exportStar(__webpack_require__(61354), exports);
tslib_1.__exportStar(__webpack_require__(13098), exports);
tslib_1.__exportStar(__webpack_require__(89693), exports);
tslib_1.__exportStar(__webpack_require__(90954), exports);
tslib_1.__exportStar(__webpack_require__(19035), exports);


/***/ }),

/***/ 89693:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(48926), exports);
tslib_1.__exportStar(__webpack_require__(78648), exports);
tslib_1.__exportStar(__webpack_require__(74504), exports);
tslib_1.__exportStar(__webpack_require__(50870), exports);
tslib_1.__exportStar(__webpack_require__(76787), exports);
tslib_1.__exportStar(__webpack_require__(93251), exports);
tslib_1.__exportStar(__webpack_require__(91518), exports);
tslib_1.__exportStar(__webpack_require__(49353), exports);
tslib_1.__exportStar(__webpack_require__(64274), exports);


/***/ }),

/***/ 64274:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizeColor = void 0;
var color_1 = __webpack_require__(61354);
var string_1 = __webpack_require__(19035);
var normalizeColor = function (colorInput) {
    var newcolor = ['#'];
    var color = (0, color_1.colorToHex)(colorInput);
    if (!color) {
        return false;
    }
    color = (0, string_1.trim)(color.toUpperCase());
    color = color.substr(1);
    if (color.length === 3) {
        for (var i = 0; i < 3; i += 1) {
            newcolor.push(color[i]);
            newcolor.push(color[i]);
        }
        return newcolor.join('');
    }
    if (color.length > 6) {
        color = color.substr(0, 6);
    }
    return '#' + color;
};
exports.normalizeColor = normalizeColor;


/***/ }),

/***/ 49353:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizeCssValue = exports.normalizeCssNumericValue = exports.NUMBER_FIELDS_REG = void 0;
var is_numeric_1 = __webpack_require__(57649);
var kebab_case_1 = __webpack_require__(11278);
var color_to_hex_1 = __webpack_require__(13203);
var is_void_1 = __webpack_require__(24021);
exports.NUMBER_FIELDS_REG = /^(left|top|bottom|right|width|min|max|height|margin|padding|fontsize|font-size)/i;
function normalizeCssNumericValue(key, value) {
    if (!(0, is_void_1.isVoid)(value) &&
        exports.NUMBER_FIELDS_REG.test(key) &&
        (0, is_numeric_1.isNumeric)(value.toString())) {
        return parseInt(value.toString(), 10) + 'px';
    }
    return value;
}
exports.normalizeCssNumericValue = normalizeCssNumericValue;
function normalizeCssValue(key, value) {
    switch ((0, kebab_case_1.kebabCase)(key)) {
        case 'font-weight':
            switch (value.toString().toLowerCase()) {
                case '700':
                case 'bold':
                    return 700;
                case '400':
                case 'normal':
                    return 400;
                case '900':
                case 'heavy':
                    return 900;
            }
            return (0, is_numeric_1.isNumeric)(value) ? Number(value) : value;
    }
    if (/color/i.test(key) && /^rgb/i.test(value.toString())) {
        return (0, color_to_hex_1.colorToHex)(value.toString()) || value;
    }
    return value;
}
exports.normalizeCssValue = normalizeCssValue;


/***/ }),

/***/ 48926:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizeKeyAliases = void 0;
var trim_1 = __webpack_require__(33941);
var constants_1 = __webpack_require__(86893);
function normalizeKeyAliases(keys) {
    var memory = {};
    var order = {
        meta: 1,
        ctrl: 2,
        control: 2,
        alt: 3,
        shift: 4
    };
    return keys
        .replace(/\+\+/g, '+add')
        .split(/[\s]*\+[\s]*/)
        .map(function (key) { return (0, trim_1.trim)(key.toLowerCase()); })
        .map(function (key) { return constants_1.KEY_ALIASES[key] || key; })
        .sort(function (a, b) {
        if (order[a] && !order[b]) {
            return -1;
        }
        if (!order[a] && order[b]) {
            return 1;
        }
        if (order[a] && order[b]) {
            return order[a] - order[b];
        }
        return a > b ? 1 : -1;
    })
        .filter(function (key) { return !memory[key] && key !== '' && (memory[key] = true); })
        .join('+');
}
exports.normalizeKeyAliases = normalizeKeyAliases;


/***/ }),

/***/ 78648:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizeLicense = void 0;
var normalizeLicense = function (license, count) {
    if (count === void 0) { count = 8; }
    var parts = [];
    while (license.length) {
        parts.push(license.substr(0, count));
        license = license.substr(count);
    }
    parts[1] = parts[1].replace(/./g, '*');
    parts[2] = parts[2].replace(/./g, '*');
    return parts.join('-');
};
exports.normalizeLicense = normalizeLicense;


/***/ }),

/***/ 74504:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizeNode = void 0;
var constants_1 = __webpack_require__(86893);
var dom_1 = __webpack_require__(24263);
function normalizeNode(node) {
    if (!node) {
        return;
    }
    if (dom_1.Dom.isText(node) && node.nodeValue != null && node.parentNode) {
        while (dom_1.Dom.isText(node.nextSibling)) {
            if (node.nextSibling.nodeValue != null) {
                node.nodeValue += node.nextSibling.nodeValue;
            }
            node.nodeValue = node.nodeValue.replace((0, constants_1.INVISIBLE_SPACE_REG_EXP)(), '');
            dom_1.Dom.safeRemove(node.nextSibling);
        }
    }
    else {
        normalizeNode(node.firstChild);
    }
    normalizeNode(node.nextSibling);
}
exports.normalizeNode = normalizeNode;


/***/ }),

/***/ 50870:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizePath = void 0;
var string_1 = __webpack_require__(19035);
var normalizePath = function () {
    var path = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        path[_i] = arguments[_i];
    }
    return path
        .filter(function (part) { return (0, string_1.trim)(part).length; })
        .map(function (part, index) {
        part = part.replace(/([^:])[\\/]+/g, '$1/');
        if (index) {
            part = part.replace(/^\//, '');
        }
        if (index !== path.length - 1) {
            part = part.replace(/\/$/, '');
        }
        return part;
    })
        .join('/');
};
exports.normalizePath = normalizePath;


/***/ }),

/***/ 76787:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizeRelativePath = void 0;
var normalizeRelativePath = function (path) {
    var sections = path.split('/'), builder = sections.reduce(function (builder, section) {
        switch (section) {
            case '': {
                break;
            }
            case '.': {
                break;
            }
            case '..': {
                builder.pop();
                break;
            }
            default: {
                builder.push(section);
                break;
            }
        }
        return builder;
    }, []);
    return builder.join('/') + (path.endsWith('/') ? '/' : '');
};
exports.normalizeRelativePath = normalizeRelativePath;


/***/ }),

/***/ 93251:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizeSize = void 0;
var normalizeSize = function (value) {
    if (/^[0-9]+$/.test(value.toString())) {
        return value + 'px';
    }
    return value.toString();
};
exports.normalizeSize = normalizeSize;


/***/ }),

/***/ 91518:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizeUrl = void 0;
var normalizeUrl = function () {
    var urls = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        urls[_i] = arguments[_i];
    }
    return urls
        .filter(function (url) { return url.length; })
        .map(function (url) { return url.replace(/\/$/, ''); })
        .join('/')
        .replace(/([^:])[\\/]+/g, '$1/');
};
exports.normalizeUrl = normalizeUrl;


/***/ }),

/***/ 1684:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getContentWidth = void 0;
var getContentWidth = function (element, win) {
    var pi = function (value) { return parseInt(value, 10); }, style = win.getComputedStyle(element), width = element.offsetWidth, paddingLeft = pi(style.getPropertyValue('padding-left') || '0'), paddingRight = pi(style.getPropertyValue('padding-right') || '0');
    return width - paddingLeft - paddingRight;
};
exports.getContentWidth = getContentWidth;


/***/ }),

/***/ 73874:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getScrollParent = void 0;
var utils_1 = __webpack_require__(76502);
var dom_1 = __webpack_require__(24263);
function getScrollParent(node) {
    if (!node) {
        return null;
    }
    var isElement = dom_1.Dom.isHTMLElement(node);
    var overflowY = isElement && (0, utils_1.css)(node, 'overflowY');
    var isScrollable = isElement && overflowY !== 'visible' && overflowY !== 'hidden';
    if (isScrollable && node.scrollHeight >= node.clientHeight) {
        return node;
    }
    return (getScrollParent(node.parentNode) ||
        document.scrollingElement ||
        document.body);
}
exports.getScrollParent = getScrollParent;


/***/ }),

/***/ 90954:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(1684), exports);
tslib_1.__exportStar(__webpack_require__(73874), exports);
tslib_1.__exportStar(__webpack_require__(83810), exports);
tslib_1.__exportStar(__webpack_require__(98701), exports);
tslib_1.__exportStar(__webpack_require__(81710), exports);
tslib_1.__exportStar(__webpack_require__(16492), exports);


/***/ }),

/***/ 83810:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.innerWidth = void 0;
var innerWidth = function (element, win) {
    var computedStyle = win.getComputedStyle(element);
    var elementWidth = element.clientWidth;
    elementWidth -=
        parseFloat(computedStyle.paddingLeft || '0') +
            parseFloat(computedStyle.paddingRight || '0');
    return elementWidth;
};
exports.innerWidth = innerWidth;


/***/ }),

/***/ 16492:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.size = void 0;
var checker_1 = __webpack_require__(10172);
function size(subject) {
    if ((0, checker_1.isString)(subject) || (0, checker_1.isArray)(subject)) {
        return subject.length;
    }
    if ((0, checker_1.isPlainObject)(subject)) {
        return Object.keys(subject).length;
    }
    return 0;
}
exports.size = size;


/***/ }),

/***/ 98701:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.offset = void 0;
var offset = function (elm, jodit, doc, recurse) {
    if (recurse === void 0) { recurse = false; }
    var rect;
    try {
        rect = elm.getBoundingClientRect();
    }
    catch (e) {
        rect = {
            top: 0,
            bottom: 0,
            left: 0,
            right: 0,
            width: 0,
            height: 0
        };
    }
    var body = doc.body, docElem = doc.documentElement || {
        clientTop: 0,
        clientLeft: 0,
        scrollTop: 0,
        scrollLeft: 0
    }, win = doc.defaultView || doc.parentWindow, scrollTop = win.pageYOffset || docElem.scrollTop || body.scrollTop, scrollLeft = win.pageXOffset || docElem.scrollLeft || body.scrollLeft, clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0;
    var topValue, leftValue;
    var iframe = jodit.iframe;
    if (!recurse && jodit && jodit.options && jodit.o.iframe && iframe) {
        var _a = (0, exports.offset)(iframe, jodit, jodit.od, true), top = _a.top, left = _a.left;
        topValue = rect.top + top;
        leftValue = rect.left + left;
    }
    else {
        topValue = rect.top + scrollTop - clientTop;
        leftValue = rect.left + scrollLeft - clientLeft;
    }
    return {
        top: Math.round(topValue),
        left: Math.round(leftValue),
        width: rect.width,
        height: rect.height
    };
};
exports.offset = offset;


/***/ }),

/***/ 81710:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.position = void 0;
var is_jodit_object_1 = __webpack_require__(77892);
function position(elm, jodit, recurse) {
    if (recurse === void 0) { recurse = false; }
    var rect = elm.getBoundingClientRect();
    var xPos = rect.left, yPos = rect.top;
    if ((0, is_jodit_object_1.isJoditObject)(jodit) &&
        jodit.iframe &&
        jodit.ed.body.contains(elm) &&
        !recurse) {
        var _a = position(jodit.iframe, jodit, true), left = _a.left, top = _a.top;
        xPos += left;
        yPos += top;
    }
    return {
        left: Math.round(xPos),
        top: Math.round(yPos),
        width: Math.round(elm.offsetWidth),
        height: Math.round(elm.offsetHeight)
    };
}
exports.position = position;


/***/ }),

/***/ 26596:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.camelCase = void 0;
var camelCase = function (key) {
    return key.replace(/([-_])(.)/g, function (m, code, letter) {
        return letter.toUpperCase();
    });
};
exports.camelCase = camelCase;


/***/ }),

/***/ 93163:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fuzzySearchIndex = void 0;
var constants_1 = __webpack_require__(86893);
function fuzzySearchIndex(needle, haystack, offset, maxDistance) {
    if (offset === void 0) { offset = 0; }
    if (maxDistance === void 0) { maxDistance = 1; }
    var i = 0, j = 0, startIndex = -1, len = 0, errorDistance = 0;
    for (j = offset; i < needle.length && j < haystack.length;) {
        if (needle[i].toLowerCase() === haystack[j].toLowerCase()) {
            i++;
            len++;
            errorDistance = 0;
            if (startIndex === -1) {
                startIndex = j;
            }
        }
        else if (i > 0) {
            if (errorDistance >= maxDistance &&
                haystack[j] !== constants_1.INVISIBLE_SPACE) {
                i = 0;
                startIndex = -1;
                len = 0;
                errorDistance = 0;
                j--;
            }
            else {
                errorDistance++;
                len++;
            }
        }
        j++;
    }
    return i === needle.length ? [startIndex, len] : [-1, 0];
}
exports.fuzzySearchIndex = fuzzySearchIndex;


/***/ }),

/***/ 11625:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.i18n = exports.sprintf = void 0;
var config_1 = __webpack_require__(93166);
var utils_1 = __webpack_require__(76502);
var is_string_1 = __webpack_require__(24421);
var ucfirst_1 = __webpack_require__(13449);
var constants_1 = __webpack_require__(86893);
var sprintf = function (str, args) {
    if (!args || !args.length) {
        return str;
    }
    var reg = /%([sd])/g;
    var fnd = reg.exec(str);
    var res = str, i = 0;
    while (fnd && args[i] !== undefined) {
        res = res.replace(fnd[0], args[i].toString());
        i += 1;
        fnd = reg.exec(str);
    }
    return res;
};
exports.sprintf = sprintf;
function i18n(key, params, options) {
    if (!(0, is_string_1.isString)(key)) {
        throw (0, utils_1.error)('i18n: Need string in first argument');
    }
    if (!key.length) {
        return key;
    }
    var debug = Boolean(options === null || options === void 0 ? void 0 : options.debugLanguage);
    var store = {};
    var parse = function (value) {
        return params && params.length ? (0, exports.sprintf)(value, params) : value;
    }, defaultLanguage = (0, utils_1.defaultLanguage)(config_1.Config.defaultOptions.language, config_1.Config.defaultOptions.language), language = (0, utils_1.defaultLanguage)(options === null || options === void 0 ? void 0 : options.language, defaultLanguage), tryGet = function (store) {
        if (!store) {
            return;
        }
        if ((0, is_string_1.isString)(store[key])) {
            return parse(store[key]);
        }
        var lcKey = key.toLowerCase();
        if ((0, is_string_1.isString)(store[lcKey])) {
            return parse(store[lcKey]);
        }
        var ucfKey = (0, ucfirst_1.ucfirst)(key);
        if ((0, is_string_1.isString)(store[ucfKey])) {
            return parse(store[ucfKey]);
        }
        return;
    };
    if (constants_1.lang[language] !== undefined) {
        store = constants_1.lang[language];
    }
    else if (!debug) {
        if (constants_1.lang[defaultLanguage] !== undefined) {
            store = constants_1.lang[defaultLanguage];
        }
        else {
            store = constants_1.lang.en;
        }
    }
    var i18nOvr = options === null || options === void 0 ? void 0 : options.i18n;
    if (i18nOvr && i18nOvr[language]) {
        var result_1 = tryGet(i18nOvr[language]);
        if (result_1) {
            return result_1;
        }
    }
    var result = tryGet(store);
    if (result) {
        return result;
    }
    if (!debug && constants_1.lang.en && (0, is_string_1.isString)(constants_1.lang.en[key]) && constants_1.lang.en[key]) {
        return parse(constants_1.lang.en[key]);
    }
    if (debug) {
        return '{' + key + '}';
    }
    if (false) {}
    return parse(key);
}
exports.i18n = i18n;


/***/ }),

/***/ 19035:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(26596), exports);
tslib_1.__exportStar(__webpack_require__(93163), exports);
tslib_1.__exportStar(__webpack_require__(11625), exports);
tslib_1.__exportStar(__webpack_require__(11278), exports);
tslib_1.__exportStar(__webpack_require__(42554), exports);
tslib_1.__exportStar(__webpack_require__(33941), exports);
tslib_1.__exportStar(__webpack_require__(13449), exports);


/***/ }),

/***/ 11278:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CamelCaseToKebabCase = exports.kebabCase = void 0;
var kebabCase = function (key) {
    return key
        .replace(/([A-Z])([A-Z])([a-z])/g, '$1-$2$3')
        .replace(/([a-z])([A-Z])/g, '$1-$2')
        .replace(/[\s_]+/g, '-')
        .toLowerCase();
};
exports.kebabCase = kebabCase;
var CamelCaseToKebabCase = function (key) {
    return key
        .replace(/([A-Z])([A-Z])([a-z])/g, '$1-$2$3')
        .replace(/([a-z])([A-Z])/g, '$1-$2')
        .toLowerCase();
};
exports.CamelCaseToKebabCase = CamelCaseToKebabCase;


/***/ }),

/***/ 42554:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringify = void 0;
function stringify(value, options) {
    if (options === void 0) { options = {}; }
    if (typeof value !== 'object') {
        return String(value);
    }
    var excludeKeys = new Set(options.excludeKeys);
    var map = new WeakMap();
    var r = function (k, v) {
        if (excludeKeys.has(k)) {
            return;
        }
        if (typeof v === 'object' && v != null) {
            if (map.get(v)) {
                return '[refObject]';
            }
            map.set(v, true);
        }
        return v;
    };
    return JSON.stringify(value, r, options.prettify);
}
exports.stringify = stringify;


/***/ }),

/***/ 33941:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.trimInv = exports.trim = void 0;
var constants_1 = __webpack_require__(86893);
function trim(value) {
    return value
        .replace((0, constants_1.SPACE_REG_EXP_END)(), '')
        .replace((0, constants_1.SPACE_REG_EXP_START)(), '');
}
exports.trim = trim;
function trimInv(value) {
    return value
        .replace((0, constants_1.INVISIBLE_SPACE_REG_EXP_END)(), '')
        .replace((0, constants_1.INVISIBLE_SPACE_REG_EXP_START)(), '');
}
exports.trimInv = trimInv;


/***/ }),

/***/ 13449:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ucfirst = void 0;
function ucfirst(value) {
    if (!value.length) {
        return '';
    }
    return value[0].toUpperCase() + value.substr(1);
}
exports.ucfirst = ucfirst;


/***/ }),

/***/ 60303:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.alignElement = exports.clearAlign = exports.hAlignElement = void 0;
var dom_1 = __webpack_require__(64968);
var css_1 = __webpack_require__(26911);
function hAlignElement(image, align) {
    if (align && align !== 'normal') {
        if (align !== 'center') {
            (0, css_1.css)(image, 'float', align);
            (0, css_1.clearCenterAlign)(image);
        }
        else {
            (0, css_1.css)(image, {
                float: '',
                display: 'block',
                marginLeft: 'auto',
                marginRight: 'auto'
            });
        }
    }
    else {
        if ((0, css_1.css)(image, 'float') &&
            ['right', 'left'].indexOf((0, css_1.css)(image, 'float').toString().toLowerCase()) !== -1) {
            (0, css_1.css)(image, 'float', '');
        }
        (0, css_1.clearCenterAlign)(image);
    }
}
exports.hAlignElement = hAlignElement;
function clearAlign(node) {
    dom_1.Dom.each(node, function (elm) {
        if (dom_1.Dom.isHTMLElement(elm)) {
            if (elm.style.textAlign) {
                elm.style.textAlign = '';
                if (!elm.style.cssText.trim().length) {
                    elm.removeAttribute('style');
                }
            }
        }
    });
}
exports.clearAlign = clearAlign;
function alignElement(command, box) {
    if (dom_1.Dom.isNode(box) && dom_1.Dom.isElement(box)) {
        clearAlign(box);
        switch (command.toLowerCase()) {
            case 'justifyfull':
                box.style.textAlign = 'justify';
                break;
            case 'justifyright':
                box.style.textAlign = 'right';
                break;
            case 'justifyleft':
                box.style.textAlign = 'left';
                break;
            case 'justifycenter':
                box.style.textAlign = 'center';
                break;
        }
    }
}
exports.alignElement = alignElement;


/***/ }),

/***/ 62462:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.loadNextStyle = exports.loadNext = exports.appendStyleAsync = exports.appendScriptAsync = exports.appendScript = void 0;
var tslib_1 = __webpack_require__(20255);
var complete_url_1 = __webpack_require__(48240);
var is_function_1 = __webpack_require__(42096);
var is_string_1 = __webpack_require__(24421);
var alreadyLoadedList = new Map();
var cacheLoaders = function (loader) {
    return function (jodit, url) { return tslib_1.__awaiter(void 0, void 0, Promise, function () {
        var promise;
        return tslib_1.__generator(this, function (_a) {
            if (alreadyLoadedList.has(url)) {
                return [2, alreadyLoadedList.get(url)];
            }
            promise = loader(jodit, url);
            alreadyLoadedList.set(url, promise);
            return [2, promise];
        });
    }); };
};
var appendScript = function (jodit, url, callback) {
    var script = jodit.c.element('script');
    script.type = 'text/javascript';
    script.async = true;
    if ((0, is_function_1.isFunction)(callback) && !jodit.isInDestruct) {
        jodit.e.on(script, 'load', callback);
    }
    if (!script.src) {
        script.src = (0, complete_url_1.completeUrl)(url);
    }
    jodit.od.body.appendChild(script);
    return {
        callback: callback,
        element: script
    };
};
exports.appendScript = appendScript;
exports.appendScriptAsync = cacheLoaders(function (jodit, url) {
    return new Promise(function (resolve, reject) {
        var element = (0, exports.appendScript)(jodit, url, resolve).element;
        !jodit.isInDestruct && jodit.e.on(element, 'error', reject);
    });
});
exports.appendStyleAsync = cacheLoaders(function (jodit, url) {
    return new Promise(function (resolve, reject) {
        var link = jodit.c.element('link');
        link.rel = 'stylesheet';
        link.media = 'all';
        link.crossOrigin = 'anonymous';
        var callback = function () { return resolve(link); };
        !jodit.isInDestruct &&
            jodit.e.on(link, 'load', callback).on(link, 'error', reject);
        link.href = (0, complete_url_1.completeUrl)(url);
        if (jodit.o.shadowRoot) {
            jodit.o.shadowRoot.appendChild(link);
        }
        else {
            jodit.od.body.appendChild(link);
        }
    });
});
var loadNext = function (jodit, urls, i) {
    if (i === void 0) { i = 0; }
    if (!(0, is_string_1.isString)(urls[i])) {
        return Promise.resolve();
    }
    return (0, exports.appendScriptAsync)(jodit, urls[i]).then(function () {
        return (0, exports.loadNext)(jodit, urls, i + 1);
    });
};
exports.loadNext = loadNext;
var loadNextStyle = function (jodit, urls, i) {
    if (i === void 0) { i = 0; }
    if (!(0, is_string_1.isString)(urls[i])) {
        return Promise.resolve();
    }
    return (0, exports.appendStyleAsync)(jodit, urls[i]).then(function () {
        return (0, exports.loadNextStyle)(jodit, urls, i + 1);
    });
};
exports.loadNextStyle = loadNextStyle;


/***/ }),

/***/ 603:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.assert = void 0;
var tslib_1 = __webpack_require__(20255);
var AssertionError = (function (_super) {
    tslib_1.__extends(AssertionError, _super);
    function AssertionError(message) {
        var _this = _super.call(this, message) || this;
        _this.name = 'AssertionError';
        return _this;
    }
    return AssertionError;
}(Error));
function assert(condition, message) {
    if (!condition) {
        throw new AssertionError("Assertion failed: ".concat(message));
    }
}
exports.assert = assert;


/***/ }),

/***/ 37682:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.browser = void 0;
var browser = function (browser) {
    var ua = navigator.userAgent.toLowerCase(), match = /(firefox)[\s/]([\w.]+)/.exec(ua) ||
        /(chrome)[\s/]([\w.]+)/.exec(ua) ||
        /(webkit)[\s/]([\w.]+)/.exec(ua) ||
        /(opera)(?:.*version)[\s/]([\w.]+)/.exec(ua) ||
        /(msie)[\s]([\w.]+)/.exec(ua) ||
        /(trident)\/([\w.]+)/.exec(ua) ||
        ua.indexOf('compatible') < 0 ||
        [];
    if (browser === 'version') {
        return match[2];
    }
    if (browser === 'webkit') {
        return match[1] === 'chrome' || match[1] === 'webkit';
    }
    if (browser === 'ff') {
        return match[1] === 'firefox';
    }
    if (browser === 'msie') {
        return match[1] === 'trident' || match[1] === 'msie';
    }
    return match[1] === browser;
};
exports.browser = browser;


/***/ }),

/***/ 71567:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.buildQuery = void 0;
var is_plain_object_1 = __webpack_require__(79736);
var buildQuery = function (data, prefix) {
    var str = [];
    var enc = encodeURIComponent;
    for (var dataKey in data) {
        if (Object.prototype.hasOwnProperty.call(data, dataKey)) {
            var k = prefix ? prefix + '[' + dataKey + ']' : dataKey;
            var v = data[dataKey];
            str.push((0, is_plain_object_1.isPlainObject)(v) ? (0, exports.buildQuery)(v, k) : enc(k) + '=' + enc(v));
        }
    }
    return str.join('&');
};
exports.buildQuery = buildQuery;


/***/ }),

/***/ 48240:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.completeUrl = void 0;
var completeUrl = function (url) {
    if (window.location.protocol === 'file:' && /^\/\//.test(url)) {
        url = 'https:' + url;
    }
    return url;
};
exports.completeUrl = completeUrl;


/***/ }),

/***/ 64981:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConfigFlatten = exports.ConfigProto = void 0;
var tslib_1 = __webpack_require__(20255);
var extend_1 = __webpack_require__(7935);
var is_array_1 = __webpack_require__(49781);
var is_plain_object_1 = __webpack_require__(79736);
var is_string_1 = __webpack_require__(24421);
var is_void_1 = __webpack_require__(24021);
var config_1 = __webpack_require__(93166);
var utils_1 = __webpack_require__(67309);
function ConfigProto(options, proto, deep) {
    if (deep === void 0) { deep = 0; }
    if (Object.getPrototypeOf(options) !== Object.prototype) {
        return options;
    }
    var def = config_1.Config.defaultOptions;
    if ((0, is_string_1.isString)(options.preset)) {
        if (def.presets[options.preset] !== undefined) {
            var preset_1 = def.presets[options.preset];
            Object.keys(preset_1).forEach(function (subKey) {
                if ((0, is_void_1.isVoid)(options[subKey])) {
                    options[subKey] = preset_1[subKey];
                }
            });
        }
        delete options.preset;
    }
    var newOpt = {};
    Object.keys(options).forEach(function (key) {
        var opt = options[key], protoKey = proto ? proto[key] : null;
        if ((0, is_plain_object_1.isPlainObject)(opt) && (0, is_plain_object_1.isPlainObject)(protoKey) && !(0, extend_1.isAtom)(opt)) {
            newOpt[key] = ConfigProto(opt, protoKey, deep + 1);
            return;
        }
        if (deep !== 0 && (0, is_array_1.isArray)(opt) && !(0, extend_1.isAtom)(opt) && (0, is_array_1.isArray)(protoKey)) {
            newOpt[key] = tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read(opt), false), tslib_1.__read(protoKey.slice(opt.length)), false);
            return;
        }
        newOpt[key] = opt;
    });
    Object.setPrototypeOf(newOpt, proto);
    return newOpt;
}
exports.ConfigProto = ConfigProto;
function ConfigFlatten(obj) {
    return (0, utils_1.keys)(obj, false).reduce(function (app, key) {
        app[key] = obj[key];
        return app;
    }, {});
}
exports.ConfigFlatten = ConfigFlatten;


/***/ }),

/***/ 42051:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.convertMediaUrlToVideoEmbed = void 0;
var is_url_1 = __webpack_require__(64350);
var parse_query_1 = __webpack_require__(67285);
var convertMediaUrlToVideoEmbed = function (url, width, height) {
    if (width === void 0) { width = 400; }
    if (height === void 0) { height = 345; }
    if (!(0, is_url_1.isURL)(url)) {
        return url;
    }
    var parser = document.createElement('a'), pattern1 = /(?:http?s?:\/\/)?(?:www\.)?(?:vimeo\.com)\/?(.+)/g;
    parser.href = url;
    if (!width) {
        width = 400;
    }
    if (!height) {
        height = 345;
    }
    var protocol = parser.protocol || '';
    switch (parser.hostname) {
        case 'www.vimeo.com':
        case 'vimeo.com':
            return pattern1.test(url)
                ? url.replace(pattern1, '<iframe width="' +
                    width +
                    '" height="' +
                    height +
                    '" src="' +
                    protocol +
                    '//player.vimeo.com/video/$1" frameborder="0" allowfullscreen></iframe>')
                : url;
        case 'youtube.com':
        case 'www.youtube.com':
        case 'youtu.be':
        case 'www.youtu.be': {
            var query = parser.search
                ? (0, parse_query_1.parseQuery)(parser.search)
                : { v: parser.pathname.substr(1) };
            return query.v
                ? '<iframe width="' +
                    width +
                    '" height="' +
                    height +
                    '" src="' +
                    protocol +
                    '//www.youtube.com/embed/' +
                    query.v +
                    '" frameborder="0" allowfullscreen></iframe>'
                : url;
        }
    }
    return url;
};
exports.convertMediaUrlToVideoEmbed = convertMediaUrlToVideoEmbed;


/***/ }),

/***/ 26911:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.clearCenterAlign = exports.css = void 0;
var is_plain_object_1 = __webpack_require__(79736);
var is_boolean_1 = __webpack_require__(67749);
var normalize_css_value_1 = __webpack_require__(49353);
var camel_case_1 = __webpack_require__(26596);
var kebab_case_1 = __webpack_require__(11278);
function css(element, key, value, onlyStyleMode) {
    if (onlyStyleMode === void 0) { onlyStyleMode = false; }
    if ((0, is_boolean_1.isBoolean)(value)) {
        onlyStyleMode = value;
        value = undefined;
    }
    if ((0, is_plain_object_1.isPlainObject)(key) || value !== undefined) {
        var setValue = function (elm, _key, _value) {
            _value = (0, normalize_css_value_1.normalizeCssNumericValue)(_key, _value);
            if (_value !== undefined &&
                (_value == null ||
                    css(elm, _key, true) !== (0, normalize_css_value_1.normalizeCssValue)(_key, _value))) {
                elm.style[_key] = _value;
            }
        };
        if ((0, is_plain_object_1.isPlainObject)(key)) {
            var keys = Object.keys(key);
            for (var j = 0; j < keys.length; j += 1) {
                setValue(element, (0, camel_case_1.camelCase)(keys[j]), key[keys[j]]);
            }
        }
        else {
            setValue(element, (0, camel_case_1.camelCase)(key), value);
        }
        return '';
    }
    var key2 = (0, kebab_case_1.kebabCase)(key), doc = element.ownerDocument || document, win = doc ? doc.defaultView || doc.parentWindow : false;
    var currentValue = element.style[key];
    var result = '';
    if (currentValue !== undefined && currentValue !== '') {
        result = currentValue;
    }
    else if (win && !onlyStyleMode) {
        result = win.getComputedStyle(element).getPropertyValue(key2);
    }
    if (normalize_css_value_1.NUMBER_FIELDS_REG.test(key) &&
        /^[-+]?[0-9.]+px$/.test(result.toString())) {
        result = parseInt(result.toString(), 10);
    }
    return (0, normalize_css_value_1.normalizeCssValue)(key, result);
}
exports.css = css;
var clearCenterAlign = function (image) {
    if (css(image, 'display') === 'block') {
        css(image, 'display', '');
    }
    var style = image.style;
    if (style.marginLeft === 'auto' && style.marginRight === 'auto') {
        style.marginLeft = '';
        style.marginRight = '';
    }
};
exports.clearCenterAlign = clearCenterAlign;


/***/ }),

/***/ 2522:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ctrlKey = void 0;
var ctrlKey = function (e) {
    if (typeof navigator !== 'undefined' &&
        navigator.userAgent.indexOf('Mac OS X') !== -1) {
        if (e.metaKey && !e.altKey) {
            return true;
        }
    }
    else if (e.ctrlKey && !e.altKey) {
        return true;
    }
    return false;
};
exports.ctrlKey = ctrlKey;


/***/ }),

/***/ 63122:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dataBind = void 0;
var is_view_object_1 = __webpack_require__(96574);
var store = new WeakMap();
var dataBind = function (elm, key, value) {
    var itemStore = store.get(elm);
    if (!itemStore) {
        itemStore = {};
        store.set(elm, itemStore);
        var e = null;
        if ((0, is_view_object_1.isViewObject)(elm.j)) {
            e = elm.j.e;
        }
        if ((0, is_view_object_1.isViewObject)(elm)) {
            e = elm.e;
        }
        e &&
            e.on('beforeDestruct', function () {
                store.delete(elm);
            });
    }
    if (value === undefined) {
        return itemStore[key];
    }
    itemStore[key] = value;
    return value;
};
exports.dataBind = dataBind;


/***/ }),

/***/ 93351:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.defaultLanguage = void 0;
var is_string_1 = __webpack_require__(24421);
var defaultLanguage = function (language, defaultLanguage) {
    if (defaultLanguage === void 0) { defaultLanguage = 'en'; }
    if (language !== 'auto' && (0, is_string_1.isString)(language)) {
        return language;
    }
    if (document.documentElement && document.documentElement.lang) {
        return document.documentElement.lang;
    }
    if (navigator.language) {
        return navigator.language.substring(0, 2);
    }
    return defaultLanguage;
};
exports.defaultLanguage = defaultLanguage;


/***/ }),

/***/ 41579:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isAbort = exports.abort = exports.options = exports.connection = exports.error = void 0;
var errors_1 = __webpack_require__(45339);
function error(message) {
    return new TypeError(message);
}
exports.error = error;
function connection(message) {
    return new errors_1.ConnectionError(message);
}
exports.connection = connection;
function options(message) {
    return new errors_1.OptionsError(message);
}
exports.options = options;
function abort(message) {
    return new errors_1.AbortError(message);
}
exports.abort = abort;
function isAbort(error) {
    return error instanceof errors_1.AbortError;
}
exports.isAbort = isAbort;


/***/ }),

/***/ 86768:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbortError = void 0;
var tslib_1 = __webpack_require__(20255);
var AbortError = (function (_super) {
    tslib_1.__extends(AbortError, _super);
    function AbortError(m) {
        var _this = _super.call(this, m) || this;
        Object.setPrototypeOf(_this, AbortError.prototype);
        return _this;
    }
    return AbortError;
}(Error));
exports.AbortError = AbortError;


/***/ }),

/***/ 43380:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConnectionError = void 0;
var tslib_1 = __webpack_require__(20255);
var ConnectionError = (function (_super) {
    tslib_1.__extends(ConnectionError, _super);
    function ConnectionError(m) {
        var _this = _super.call(this, m) || this;
        Object.setPrototypeOf(_this, ConnectionError.prototype);
        return _this;
    }
    return ConnectionError;
}(Error));
exports.ConnectionError = ConnectionError;


/***/ }),

/***/ 45339:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(86768), exports);
tslib_1.__exportStar(__webpack_require__(43380), exports);
tslib_1.__exportStar(__webpack_require__(47403), exports);


/***/ }),

/***/ 47403:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OptionsError = void 0;
var tslib_1 = __webpack_require__(20255);
var OptionsError = (function (_super) {
    tslib_1.__extends(OptionsError, _super);
    function OptionsError(m) {
        var _this = _super.call(this, m) || this;
        Object.setPrototypeOf(_this, OptionsError.prototype);
        return _this;
    }
    return OptionsError;
}(TypeError));
exports.OptionsError = OptionsError;


/***/ }),

/***/ 56964:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(41579), exports);
tslib_1.__exportStar(__webpack_require__(45339), exports);


/***/ }),

/***/ 7935:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fastClone = exports.markAsAtomic = exports.isAtom = void 0;
var stringify_1 = __webpack_require__(42554);
function isAtom(obj) {
    return obj && obj.isAtom;
}
exports.isAtom = isAtom;
function markAsAtomic(obj) {
    Object.defineProperty(obj, 'isAtom', {
        enumerable: false,
        value: true,
        configurable: false
    });
    return obj;
}
exports.markAsAtomic = markAsAtomic;
function fastClone(object) {
    return JSON.parse((0, stringify_1.stringify)(object));
}
exports.fastClone = fastClone;


/***/ }),

/***/ 87247:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getClassName = exports.keepNames = void 0;
var is_function_1 = __webpack_require__(42096);
exports.keepNames = new Map();
var getClassName = function (obj) {
    var _a;
    if ((0, is_function_1.isFunction)(obj.className)) {
        return obj.className();
    }
    var constructor = ((_a = obj.constructor) === null || _a === void 0 ? void 0 : _a.originalConstructor) || obj.constructor;
    if (exports.keepNames.has(constructor)) {
        return exports.keepNames.get(constructor);
    }
    if (constructor.name) {
        return constructor.name;
    }
    var regex = new RegExp(/^\s*function\s*(\S*)\s*\(/);
    var res = constructor.toString().match(regex);
    return res ? res[1] : '';
};
exports.getClassName = getClassName;


/***/ }),

/***/ 69384:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.get = void 0;
var tslib_1 = __webpack_require__(20255);
var is_string_1 = __webpack_require__(24421);
var is_void_1 = __webpack_require__(24021);
function get(chain, obj) {
    var e_1, _a;
    if (!(0, is_string_1.isString)(chain) || !chain.length) {
        return null;
    }
    var parts = chain.split('.');
    var result = obj;
    try {
        try {
            for (var parts_1 = tslib_1.__values(parts), parts_1_1 = parts_1.next(); !parts_1_1.done; parts_1_1 = parts_1.next()) {
                var part = parts_1_1.value;
                if ((0, is_void_1.isVoid)(result[part])) {
                    return null;
                }
                result = result[part];
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (parts_1_1 && !parts_1_1.done && (_a = parts_1.return)) _a.call(parts_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    catch (_b) {
        return null;
    }
    if ((0, is_void_1.isVoid)(result)) {
        return null;
    }
    return result;
}
exports.get = get;


/***/ }),

/***/ 6102:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.humanSizeToBytes = void 0;
var humanSizeToBytes = function (human) {
    if (/^[0-9.]+$/.test(human.toString())) {
        return parseFloat(human);
    }
    var format = human.substr(-2, 2).toUpperCase(), formats = ['KB', 'MB', 'GB', 'TB'], number = parseFloat(human.substr(0, human.length - 2));
    return formats.indexOf(format) !== -1
        ? number * Math.pow(1024, formats.indexOf(format) + 1)
        : parseInt(human, 10);
};
exports.humanSizeToBytes = humanSizeToBytes;


/***/ }),

/***/ 76502:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(60303), exports);
tslib_1.__exportStar(__webpack_require__(62462), exports);
tslib_1.__exportStar(__webpack_require__(52378), exports);
tslib_1.__exportStar(__webpack_require__(37682), exports);
tslib_1.__exportStar(__webpack_require__(71567), exports);
tslib_1.__exportStar(__webpack_require__(48240), exports);
tslib_1.__exportStar(__webpack_require__(64981), exports);
tslib_1.__exportStar(__webpack_require__(42051), exports);
tslib_1.__exportStar(__webpack_require__(26911), exports);
tslib_1.__exportStar(__webpack_require__(2522), exports);
tslib_1.__exportStar(__webpack_require__(63122), exports);
tslib_1.__exportStar(__webpack_require__(93351), exports);
tslib_1.__exportStar(__webpack_require__(56964), exports);
tslib_1.__exportStar(__webpack_require__(7935), exports);
tslib_1.__exportStar(__webpack_require__(69384), exports);
tslib_1.__exportStar(__webpack_require__(87247), exports);
tslib_1.__exportStar(__webpack_require__(6102), exports);
tslib_1.__exportStar(__webpack_require__(47580), exports);
tslib_1.__exportStar(__webpack_require__(67285), exports);
tslib_1.__exportStar(__webpack_require__(21498), exports);
tslib_1.__exportStar(__webpack_require__(80861), exports);
tslib_1.__exportStar(__webpack_require__(9005), exports);
tslib_1.__exportStar(__webpack_require__(54188), exports);
tslib_1.__exportStar(__webpack_require__(21518), exports);
tslib_1.__exportStar(__webpack_require__(37228), exports);
tslib_1.__exportStar(__webpack_require__(67309), exports);
tslib_1.__exportStar(__webpack_require__(22362), exports);


/***/ }),

/***/ 47580:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.markDeprecated = exports.cns = void 0;
var tslib_1 = __webpack_require__(20255);
exports.cns = console;
function markDeprecated(method, names, ctx) {
    if (names === void 0) { names = ['']; }
    if (ctx === void 0) { ctx = null; }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        exports.cns.warn("Method \"".concat(names[0], "\" deprecated.") +
            (names[1] ? " Use \"".concat(names[1], "\" instead") : ''));
        return method.call.apply(method, tslib_1.__spreadArray([ctx], tslib_1.__read(args), false));
    };
}
exports.markDeprecated = markDeprecated;


/***/ }),

/***/ 67285:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseQuery = void 0;
var parseQuery = function (queryString) {
    var query = {}, a = queryString.substring(1).split('&');
    for (var i = 0; i < a.length; i += 1) {
        var keyValue = a[i].split('=');
        query[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1] || '');
    }
    return query;
};
exports.parseQuery = parseQuery;


/***/ }),

/***/ 21498:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.previewBox = void 0;
var is_string_1 = __webpack_require__(24421);
var dom_1 = __webpack_require__(24263);
var css_1 = __webpack_require__(26911);
var utils_1 = __webpack_require__(67309);
var selector_1 = __webpack_require__(54188);
function fixedAssetsSizeAndAbsoluteLinks(editor, points) {
    var restoreAttributes = [];
    try {
        (0, selector_1.$$)('img', editor.editor).forEach(function (item) {
            var previousAttrs = [
                (0, utils_1.attr)(item, 'width'),
                (0, utils_1.attr)(item, 'height'),
                item.src
            ];
            (0, utils_1.attr)(item, {
                width: item.offsetWidth + points,
                height: item.offsetHeight + points
            });
            var a = editor.createInside.a();
            editor.ed.body.appendChild(a);
            a.href = item.src;
            item.src = a.href;
            dom_1.Dom.safeRemove(a);
            restoreAttributes.push(function () {
                var _a;
                item.src = (_a = previousAttrs[2]) !== null && _a !== void 0 ? _a : '';
                (0, utils_1.attr)(item, {
                    width: previousAttrs[0] || null,
                    height: previousAttrs[1] || null
                });
            });
        });
    }
    catch (e) {
        restoreAttributes.forEach(function (c) { return c(); });
        restoreAttributes.length = 0;
        throw e;
    }
    return restoreAttributes;
}
function previewBox(editor, defaultValue, points, container) {
    if (points === void 0) { points = 'px'; }
    if (container === void 0) { container = null; }
    var restoreAttributes = fixedAssetsSizeAndAbsoluteLinks(editor, points);
    try {
        var res = editor.e.fire('beforePreviewBox', defaultValue, points);
        if (res != null) {
            return res;
        }
        var div = editor.c.div('jodit__preview-box jodit-context');
        if (container) {
            container.appendChild(div);
        }
        (0, css_1.css)(div, {
            position: 'relative',
            padding: 16
        });
        var value = editor.value ||
            "<div style='position: absolute;left:50%;top:50%;transform: translateX(-50%) translateY(-50%);color:#ccc;'>".concat(editor.i18n('Empty'), "</div>");
        if (editor.iframe) {
            var iframe_1 = editor.create.element('iframe');
            (0, css_1.css)(iframe_1, {
                minWidth: 800,
                minHeight: 600,
                border: 0
            });
            div.appendChild(iframe_1);
            var myWindow_1 = iframe_1.contentWindow;
            if (myWindow_1) {
                editor.e.fire('generateDocumentStructure.iframe', myWindow_1.document, editor);
                div = myWindow_1.document.body;
                if (typeof ResizeObserver === 'function') {
                    var resizeObserver_1 = new ResizeObserver(function (entries) {
                        iframe_1.style.height =
                            myWindow_1.document.body.offsetHeight + 20 + 'px';
                    });
                    resizeObserver_1.observe(myWindow_1.document.body);
                    editor.e.on('beforeDestruct', function () {
                        resizeObserver_1.unobserve(myWindow_1.document.body);
                    });
                }
            }
        }
        else {
            (0, css_1.css)(div, {
                minWidth: 1024,
                minHeight: 600,
                border: 0
            });
        }
        var setHTML_1 = function (box, value) {
            var dv = (0, is_string_1.isString)(value) ? editor.c.div() : value;
            if ((0, is_string_1.isString)(value)) {
                dv.innerHTML = value;
            }
            for (var i = 0; i < dv.childNodes.length; i += 1) {
                var c = dv.childNodes[i];
                if (dom_1.Dom.isElement(c)) {
                    var newNode = box.ownerDocument.createElement(c.nodeName);
                    for (var j = 0; j < c.attributes.length; j += 1) {
                        (0, utils_1.attr)(newNode, c.attributes[j].nodeName, c.attributes[j].nodeValue);
                    }
                    if (c.childNodes.length === 0 || dom_1.Dom.isTag(c, ['table'])) {
                        switch (c.nodeName) {
                            case 'SCRIPT':
                                if (c.textContent) {
                                    newNode.textContent = c.textContent;
                                }
                                break;
                            default:
                                if (c.innerHTML) {
                                    newNode.innerHTML = c.innerHTML;
                                }
                                break;
                        }
                    }
                    else {
                        setHTML_1(newNode, c);
                    }
                    try {
                        box.appendChild(newNode);
                    }
                    catch (_a) { }
                }
                else {
                    try {
                        box.appendChild(c.cloneNode(true));
                    }
                    catch (_b) { }
                }
            }
        };
        setHTML_1(div, value);
        editor.e.fire('afterPreviewBox', div);
        return div;
    }
    finally {
        restoreAttributes.forEach(function (clb) { return clb(); });
    }
}
exports.previewBox = previewBox;


/***/ }),

/***/ 80861:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.reset = void 0;
var get_1 = __webpack_require__(69384);
var is_function_1 = __webpack_require__(42096);
var map = {};
var reset = function (key) {
    var _a, _b;
    if (!(key in map)) {
        var iframe = document.createElement('iframe');
        try {
            iframe.src = 'about:blank';
            document.body.appendChild(iframe);
            if (!iframe.contentWindow) {
                return null;
            }
            var func = (0, get_1.get)(key, iframe.contentWindow), bind = (0, get_1.get)(key.split('.').slice(0, -1).join('.'), iframe.contentWindow);
            if ((0, is_function_1.isFunction)(func)) {
                map[key] = func.bind(bind);
            }
        }
        catch (e) {
            if (false) {}
        }
        finally {
            (_a = iframe.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(iframe);
        }
    }
    return (_b = map[key]) !== null && _b !== void 0 ? _b : null;
};
exports.reset = reset;


/***/ }),

/***/ 9005:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scrollIntoViewIfNeeded = exports.inView = void 0;
var dom_1 = __webpack_require__(24263);
var inView = function (elm, root, doc) {
    var rect = elm.getBoundingClientRect(), el = elm;
    var top = rect.top, height = rect.height;
    do {
        if (el && el.parentNode) {
            el = el.parentNode;
            rect = el.getBoundingClientRect();
            if (!(top <= rect.bottom)) {
                return false;
            }
            if (top + height <= rect.top) {
                return false;
            }
        }
    } while (el && el !== root && el.parentNode);
    return (top <= ((doc.documentElement && doc.documentElement.clientHeight) || 0));
};
exports.inView = inView;
function scrollIntoViewIfNeeded(elm, root, doc) {
    if (dom_1.Dom.isHTMLElement(elm) && !(0, exports.inView)(elm, root, doc)) {
        if (root.clientHeight !== root.scrollHeight) {
            root.scrollTop = elm.offsetTop;
        }
        if (!(0, exports.inView)(elm, root, doc)) {
            elm.scrollIntoView();
        }
    }
}
exports.scrollIntoViewIfNeeded = scrollIntoViewIfNeeded;


/***/ }),

/***/ 54188:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resolveElement = exports.cssPath = exports.refs = exports.getXPathByElement = exports.$$ = void 0;
var constants_1 = __webpack_require__(86893);
var is_string_1 = __webpack_require__(24421);
var utils_1 = __webpack_require__(76502);
var dom_1 = __webpack_require__(24263);
var camel_case_1 = __webpack_require__(26596);
var to_array_1 = __webpack_require__(1853);
var element_1 = __webpack_require__(53929);
var component_1 = __webpack_require__(45113);
var temp = 1;
var $$temp = function () {
    temp++;
    return temp;
};
function $$(selector, root) {
    var result;
    if ( true &&
        /:scope/.test(selector) &&
        constants_1.IS_IE &&
        !(root && root.nodeType === Node.DOCUMENT_NODE)) {
        var id = root.id, temp_id = id ||
            '_selector_id_' + String(Math.random()).slice(2) + $$temp();
        selector = selector.replace(/:scope/g, '#' + temp_id);
        !id && root.setAttribute('id', temp_id);
        result = root.parentNode.querySelectorAll(selector);
        if (!id) {
            root.removeAttribute('id');
        }
    }
    else {
        result = root.querySelectorAll(selector);
    }
    return [].slice.call(result);
}
exports.$$ = $$;
var getXPathByElement = function (element, root) {
    if (!element || element.nodeType !== Node.ELEMENT_NODE) {
        return '';
    }
    if (!element.parentNode || root === element) {
        return '';
    }
    if (element.id) {
        return "//*[@id='" + element.id + "']";
    }
    var sames = [].filter.call(element.parentNode.childNodes, function (x) { return x.nodeName === element.nodeName; });
    return ((0, exports.getXPathByElement)(element.parentNode, root) +
        '/' +
        element.nodeName.toLowerCase() +
        (sames.length > 1
            ? '[' + ((0, to_array_1.toArray)(sames).indexOf(element) + 1) + ']'
            : ''));
};
exports.getXPathByElement = getXPathByElement;
var refs = function (root) {
    if (component_1.Component.isInstanceOf(root, element_1.UIElement)) {
        root = root.container;
    }
    return $$('[ref],[data-ref]', root).reduce(function (def, child) {
        var key = (0, utils_1.attr)(child, '-ref');
        if (key && (0, is_string_1.isString)(key)) {
            def[(0, camel_case_1.camelCase)(key)] = child;
            def[key] = child;
        }
        return def;
    }, {});
};
exports.refs = refs;
var cssPath = function (el) {
    if (!dom_1.Dom.isElement(el)) {
        return null;
    }
    var path = [];
    var start = el;
    while (start && start.nodeType === Node.ELEMENT_NODE) {
        var selector = start.nodeName.toLowerCase();
        if (start.id) {
            selector += '#' + start.id;
            path.unshift(selector);
            break;
        }
        else {
            var sib = start, nth = 1;
            do {
                sib = sib.previousElementSibling;
                if (sib && sib.nodeName.toLowerCase() === selector) {
                    nth++;
                }
            } while (sib);
            selector += ':nth-of-type(' + nth + ')';
        }
        path.unshift(selector);
        start = start.parentNode;
    }
    return path.join(' > ');
};
exports.cssPath = cssPath;
function resolveElement(element, od) {
    var resolved = element;
    if ((0, is_string_1.isString)(element)) {
        try {
            resolved = od.querySelector(element);
        }
        catch (_a) {
            throw (0, utils_1.error)('String "' + element + '" should be valid HTML selector');
        }
    }
    if (!resolved ||
        typeof resolved !== 'object' ||
        !dom_1.Dom.isElement(resolved) ||
        !resolved.cloneNode) {
        throw (0, utils_1.error)('Element "' + element + '" should be string or HTMLElement instance');
    }
    return resolved;
}
exports.resolveElement = resolveElement;


/***/ }),

/***/ 21518:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.set = void 0;
var is_string_1 = __webpack_require__(24421);
var is_numeric_1 = __webpack_require__(57649);
var is_array_1 = __webpack_require__(49781);
var is_plain_object_1 = __webpack_require__(79736);
function set(chain, value, obj) {
    if (!(0, is_string_1.isString)(chain) || !chain.length) {
        return;
    }
    var parts = chain.split('.');
    var result = obj, key = parts[0];
    for (var i = 0; i < parts.length - 1; i += 1) {
        key = parts[i];
        if (!(0, is_array_1.isArray)(result[key]) && !(0, is_plain_object_1.isPlainObject)(result[key])) {
            result[key] = (0, is_numeric_1.isNumeric)(parts[i + 1]) ? [] : {};
        }
        result = result[key];
    }
    if (result) {
        result[parts[parts.length - 1]] = value;
    }
}
exports.set = set;


/***/ }),

/***/ 37228:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LimitedStack = void 0;
var LimitedStack = (function () {
    function LimitedStack(limit) {
        this.limit = limit;
        this.stack = [];
    }
    LimitedStack.prototype.push = function (item) {
        this.stack.push(item);
        if (this.stack.length > this.limit) {
            this.stack.shift();
        }
        return this;
    };
    LimitedStack.prototype.pop = function () {
        return this.stack.pop();
    };
    LimitedStack.prototype.find = function (clb) {
        return this.stack.find(clb);
    };
    return LimitedStack;
}());
exports.LimitedStack = LimitedStack;


/***/ }),

/***/ 67309:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getDataTransfer = exports.memorizeExec = exports.keys = exports.loadImage = exports.callPromise = exports.markOwner = exports.attr = exports.call = void 0;
var tslib_1 = __webpack_require__(20255);
var is_function_1 = __webpack_require__(42096);
var is_promise_1 = __webpack_require__(26335);
var is_void_1 = __webpack_require__(24021);
var is_plain_object_1 = __webpack_require__(79736);
var is_string_1 = __webpack_require__(24421);
var data_bind_1 = __webpack_require__(63122);
var css_1 = __webpack_require__(26911);
var kebab_case_1 = __webpack_require__(11278);
function call(func) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return func.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args), false));
}
exports.call = call;
function attr(elm, keyOrAttributes, value) {
    if (!elm || !(0, is_function_1.isFunction)(elm.getAttribute)) {
        return null;
    }
    if (!(0, is_string_1.isString)(keyOrAttributes)) {
        Object.keys(keyOrAttributes).forEach(function (key) {
            var value = keyOrAttributes[key];
            if ((0, is_plain_object_1.isPlainObject)(value) && key === 'style') {
                (0, css_1.css)(elm, value);
            }
            else {
                if (key === 'className') {
                    key = 'class';
                }
                attr(elm, key, value);
            }
        });
        return null;
    }
    var key = (0, kebab_case_1.CamelCaseToKebabCase)(keyOrAttributes);
    if (/^-/.test(key)) {
        var res = attr(elm, "data".concat(key));
        if (res) {
            return res;
        }
        key = key.substr(1);
    }
    if (value !== undefined) {
        if (value == null) {
            elm.hasAttribute(key) && elm.removeAttribute(key);
        }
        else {
            elm.setAttribute(key, value.toString());
            return value.toString();
        }
    }
    return elm.getAttribute(key);
}
exports.attr = attr;
function markOwner(jodit, elm) {
    attr(elm, 'data-editor_id', jodit.id);
    !elm.component &&
        Object.defineProperty(elm, 'jodit', {
            value: jodit
        });
}
exports.markOwner = markOwner;
function callPromise(condition, callback) {
    if ((0, is_promise_1.isPromise)(condition)) {
        return condition.finally(callback);
    }
    return callback();
}
exports.callPromise = callPromise;
var loadImage = function (src, jodit) {
    return jodit.async.promise(function (res, rej) {
        var image = new Image(), onError = function () {
            jodit.e.off(image);
            rej === null || rej === void 0 ? void 0 : rej();
        }, onSuccess = function () {
            jodit.e.off(image);
            res(image);
        };
        jodit.e
            .one(image, 'load', onSuccess)
            .one(image, 'error', onError)
            .one(image, 'abort', onError);
        image.src = src;
        if (image.complete) {
            onSuccess();
        }
    });
};
exports.loadImage = loadImage;
var keys = function (obj, own) {
    if (own === void 0) { own = true; }
    if (own) {
        return Object.keys(obj);
    }
    var props = [];
    for (var key in obj) {
        props.push(key);
    }
    return props;
};
exports.keys = keys;
var memorizeExec = function (editor, _, _a, preProcessValue) {
    var _b;
    var control = _a.control;
    var key = "button".concat(control.command);
    var value = (_b = (control.args && control.args[0])) !== null && _b !== void 0 ? _b : (0, data_bind_1.dataBind)(editor, key);
    if ((0, is_void_1.isVoid)(value)) {
        return false;
    }
    (0, data_bind_1.dataBind)(editor, key, value);
    if (preProcessValue) {
        value = preProcessValue(value);
    }
    editor.execCommand(control.command, false, value !== null && value !== void 0 ? value : undefined);
};
exports.memorizeExec = memorizeExec;
var getDataTransfer = function (event) {
    if (event.clipboardData) {
        return event.clipboardData;
    }
    try {
        return event.dataTransfer || new DataTransfer();
    }
    catch (_a) {
        return null;
    }
};
exports.getDataTransfer = getDataTransfer;


/***/ }),

/***/ 22362:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.val = void 0;
var val = function (elm, selector, value) {
    var child = elm.querySelector(selector);
    if (!child) {
        return '';
    }
    if (value) {
        child.value = value;
    }
    return child.value;
};
exports.val = val;


/***/ }),

/***/ 33286:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.init = exports.initInstance = void 0;
var checker_1 = __webpack_require__(10172);
var load_1 = __webpack_require__(90338);
function initInstance(jodit, pluginName, instance, doneList, waitingList) {
    if (init(jodit, pluginName, instance, doneList, waitingList)) {
        Object.keys(waitingList).forEach(function (name) {
            var plugin = waitingList[name];
            init(jodit, name, plugin, doneList, waitingList);
        });
    }
}
exports.initInstance = initInstance;
function init(jodit, pluginName, instance, doneList, waitingList) {
    var req = instance.requires;
    if ((req === null || req === void 0 ? void 0 : req.length) && !req.every(function (name) { return doneList.has(name); })) {
        if (false) {}
        waitingList[pluginName] = instance;
        return false;
    }
    if ((0, checker_1.isInitable)(instance)) {
        try {
            instance.init(jodit);
        }
        catch (e) {
            console.error(e);
            if (false) {}
        }
    }
    doneList.add(pluginName);
    delete waitingList[pluginName];
    if (instance.hasStyle) {
        (0, load_1.loadStyle)(jodit, pluginName).catch(function (e) {
             false && 0;
        });
    }
    return true;
}
exports.init = init;


/***/ }),

/***/ 90338:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.loadExtras = exports.loadStyle = void 0;
var tslib_1 = __webpack_require__(20255);
var append_script_1 = __webpack_require__(62462);
var kebab_case_1 = __webpack_require__(11278);
var utils_1 = __webpack_require__(93498);
var styles = new Set();
function loadStyle(jodit, pluginName) {
    return tslib_1.__awaiter(this, void 0, Promise, function () {
        var url;
        return tslib_1.__generator(this, function (_a) {
            url = getFullUrl(jodit, pluginName, false);
            if (styles.has(url)) {
                return [2];
            }
            styles.add(url);
            return [2, (0, append_script_1.appendStyleAsync)(jodit, url)];
        });
    });
}
exports.loadStyle = loadStyle;
function getFullUrl(jodit, name, js) {
    name = (0, kebab_case_1.kebabCase)(name);
    return (jodit.basePath +
        'plugins/' +
        name +
        '/' +
        name +
        '.' +
        (js ? 'js' : 'css'));
}
function loadExtras(items, jodit, extrasList, callback) {
    try {
        var needLoadExtras = extrasList.filter(function (extra) { return !items.has((0, utils_1.normalizeName)(extra.name)); });
        if (needLoadExtras.length) {
            load(jodit, needLoadExtras, callback);
        }
    }
    catch (e) {
        if (false) {}
    }
}
exports.loadExtras = loadExtras;
function load(jodit, pluginList, callback) {
    pluginList.map(function (extra) {
        var url = extra.url || getFullUrl(jodit, extra.name, true);
        return (0, append_script_1.appendScriptAsync)(jodit, url)
            .then(callback)
            .catch(function () { return null; });
    });
}


/***/ }),

/***/ 24342:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeInstance = void 0;
var checker_1 = __webpack_require__(10172);
function makeInstance(jodit, plugin) {
    try {
        try {
            return (0, checker_1.isFunction)(plugin) ? new plugin(jodit) : plugin;
        }
        catch (e) {
            if ((0, checker_1.isFunction)(plugin) && !plugin.prototype) {
                return plugin(jodit);
            }
        }
    }
    catch (e) {
        console.error(e);
        if (false) {}
    }
    return null;
}
exports.makeInstance = makeInstance;


/***/ }),

/***/ 93498:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizeName = void 0;
var kebab_case_1 = __webpack_require__(11278);
function normalizeName(name) {
    return (0, kebab_case_1.kebabCase)(name).toLowerCase();
}
exports.normalizeName = normalizeName;


/***/ }),

/***/ 57549:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(44540), exports);
tslib_1.__exportStar(__webpack_require__(85605), exports);


/***/ }),

/***/ 13573:
/***/ (function() {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/***/ }),

/***/ 44540:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PluginSystem = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(13573);
var checker_1 = __webpack_require__(10172);
var array_1 = __webpack_require__(12557);
var global_1 = __webpack_require__(17332);
var load_1 = __webpack_require__(90338);
var utils_1 = __webpack_require__(93498);
var make_instance_1 = __webpack_require__(24342);
var init_instance_1 = __webpack_require__(33286);
var PluginSystem = (function () {
    function PluginSystem() {
        this.__items = new Map();
    }
    PluginSystem.prototype.add = function (name, plugin) {
        this.__items.set((0, utils_1.normalizeName)(name), plugin);
        global_1.eventEmitter.fire("plugin:".concat(name, ":ready"));
    };
    PluginSystem.prototype.get = function (name) {
        return this.__items.get((0, utils_1.normalizeName)(name));
    };
    PluginSystem.prototype.remove = function (name) {
        this.__items.delete((0, utils_1.normalizeName)(name));
    };
    PluginSystem.prototype.__filter = function (filter) {
        var results = [];
        this.__items.forEach(function (plugin, name) {
            if (!filter || filter.has(name)) {
                results.push([name, plugin]);
            }
        });
        return results;
    };
    PluginSystem.prototype.__init = function (jodit) {
        var _this = this;
        var _a = getSpecialLists(jodit), extrasList = _a.extrasList, disableList = _a.disableList, filter = _a.filter;
        var doneList = new Set();
        var waitingList = {};
        var pluginsMap = {};
        jodit.__plugins = pluginsMap;
        var initPlugins = function () {
            if (jodit.isInDestruct) {
                return;
            }
            var commit = false;
            _this.__filter(filter).forEach(function (_a) {
                var _b = tslib_1.__read(_a, 2), name = _b[0], plugin = _b[1];
                if (disableList.has(name) ||
                    doneList.has(name) ||
                    waitingList[name]) {
                    return;
                }
                var requires = plugin === null || plugin === void 0 ? void 0 : plugin.requires;
                if (requires &&
                    (0, checker_1.isArray)(requires) &&
                    Boolean(requires.some(function (req) { return disableList.has(req); }))) {
                    return;
                }
                commit = true;
                var instance = (0, make_instance_1.makeInstance)(jodit, plugin);
                if (!instance) {
                    doneList.add(name);
                    delete waitingList[name];
                    return;
                }
                (0, init_instance_1.initInstance)(jodit, name, instance, doneList, waitingList);
                pluginsMap[name] = instance;
            });
            commit && jodit.e.fire('updatePlugins');
        };
        if (!extrasList || !extrasList.length) {
            (0, load_1.loadExtras)(this.__items, jodit, extrasList, initPlugins);
        }
        initPlugins();
        bindOnBeforeDestruct(jodit, pluginsMap);
    };
    PluginSystem.prototype.wait = function (name) {
        var _this = this;
        return new Promise(function (resolve) {
            if (_this.get(name)) {
                return resolve();
            }
            var onReady = function () {
                resolve();
                global_1.eventEmitter.off("plugin:".concat(name, ":ready"), onReady);
            };
            global_1.eventEmitter.on("plugin:".concat(name, ":ready"), onReady);
        });
    };
    return PluginSystem;
}());
exports.PluginSystem = PluginSystem;
function bindOnBeforeDestruct(jodit, plugins) {
    jodit.e.on('beforeDestruct', function () {
        Object.keys(plugins).forEach(function (name) {
            var instance = plugins[name];
            if ((0, checker_1.isDestructable)(instance)) {
                instance.destruct(jodit);
            }
            delete plugins[name];
        });
        delete jodit.__plugins;
    });
}
function getSpecialLists(jodit) {
    var extrasList = jodit.o.extraPlugins.map(function (s) {
        return (0, checker_1.isString)(s) ? { name: s } : s;
    });
    var disableList = new Set((0, array_1.splitArray)(jodit.o.disablePlugins).map(utils_1.normalizeName));
    var filter = jodit.o.safeMode ? new Set(jodit.o.safePluginsList) : null;
    return { extrasList: extrasList, disableList: disableList, filter: filter };
}


/***/ }),

/***/ 85605:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Plugin = void 0;
var tslib_1 = __webpack_require__(20255);
var component_1 = __webpack_require__(56562);
var decorators_1 = __webpack_require__(43441);
var helpers_1 = __webpack_require__(40332);
var Plugin = (function (_super) {
    tslib_1.__extends(Plugin, _super);
    function Plugin(jodit) {
        var _this = _super.call(this, jodit) || this;
        _this.requires = [];
        _this.buttons = [];
        _this.hasStyle = false;
        jodit.e
            .on('afterPluginSystemInit', function () {
            var _a;
            if ((0, helpers_1.isJoditObject)(jodit)) {
                (_a = _this.buttons) === null || _a === void 0 ? void 0 : _a.forEach(function (btn) {
                    jodit.registerButton(btn);
                });
            }
        })
            .on('afterInit', function () {
            _this.setStatus(component_1.STATUSES.ready);
            _this.afterInit(jodit);
        })
            .on('beforeDestruct', _this.destruct);
        return _this;
    }
    Plugin.prototype.className = function () {
        return '';
    };
    Plugin.prototype.init = function (jodit) {
    };
    Plugin.prototype.destruct = function () {
        var _a, _b, _c;
        if (this.isReady) {
            this.setStatus(component_1.STATUSES.beforeDestruct);
            var j_1 = this.j;
            if ((0, helpers_1.isJoditObject)(j_1)) {
                (_a = this.buttons) === null || _a === void 0 ? void 0 : _a.forEach(function (btn) {
                    j_1 === null || j_1 === void 0 ? void 0 : j_1.unregisterButton(btn);
                });
            }
            (_c = (_b = this.j) === null || _b === void 0 ? void 0 : _b.events) === null || _c === void 0 ? void 0 : _c.off('beforeDestruct', this.destruct);
            this.beforeDestruct(this.j);
            _super.prototype.destruct.call(this);
        }
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], Plugin.prototype, "destruct", null);
    return Plugin;
}(component_1.ViewComponent));
exports.Plugin = Plugin;


/***/ }),

/***/ 9917:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Ajax = void 0;
var tslib_1 = __webpack_require__(20255);
var config_1 = __webpack_require__(93166);
var helpers_1 = __webpack_require__(40332);
var error = __webpack_require__(56964);
var response_1 = __webpack_require__(86101);
var async_1 = __webpack_require__(22630);
var decorators_1 = __webpack_require__(43441);
__webpack_require__(12144);
var Ajax = (function () {
    function Ajax(options, defaultAjaxOptions) {
        if (defaultAjaxOptions === void 0) { defaultAjaxOptions = config_1.Config.prototype.defaultAjaxOptions; }
        this.__async = new async_1.Async();
        this.__isFulfilled = false;
        this.__activated = false;
        this.__isDestructed = false;
        this.options = (0, helpers_1.ConfigProto)(options || {}, defaultAjaxOptions);
        this.xhr = this.o.xhr ? this.o.xhr() : new XMLHttpRequest();
    }
    Ajax.prototype.__buildParams = function (obj, prefix) {
        if ((0, helpers_1.isPlainObject)(obj) &&
            this.options.contentType &&
            this.options.contentType.includes('application/json')) {
            return JSON.stringify(obj);
        }
        if ((0, helpers_1.isFunction)(this.o.queryBuild)) {
            return this.o.queryBuild.call(this, obj, prefix);
        }
        if ((0, helpers_1.isString)(obj) ||
            obj instanceof window.FormData ||
            (typeof obj === 'object' && obj != null && (0, helpers_1.isFunction)(obj.append))) {
            return obj;
        }
        return (0, helpers_1.buildQuery)(obj);
    };
    Object.defineProperty(Ajax.prototype, "o", {
        get: function () {
            return this.options;
        },
        enumerable: false,
        configurable: true
    });
    Ajax.prototype.abort = function () {
        if (this.__isFulfilled) {
            return this;
        }
        try {
            this.__isFulfilled = true;
            this.xhr.abort();
        }
        catch (_a) { }
        return this;
    };
    Ajax.prototype.send = function () {
        var _this = this;
        this.__activated = true;
        var _a = this, xhr = _a.xhr, o = _a.o;
        var request = this.prepareRequest();
        return this.__async.promise(function (resolve, reject) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var onReject, onResolve, url, data, method, headers;
            var _this = this;
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        onReject = function () {
                            _this.__isFulfilled = true;
                            reject(error.connection('Connection error'));
                        };
                        onResolve = function () {
                            _this.__isFulfilled = true;
                            resolve(new response_1.Response(request, xhr.status, xhr.statusText, !xhr.responseType ? xhr.responseText : xhr.response));
                        };
                        xhr.onload = onResolve;
                        xhr.onabort = function () {
                            _this.__isFulfilled = true;
                            reject(error.abort('Abort connection'));
                        };
                        xhr.onerror = onReject;
                        xhr.ontimeout = onReject;
                        if (o.responseType) {
                            xhr.responseType = o.responseType;
                        }
                        xhr.onprogress = function (e) {
                            var _a, _b;
                            var percentComplete = 0;
                            if (e.lengthComputable) {
                                percentComplete = (e.loaded / e.total) * 100;
                            }
                            (_b = (_a = _this.options).onProgress) === null || _b === void 0 ? void 0 : _b.call(_a, percentComplete);
                        };
                        xhr.onreadystatechange = function () {
                            var _a, _b;
                            (_b = (_a = _this.options).onProgress) === null || _b === void 0 ? void 0 : _b.call(_a, 10);
                            if (xhr.readyState === XMLHttpRequest.DONE) {
                                if (o.successStatuses.includes(xhr.status)) {
                                    onResolve();
                                }
                                else if (xhr.statusText) {
                                    _this.__isFulfilled = true;
                                    reject(error.connection(xhr.statusText));
                                }
                            }
                        };
                        xhr.withCredentials = (_a = o.withCredentials) !== null && _a !== void 0 ? _a : false;
                        url = request.url, data = request.data, method = request.method;
                        xhr.open(method, url, true);
                        if (o.contentType && xhr.setRequestHeader) {
                            xhr.setRequestHeader('Content-type', o.contentType);
                        }
                        headers = o.headers;
                        if (!(0, helpers_1.isFunction)(headers)) return [3, 2];
                        return [4, headers.call(this)];
                    case 1:
                        headers = _b.sent();
                        _b.label = 2;
                    case 2:
                        if (headers && xhr.setRequestHeader) {
                            Object.keys(headers).forEach(function (key) {
                                xhr.setRequestHeader(key, headers[key]);
                            });
                        }
                        this.__async.setTimeout(function () {
                            xhr.send(data ? _this.__buildParams(data) : undefined);
                        }, 0);
                        return [2];
                }
            });
        }); });
    };
    Ajax.prototype.prepareRequest = function () {
        if (!this.o.url) {
            throw error.error('Need URL for AJAX request');
        }
        var url = this.o.url;
        var data = this.o.data;
        var method = (this.o.method || 'get').toLowerCase();
        if (method === 'get' && data && (0, helpers_1.isPlainObject)(data)) {
            var qIndex = url.indexOf('?');
            if (qIndex !== -1) {
                var urlData = (0, helpers_1.parseQuery)(url);
                url =
                    url.substring(0, qIndex) +
                        '?' +
                        (0, helpers_1.buildQuery)(tslib_1.__assign(tslib_1.__assign({}, urlData), data));
            }
            else {
                url += '?' + (0, helpers_1.buildQuery)(this.o.data);
            }
        }
        var request = {
            url: url,
            method: method,
            data: data
        };
        Ajax.log.splice(100);
        Ajax.log.push(request);
        return request;
    };
    Ajax.prototype.destruct = function () {
        if (!this.__isDestructed) {
            this.__isDestructed = true;
            if (this.__activated && !this.__isFulfilled) {
                this.abort();
                this.__isFulfilled = true;
            }
            this.__async.destruct();
        }
    };
    Ajax.log = [];
    tslib_1.__decorate([
        decorators_1.autobind
    ], Ajax.prototype, "destruct", null);
    return Ajax;
}());
exports.Ajax = Ajax;


/***/ }),

/***/ 12144:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.defaultAjaxOptions = {
    successStatuses: [200, 201, 202],
    method: 'GET',
    url: '',
    data: null,
    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
    headers: {
        'X-REQUESTED-WITH': 'XMLHttpRequest'
    },
    withCredentials: false,
    xhr: function () {
        return new XMLHttpRequest();
    }
};


/***/ }),

/***/ 30056:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(9917), exports);
tslib_1.__exportStar(__webpack_require__(86101), exports);


/***/ }),

/***/ 86101:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Response = void 0;
var tslib_1 = __webpack_require__(20255);
var Response = (function () {
    function Response(request, status, statusText, body) {
        this.request = request;
        this.status = status;
        this.statusText = statusText;
        this.body = body;
    }
    Object.defineProperty(Response.prototype, "url", {
        get: function () {
            return this.request.url;
        },
        enumerable: false,
        configurable: true
    });
    Response.prototype.json = function () {
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2, JSON.parse(this.body)];
            });
        });
    };
    Response.prototype.text = function () {
        return Promise.resolve(this.body);
    };
    Response.prototype.blob = function () {
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2, this.body];
            });
        });
    };
    return Response;
}());
exports.Response = Response;


/***/ }),

/***/ 10109:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(287), exports);
tslib_1.__exportStar(__webpack_require__(10264), exports);


/***/ }),

/***/ 287:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.moveNodeInsideStart = void 0;
var dom_1 = __webpack_require__(64968);
var constants_1 = __webpack_require__(86893);
function moveNodeInsideStart(j, node, start) {
    var sibling = dom_1.Dom.findSibling(node, start), anotherSibling = dom_1.Dom.findSibling(node, !start);
    while (dom_1.Dom.isElement(sibling) &&
        !dom_1.Dom.isTag(sibling, constants_1.INSEPARABLE_TAGS) &&
        dom_1.Dom.isContentEditable(sibling, j.editor) &&
        (!anotherSibling || !dom_1.Dom.closest(node, dom_1.Dom.isElement, j.editor))) {
        if (start || !sibling.firstChild) {
            sibling.appendChild(node);
        }
        else {
            dom_1.Dom.before(sibling.firstChild, node);
        }
        sibling = dom_1.Dom.sibling(node, start);
        anotherSibling = dom_1.Dom.sibling(node, !start);
    }
}
exports.moveNodeInsideStart = moveNodeInsideStart;


/***/ }),

/***/ 10264:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.moveTheNodeAlongTheEdgeOutward = void 0;
var dom_1 = __webpack_require__(64968);
function moveTheNodeAlongTheEdgeOutward(node, start, root) {
    var item = node;
    while (item && item !== root) {
        var sibling = dom_1.Dom.findSibling(item, start);
        if (sibling) {
            return;
        }
        item = item.parentElement;
        if (item && item !== root) {
            start ? dom_1.Dom.before(item, node) : dom_1.Dom.after(item, node);
        }
    }
    return;
}
exports.moveTheNodeAlongTheEdgeOutward = moveTheNodeAlongTheEdgeOutward;


/***/ }),

/***/ 46325:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(70851), exports);
tslib_1.__exportStar(__webpack_require__(77627), exports);


/***/ }),

/***/ 2047:
/***/ (function() {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/***/ }),

/***/ 77627:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Select = void 0;
var tslib_1 = __webpack_require__(20255);
var consts = __webpack_require__(86893);
var constants_1 = __webpack_require__(86893);
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var commit_style_1 = __webpack_require__(70851);
var decorators_1 = __webpack_require__(43441);
var helpers_2 = __webpack_require__(10109);
var assert_1 = __webpack_require__(52378);
var checker_1 = __webpack_require__(10172);
__webpack_require__(2047);
var Select = (function () {
    function Select(jodit) {
        var _this = this;
        this.jodit = jodit;
        jodit.e.on('removeMarkers', function () {
            _this.removeMarkers();
        });
    }
    Object.defineProperty(Select.prototype, "j", {
        get: function () {
            return this.jodit;
        },
        enumerable: false,
        configurable: true
    });
    Select.prototype.errorNode = function (node) {
        if (!dom_1.Dom.isNode(node)) {
            throw (0, helpers_1.error)('Parameter node must be instance of Node');
        }
    };
    Object.defineProperty(Select.prototype, "area", {
        get: function () {
            return this.j.editor;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Select.prototype, "win", {
        get: function () {
            return this.j.ew;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Select.prototype, "doc", {
        get: function () {
            return this.j.ed;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Select.prototype, "sel", {
        get: function () {
            if (this.j.o.shadowRoot &&
                (0, checker_1.isFunction)(this.j.o.shadowRoot.getSelection)) {
                return this.j.o.shadowRoot.getSelection();
            }
            return this.win.getSelection();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Select.prototype, "range", {
        get: function () {
            var sel = this.sel;
            return sel && sel.rangeCount ? sel.getRangeAt(0) : this.createRange();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Select.prototype, "isInsideArea", {
        get: function () {
            var sel = this.sel;
            var range = (sel === null || sel === void 0 ? void 0 : sel.rangeCount) ? sel.getRangeAt(0) : null;
            return !(!range || !dom_1.Dom.isOrContains(this.area, range.startContainer));
        },
        enumerable: false,
        configurable: true
    });
    Select.prototype.createRange = function (select) {
        if (select === void 0) { select = false; }
        var range = this.doc.createRange();
        if (select) {
            this.selectRange(range);
        }
        return range;
    };
    Select.prototype.remove = function () {
        var sel = this.sel, current = this.current();
        if (sel && current) {
            for (var i = 0; i < sel.rangeCount; i += 1) {
                sel.getRangeAt(i).deleteContents();
                sel.getRangeAt(i).collapse(true);
            }
        }
    };
    Select.prototype.clear = function () {
        var _a, _b;
        if ((_a = this.sel) === null || _a === void 0 ? void 0 : _a.rangeCount) {
            (_b = this.sel) === null || _b === void 0 ? void 0 : _b.removeAllRanges();
        }
    };
    Select.prototype.removeNode = function (node) {
        if (!dom_1.Dom.isOrContains(this.j.editor, node, true)) {
            throw (0, helpers_1.error)("Selection.removeNode can remove only editor's children");
        }
        dom_1.Dom.safeRemove(node);
        this.j.e.fire('afterRemoveNode', node);
    };
    Select.prototype.insertCursorAtPoint = function (x, y) {
        var _this = this;
        this.removeMarkers();
        try {
            var rng_1 = this.createRange();
            (function () {
                if (_this.doc.caretPositionFromPoint) {
                    var caret = _this.doc.caretPositionFromPoint(x, y);
                    if (caret) {
                        rng_1.setStart(caret.offsetNode, caret.offset);
                        return;
                    }
                }
                if (_this.doc.caretRangeFromPoint) {
                    var caret = _this.doc.caretRangeFromPoint(x, y);
                    rng_1.setStart(caret.startContainer, caret.startOffset);
                }
            })();
            rng_1.collapse(true);
            this.selectRange(rng_1);
            return true;
        }
        catch (_a) { }
        return false;
    };
    Object.defineProperty(Select.prototype, "hasMarkers", {
        get: function () {
            return Boolean(this.markers.length);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Select.prototype, "markers", {
        get: function () {
            return (0, helpers_1.$$)('span[data-' + consts.MARKER_CLASS + ']', this.area);
        },
        enumerable: false,
        configurable: true
    });
    Select.prototype.removeMarkers = function () {
        dom_1.Dom.safeRemove.apply(null, this.markers);
    };
    Select.prototype.marker = function (atStart, range) {
        if (atStart === void 0) { atStart = false; }
        var newRange = null;
        if (range) {
            newRange = range.cloneRange();
            newRange.collapse(atStart);
        }
        var marker = this.j.createInside.span();
        marker.id =
            consts.MARKER_CLASS +
                '_' +
                Number(new Date()) +
                '_' +
                String(Math.random()).slice(2);
        marker.style.lineHeight = '0';
        marker.style.display = 'none';
        dom_1.Dom.markTemporary(marker);
        (0, helpers_1.attr)(marker, 'data-' + consts.MARKER_CLASS, atStart ? 'start' : 'end');
        marker.appendChild(this.j.createInside.text(consts.INVISIBLE_SPACE));
        if (newRange) {
            if (dom_1.Dom.isOrContains(this.area, atStart ? newRange.startContainer : newRange.endContainer)) {
                newRange.insertNode(marker);
            }
        }
        return marker;
    };
    Select.prototype.restore = function () {
        var range = false;
        var markAttr = function (start) {
            return "span[data-".concat(consts.MARKER_CLASS, "=").concat(start ? 'start' : 'end', "]");
        };
        var start = this.area.querySelector(markAttr(true)), end = this.area.querySelector(markAttr(false));
        if (!start) {
            return;
        }
        range = this.createRange();
        if (!end) {
            var previousNode = start.previousSibling;
            if (dom_1.Dom.isText(previousNode)) {
                range.setStart(previousNode, previousNode.nodeValue ? previousNode.nodeValue.length : 0);
            }
            else {
                range.setStartBefore(start);
            }
            dom_1.Dom.safeRemove(start);
            range.collapse(true);
        }
        else {
            range.setStartAfter(start);
            dom_1.Dom.safeRemove(start);
            range.setEndBefore(end);
            dom_1.Dom.safeRemove(end);
        }
        if (range) {
            this.selectRange(range);
        }
    };
    Select.prototype.save = function (silent) {
        if (silent === void 0) { silent = false; }
        if (this.hasMarkers) {
            return [];
        }
        var sel = this.sel;
        if (!sel || !sel.rangeCount) {
            return [];
        }
        var info = [], length = sel.rangeCount, ranges = [];
        for (var i = 0; i < length; i += 1) {
            ranges[i] = sel.getRangeAt(i);
            if (ranges[i].collapsed) {
                var start = this.marker(true, ranges[i]);
                info[i] = {
                    startId: start.id,
                    collapsed: true,
                    startMarker: start.outerHTML
                };
            }
            else {
                var start = this.marker(true, ranges[i]);
                var end = this.marker(false, ranges[i]);
                info[i] = {
                    startId: start.id,
                    endId: end.id,
                    collapsed: false,
                    startMarker: start.outerHTML,
                    endMarker: end.outerHTML
                };
            }
        }
        if (!silent) {
            sel.removeAllRanges();
            for (var i = length - 1; i >= 0; --i) {
                var startElm = this.doc.getElementById(info[i].startId);
                if (startElm) {
                    if (info[i].collapsed) {
                        ranges[i].setStartAfter(startElm);
                        ranges[i].collapse(true);
                    }
                    else {
                        ranges[i].setStartBefore(startElm);
                        if (info[i].endId) {
                            var endElm = this.doc.getElementById(info[i].endId);
                            if (endElm) {
                                ranges[i].setEndAfter(endElm);
                            }
                        }
                    }
                }
                try {
                    sel.addRange(ranges[i].cloneRange());
                }
                catch (_a) { }
            }
        }
        return info;
    };
    Select.prototype.focus = function (options) {
        var _a, _b;
        if (options === void 0) { options = {
            preventScroll: true
        }; }
        if (!this.isFocused()) {
            var scrollParent = (0, helpers_1.getScrollParent)(this.j.container), scrollTop = scrollParent === null || scrollParent === void 0 ? void 0 : scrollParent.scrollTop;
            if (this.j.iframe) {
                if (this.doc.readyState === 'complete') {
                    this.j.iframe.focus(options);
                }
            }
            this.win.focus();
            this.area.focus(options);
            if (scrollTop && (scrollParent === null || scrollParent === void 0 ? void 0 : scrollParent.scrollTo)) {
                scrollParent.scrollTo(0, scrollTop);
            }
            var sel = this.sel, range = (sel === null || sel === void 0 ? void 0 : sel.rangeCount) ? sel === null || sel === void 0 ? void 0 : sel.getRangeAt(0) : null;
            if (!range || !dom_1.Dom.isOrContains(this.area, range.startContainer)) {
                var range_1 = this.createRange();
                range_1.setStart(this.area, 0);
                range_1.collapse(true);
                this.selectRange(range_1, false);
            }
            if (!this.j.editorIsActive) {
                (_b = (_a = this.j) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.fire('focus');
            }
            return true;
        }
        return false;
    };
    Select.prototype.isCollapsed = function () {
        var sel = this.sel;
        for (var r = 0; sel && r < sel.rangeCount; r += 1) {
            if (!sel.getRangeAt(r).collapsed) {
                return false;
            }
        }
        return true;
    };
    Select.prototype.isFocused = function () {
        return (this.doc.hasFocus &&
            this.doc.hasFocus() &&
            this.area === this.doc.activeElement);
    };
    Select.prototype.current = function (checkChild) {
        if (checkChild === void 0) { checkChild = true; }
        if (this.j.getRealMode() === consts.MODE_WYSIWYG) {
            var sel = this.sel;
            if (!sel || sel.rangeCount === 0) {
                return null;
            }
            var range = sel.getRangeAt(0);
            var node = range.startContainer, rightMode_1 = false;
            var child = function (nd) {
                return rightMode_1 ? nd.lastChild : nd.firstChild;
            };
            if (dom_1.Dom.isTag(node, 'br') && sel.isCollapsed) {
                return node;
            }
            if (!dom_1.Dom.isText(node)) {
                node = range.startContainer.childNodes[range.startOffset];
                if (!node) {
                    node =
                        range.startContainer.childNodes[range.startOffset - 1];
                    rightMode_1 = true;
                }
                if (node && sel.isCollapsed && !dom_1.Dom.isText(node)) {
                    if (!rightMode_1 && dom_1.Dom.isText(node.previousSibling)) {
                        node = node.previousSibling;
                    }
                    else if (checkChild) {
                        var current = child(node);
                        while (current) {
                            if (current && dom_1.Dom.isText(current)) {
                                node = current;
                                break;
                            }
                            current = child(current);
                        }
                    }
                }
                if (node && !sel.isCollapsed && !dom_1.Dom.isText(node)) {
                    var leftChild = node, rightChild = node;
                    do {
                        leftChild = leftChild.firstChild;
                        rightChild = rightChild.lastChild;
                    } while (leftChild && rightChild && !dom_1.Dom.isText(leftChild));
                    if (leftChild === rightChild &&
                        leftChild &&
                        dom_1.Dom.isText(leftChild)) {
                        node = leftChild;
                    }
                }
            }
            if (node && dom_1.Dom.isOrContains(this.area, node)) {
                return node;
            }
        }
        return null;
    };
    Select.prototype.insertNode = function (node, insertCursorAfter, fireChange) {
        var _this = this;
        if (insertCursorAfter === void 0) { insertCursorAfter = true; }
        if (fireChange === void 0) { fireChange = true; }
        this.errorNode(node);
        this.j.e.fire('safeHTML', node);
        if (!this.isFocused() && this.j.isEditorMode()) {
            this.focus();
            this.restore();
        }
        var sel = this.sel;
        this.j.history.snapshot.transaction(function () {
            var _a;
            if (!_this.isCollapsed()) {
                _this.j.execCommand('Delete');
            }
            _this.j.e.fire('beforeInsertNode', node);
            if (sel && sel.rangeCount) {
                var range = sel.getRangeAt(0);
                if (dom_1.Dom.isOrContains(_this.area, range.commonAncestorContainer)) {
                    if (dom_1.Dom.isTag(range.startContainer, constants_1.INSEPARABLE_TAGS) &&
                        range.collapsed) {
                        (_a = range.startContainer.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(node, range.startContainer);
                    }
                    else {
                        dom_1.Dom.safeInsertNode(range, node);
                    }
                }
                else {
                    _this.area.appendChild(node);
                }
            }
            else {
                _this.area.appendChild(node);
            }
            if (insertCursorAfter) {
                if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
                    node.lastChild && _this.setCursorAfter(node.lastChild);
                }
                else {
                    _this.setCursorAfter(node);
                }
            }
        });
        if (fireChange && this.j.events) {
            this.j.__imdSynchronizeValues();
        }
        if (this.j.events) {
            this.j.e.fire('afterInsertNode', node);
        }
    };
    Select.prototype.insertHTML = function (html, insertCursorAfter) {
        if (insertCursorAfter === void 0) { insertCursorAfter = true; }
        if (html === '') {
            return;
        }
        var node = this.j.createInside.div(), fragment = this.j.createInside.fragment();
        var lastChild;
        if (!this.isFocused() && this.j.isEditorMode()) {
            this.focus();
            this.restore();
        }
        if (!dom_1.Dom.isNode(html)) {
            node.innerHTML = html.toString();
        }
        else {
            node.appendChild(html);
        }
        if (!this.j.isEditorMode() &&
            this.j.e.fire('insertHTML', node.innerHTML) === false) {
            return;
        }
        lastChild = node.lastChild;
        if (!lastChild) {
            return;
        }
        while (node.firstChild) {
            lastChild = node.firstChild;
            fragment.appendChild(node.firstChild);
        }
        this.insertNode(fragment.firstChild && fragment.firstChild === fragment.lastChild
            ? fragment.lastChild
            : fragment, false, false);
        if (insertCursorAfter) {
            if (lastChild) {
                this.setCursorAfter(lastChild);
            }
            else {
                this.setCursorIn(fragment);
            }
        }
        this.j.__imdSynchronizeValues();
    };
    Select.prototype.insertImage = function (url, styles, defaultWidth) {
        if (styles === void 0) { styles = null; }
        if (defaultWidth === void 0) { defaultWidth = null; }
        var image = (0, checker_1.isString)(url) ? this.j.createInside.element('img') : url;
        if ((0, checker_1.isString)(url)) {
            image.setAttribute('src', url);
        }
        if (defaultWidth != null) {
            var dw = defaultWidth.toString();
            if (dw &&
                'auto' !== dw &&
                String(dw).indexOf('px') < 0 &&
                String(dw).indexOf('%') < 0) {
                dw += 'px';
            }
            (0, helpers_1.call)(this.j.o.resizer.forImageChangeAttributes ? helpers_1.attr : helpers_1.css, image, 'width', dw);
        }
        if (styles && typeof styles === 'object') {
            (0, helpers_1.css)(image, styles);
        }
        var onload = function () {
            if (image.naturalHeight < image.offsetHeight ||
                image.naturalWidth < image.offsetWidth) {
                image.style.width = '';
                image.style.height = '';
            }
            image.removeEventListener('load', onload);
        };
        this.j.e.on(image, 'load', onload);
        if (image.complete) {
            onload();
        }
        this.insertNode(image);
        this.j.e.fire('afterInsertImage', image);
    };
    Select.prototype.eachSelection = function (callback) {
        var _this = this;
        var _a;
        var sel = this.sel;
        if (sel && sel.rangeCount) {
            var range = sel.getRangeAt(0);
            var root_1 = range.commonAncestorContainer;
            if (!dom_1.Dom.isHTMLElement(root_1)) {
                root_1 = root_1.parentElement;
            }
            var nodes_1 = [], startOffset = range.startOffset, length = root_1.childNodes.length, elementOffset = startOffset < length ? startOffset : length - 1;
            var start = range.startContainer === this.area
                ? root_1.childNodes[elementOffset]
                : range.startContainer, end_1 = range.endContainer === this.area
                ? root_1.childNodes[range.endOffset - 1]
                : range.endContainer;
            if (dom_1.Dom.isText(start) &&
                start === range.startContainer &&
                range.startOffset === ((_a = start.nodeValue) === null || _a === void 0 ? void 0 : _a.length) &&
                start.nextSibling) {
                start = start.nextSibling;
            }
            if (dom_1.Dom.isText(end_1) &&
                end_1 === range.endContainer &&
                range.endOffset === 0 &&
                end_1.previousSibling) {
                end_1 = end_1.previousSibling;
            }
            var checkElm_1 = function (node) {
                if (node &&
                    node !== root_1 &&
                    !dom_1.Dom.isEmptyTextNode(node) &&
                    !(0, checker_1.isMarker)(node)) {
                    nodes_1.push(node);
                }
            };
            checkElm_1(start);
            if (start !== end_1 && dom_1.Dom.isOrContains(root_1, start, true)) {
                dom_1.Dom.find(start, function (node) {
                    checkElm_1(node);
                    return (node === end_1 ||
                        (node && node.contains && node.contains(end_1)));
                }, root_1, true, false);
            }
            var forEvery_1 = function (current) {
                if (!dom_1.Dom.isOrContains(_this.j.editor, current, true)) {
                    return;
                }
                if (current.nodeName.match(/^(UL|OL)$/)) {
                    return (0, helpers_1.toArray)(current.childNodes).forEach(forEvery_1);
                }
                if (dom_1.Dom.isTag(current, 'li')) {
                    if (current.firstChild) {
                        current = current.firstChild;
                    }
                    else {
                        var currentB = _this.j.createInside.text(constants_1.INVISIBLE_SPACE);
                        current.appendChild(currentB);
                        current = currentB;
                    }
                }
                callback(current);
            };
            if (nodes_1.length === 0 && dom_1.Dom.isEmptyTextNode(start)) {
                nodes_1.push(start);
            }
            if (nodes_1.length === 0 && start.firstChild) {
                nodes_1.push(start.firstChild);
            }
            nodes_1.forEach(forEvery_1);
        }
    };
    Select.prototype.cursorInTheEdge = function (start, parentBlock, fake) {
        var _this = this;
        var _a, _b;
        if (fake === void 0) { fake = null; }
        var end = !start, range = (_a = this.sel) === null || _a === void 0 ? void 0 : _a.getRangeAt(0);
        fake !== null && fake !== void 0 ? fake : (fake = this.current(false));
        if (!range || !fake || !dom_1.Dom.isOrContains(parentBlock, fake, true)) {
            return null;
        }
        var container = start ? range.startContainer : range.endContainer;
        var offset = start ? range.startOffset : range.endOffset;
        var isSignificant = function (elm) {
            return Boolean(elm &&
                !dom_1.Dom.isTag(elm, 'br') &&
                !dom_1.Dom.isEmptyTextNode(elm) &&
                !dom_1.Dom.isTemporary(elm) &&
                !(dom_1.Dom.isElement(elm) &&
                    _this.j.e.fire('isInvisibleForCursor', elm) === true));
        };
        if (dom_1.Dom.isText(container)) {
            var text = ((_b = container.nodeValue) === null || _b === void 0 ? void 0 : _b.length) ? container.nodeValue : '';
            if (end && text.replace((0, constants_1.INVISIBLE_SPACE_REG_EXP_END)(), '').length > offset) {
                return false;
            }
            var inv = (0, constants_1.INVISIBLE_SPACE_REG_EXP_START)().exec(text);
            if (start &&
                ((inv && inv[0].length < offset) || (!inv && offset > 0))) {
                return false;
            }
        }
        else {
            var children = (0, helpers_1.toArray)(container.childNodes);
            if (end) {
                if (children.slice(offset).some(isSignificant)) {
                    return false;
                }
            }
            else {
                if (children.slice(0, offset).some(isSignificant)) {
                    return false;
                }
            }
        }
        var next = fake;
        while (next && next !== parentBlock) {
            var nextOne = dom_1.Dom.sibling(next, start);
            if (!nextOne) {
                next = next.parentNode;
                continue;
            }
            next = nextOne;
            if (next && isSignificant(next)) {
                return false;
            }
        }
        return true;
    };
    Select.prototype.cursorOnTheLeft = function (parentBlock, fake) {
        return this.cursorInTheEdge(true, parentBlock, fake);
    };
    Select.prototype.cursorOnTheRight = function (parentBlock, fake) {
        return this.cursorInTheEdge(false, parentBlock, fake);
    };
    Select.prototype.setCursorAfter = function (node) {
        return this.setCursorNearWith(node, false);
    };
    Select.prototype.setCursorBefore = function (node) {
        return this.setCursorNearWith(node, true);
    };
    Select.prototype.setCursorNearWith = function (node, inStart) {
        var _this = this;
        var _a, _b;
        this.errorNode(node);
        if (!dom_1.Dom.up(node, function (elm) {
            return elm === _this.area || (elm && elm.parentNode === _this.area);
        }, this.area)) {
            throw (0, helpers_1.error)('Node element must be in editor');
        }
        var range = this.createRange();
        var fakeNode = null;
        if (!dom_1.Dom.isText(node)) {
            fakeNode = this.j.createInside.text(consts.INVISIBLE_SPACE);
            inStart ? range.setStartBefore(node) : range.setEndAfter(node);
            range.collapse(inStart);
            dom_1.Dom.safeInsertNode(range, fakeNode);
            range.selectNode(fakeNode);
        }
        else {
            if (inStart) {
                range.setStart(node, 0);
            }
            else {
                range.setEnd(node, (_b = (_a = node.nodeValue) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);
            }
        }
        range.collapse(inStart);
        this.selectRange(range);
        return fakeNode;
    };
    Select.prototype.setCursorIn = function (node, inStart) {
        var _this = this;
        if (inStart === void 0) { inStart = false; }
        this.errorNode(node);
        if (!dom_1.Dom.up(node, function (elm) {
            return elm === _this.area || (elm && elm.parentNode === _this.area);
        }, this.area)) {
            throw (0, helpers_1.error)('Node element must be in editor');
        }
        var range = this.createRange();
        var start = node, last = node;
        do {
            if (dom_1.Dom.isText(start)) {
                break;
            }
            last = start;
            start = inStart ? start.firstChild : start.lastChild;
        } while (start);
        if (!start) {
            var fakeNode = this.j.createInside.text(consts.INVISIBLE_SPACE);
            if (!/^(img|br|input)$/i.test(last.nodeName)) {
                last.appendChild(fakeNode);
                last = fakeNode;
            }
            else {
                start = last;
            }
        }
        range.selectNodeContents(start || last);
        range.collapse(inStart);
        this.selectRange(range);
        return last;
    };
    Select.prototype.selectRange = function (range, focus) {
        if (focus === void 0) { focus = true; }
        var sel = this.sel;
        if (focus && !this.isFocused()) {
            this.focus();
        }
        if (sel) {
            sel.removeAllRanges();
            sel.addRange(range);
        }
        this.j.e.fire('changeSelection');
        return this;
    };
    Select.prototype.select = function (node, inward) {
        var _this = this;
        if (inward === void 0) { inward = false; }
        this.errorNode(node);
        if (!dom_1.Dom.up(node, function (elm) {
            return elm === _this.area || (elm && elm.parentNode === _this.area);
        }, this.area)) {
            throw (0, helpers_1.error)('Node element must be in editor');
        }
        var range = this.createRange();
        range[inward ? 'selectNodeContents' : 'selectNode'](node);
        return this.selectRange(range);
    };
    Object.defineProperty(Select.prototype, "html", {
        get: function () {
            var sel = this.sel;
            if (sel && sel.rangeCount > 0) {
                var range = sel.getRangeAt(0);
                var clonedSelection = range.cloneContents();
                var div = this.j.createInside.div();
                div.appendChild(clonedSelection);
                return div.innerHTML;
            }
            return '';
        },
        enumerable: false,
        configurable: true
    });
    Select.prototype.wrapInTagGen = function () {
        var font, _a, marker, font, elms, elms_1, elms_1_1, font, firstChild, lastChild, e_1_1;
        var e_1, _b;
        return tslib_1.__generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    if (!this.isCollapsed()) return [3, 2];
                    font = this.jodit.createInside.element('font', constants_1.INVISIBLE_SPACE);
                    this.insertNode(font, false, false);
                    _a = tslib_1.__read(this.markers, 1), marker = _a[0];
                    if (marker) {
                        font.appendChild(marker);
                    }
                    else {
                        this.setCursorIn(font);
                        this.save();
                    }
                    return [4, font];
                case 1:
                    _c.sent();
                    dom_1.Dom.unwrap(font);
                    return [2];
                case 2:
                    (0, helpers_1.$$)('*[style*=font-size]', this.area).forEach(function (elm) {
                        (0, helpers_1.attr)(elm, 'data-font-size', elm.style.fontSize.toString());
                        elm.style.removeProperty('font-size');
                    });
                    if (!this.isCollapsed()) {
                        this.j.nativeExecCommand('fontsize', false, '7');
                    }
                    else {
                        font = this.j.createInside.element('font');
                        (0, helpers_1.attr)(font, 'size', 7);
                        this.insertNode(font, false, false);
                    }
                    (0, helpers_1.$$)('*[data-font-size]', this.area).forEach(function (elm) {
                        var fontSize = (0, helpers_1.attr)(elm, 'data-font-size');
                        if (fontSize) {
                            elm.style.fontSize = fontSize;
                            (0, helpers_1.attr)(elm, 'data-font-size', null);
                        }
                    });
                    elms = (0, helpers_1.$$)('font[size="7"]', this.area);
                    _c.label = 3;
                case 3:
                    _c.trys.push([3, 8, 9, 10]);
                    elms_1 = tslib_1.__values(elms), elms_1_1 = elms_1.next();
                    _c.label = 4;
                case 4:
                    if (!!elms_1_1.done) return [3, 7];
                    font = elms_1_1.value;
                    firstChild = font.firstChild, lastChild = font.lastChild;
                    if (firstChild &&
                        firstChild === lastChild &&
                        (0, checker_1.isMarker)(firstChild)) {
                        dom_1.Dom.unwrap(font);
                        return [3, 6];
                    }
                    if (firstChild && (0, checker_1.isMarker)(firstChild)) {
                        dom_1.Dom.before(font, firstChild);
                    }
                    if (lastChild && (0, checker_1.isMarker)(lastChild)) {
                        dom_1.Dom.after(font, lastChild);
                    }
                    return [4, font];
                case 5:
                    _c.sent();
                    dom_1.Dom.unwrap(font);
                    _c.label = 6;
                case 6:
                    elms_1_1 = elms_1.next();
                    return [3, 4];
                case 7: return [3, 10];
                case 8:
                    e_1_1 = _c.sent();
                    e_1 = { error: e_1_1 };
                    return [3, 10];
                case 9:
                    try {
                        if (elms_1_1 && !elms_1_1.done && (_b = elms_1.return)) _b.call(elms_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7];
                case 10: return [2];
            }
        });
    };
    Select.prototype.wrapInTag = function (tagOrCallback) {
        var e_2, _a;
        var result = [];
        try {
            for (var _b = tslib_1.__values(this.wrapInTagGen()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var font = _c.value;
                try {
                    if (font.firstChild &&
                        font.firstChild === font.lastChild &&
                        (0, checker_1.isMarker)(font.firstChild)) {
                        continue;
                    }
                    if ((0, checker_1.isFunction)(tagOrCallback)) {
                        tagOrCallback(font);
                    }
                    else {
                        result.push(dom_1.Dom.replace(font, tagOrCallback, this.j.createInside));
                    }
                }
                finally {
                    var pn = font.parentNode;
                    if (pn) {
                        dom_1.Dom.unwrap(font);
                        if (dom_1.Dom.isEmpty(pn)) {
                            dom_1.Dom.unwrap(pn);
                        }
                    }
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return result;
    };
    Select.prototype.commitStyle = function (options) {
        void 0;
        var styleElm = new commit_style_1.CommitStyle(options);
        styleElm.apply(this.j);
    };
    Select.prototype.applyStyle = function (style, options) {
        if (options === void 0) { options = {}; }
        this.commitStyle(tslib_1.__assign({ style: style }, options));
    };
    Select.prototype.splitSelection = function (currentBox, edge) {
        if (!this.isCollapsed()) {
            return null;
        }
        var leftRange = this.createRange();
        var range = this.range;
        leftRange.setStartBefore(currentBox);
        var cursorOnTheRight = this.cursorOnTheRight(currentBox, edge);
        var cursorOnTheLeft = this.cursorOnTheLeft(currentBox, edge);
        var br = this.j.createInside.element('br'), prevFake = this.j.createInside.fake(), nextFake = prevFake.cloneNode();
        try {
            if (cursorOnTheRight || cursorOnTheLeft) {
                if (edge) {
                    dom_1.Dom.before(edge, br);
                }
                else {
                    dom_1.Dom.safeInsertNode(range, br);
                }
                var clearBR = function (start, getNext) {
                    var next = getNext(start);
                    while (next) {
                        var nextSib = getNext(next);
                        if (next &&
                            (dom_1.Dom.isTag(next, 'br') || dom_1.Dom.isEmptyTextNode(next))) {
                            dom_1.Dom.safeRemove(next);
                        }
                        else {
                            break;
                        }
                        next = nextSib;
                    }
                };
                clearBR(br, function (n) { return n.nextSibling; });
                clearBR(br, function (n) { return n.previousSibling; });
                dom_1.Dom.after(br, nextFake);
                dom_1.Dom.before(br, prevFake);
                if (cursorOnTheRight) {
                    leftRange.setEndBefore(br);
                    range.setEndBefore(br);
                }
                else {
                    leftRange.setEndAfter(br);
                    range.setEndAfter(br);
                }
            }
            else {
                leftRange.setEnd(range.startContainer, range.startOffset);
            }
            var fragment = leftRange.extractContents();
            var clearEmpties = function (node) {
                return dom_1.Dom.each(node, function (node) { return dom_1.Dom.isEmptyTextNode(node) && dom_1.Dom.safeRemove(node); });
            };
            void 0;
            try {
                clearEmpties(fragment);
                clearEmpties(currentBox);
                currentBox.parentNode.insertBefore(fragment, currentBox);
                if (!edge && cursorOnTheRight && (br === null || br === void 0 ? void 0 : br.parentNode)) {
                    var range_2 = this.createRange();
                    range_2.setStartBefore(br);
                    this.selectRange(range_2);
                }
            }
            catch (e) {
                if (false) {}
            }
            var fillFakeParent = function (fake) {
                var _a, _b, _c;
                if (((_a = fake === null || fake === void 0 ? void 0 : fake.parentNode) === null || _a === void 0 ? void 0 : _a.firstChild) === ((_b = fake === null || fake === void 0 ? void 0 : fake.parentNode) === null || _b === void 0 ? void 0 : _b.lastChild)) {
                    (_c = fake === null || fake === void 0 ? void 0 : fake.parentNode) === null || _c === void 0 ? void 0 : _c.appendChild(br.cloneNode());
                }
            };
            fillFakeParent(prevFake);
            fillFakeParent(nextFake);
        }
        finally {
            dom_1.Dom.safeRemove(prevFake);
            dom_1.Dom.safeRemove(nextFake);
        }
        return currentBox.previousElementSibling;
    };
    Select.prototype.expandSelection = function () {
        var _this = this;
        if (this.isCollapsed()) {
            return this;
        }
        var range = this.range, c = range.cloneRange();
        if (!dom_1.Dom.isOrContains(this.j.editor, range.commonAncestorContainer, true)) {
            return this;
        }
        var moveMaxEdgeFake = function (start) {
            var fake = _this.j.createInside.fake();
            var r = range.cloneRange();
            r.collapse(start);
            dom_1.Dom.safeInsertNode(r, fake);
            (0, helpers_2.moveTheNodeAlongTheEdgeOutward)(fake, start, _this.j.editor);
            return fake;
        };
        var leftFake = moveMaxEdgeFake(true);
        var rightFake = moveMaxEdgeFake(false);
        c.setStartAfter(leftFake);
        c.setEndBefore(rightFake);
        var leftBox = dom_1.Dom.findSibling(leftFake, false);
        var rightBox = dom_1.Dom.findSibling(rightFake, true);
        if (leftBox !== rightBox) {
            var rightInsideLeft = dom_1.Dom.isElement(leftBox) &&
                dom_1.Dom.isOrContains(leftBox, rightFake), leftInsideRight = !rightInsideLeft &&
                dom_1.Dom.isElement(rightBox) &&
                dom_1.Dom.isOrContains(rightBox, leftFake);
            if (rightInsideLeft || leftInsideRight) {
                var child = (rightInsideLeft ? leftBox : rightBox), container = child;
                while (dom_1.Dom.isElement(child)) {
                    child = rightInsideLeft
                        ? child.firstElementChild
                        : child.lastElementChild;
                    if (child) {
                        var isInside = rightInsideLeft
                            ? dom_1.Dom.isOrContains(child, rightFake)
                            : dom_1.Dom.isOrContains(child, leftFake);
                        if (isInside) {
                            container = child;
                        }
                    }
                }
                if (rightInsideLeft) {
                    c.setStart(container, 0);
                }
                else {
                    c.setEnd(container, container.childNodes.length);
                }
            }
        }
        this.selectRange(c);
        dom_1.Dom.safeRemove(leftFake, rightFake);
        return this;
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], Select.prototype, "createRange", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Select.prototype, "focus", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Select.prototype, "setCursorAfter", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Select.prototype, "setCursorBefore", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Select.prototype, "setCursorIn", null);
    return Select;
}());
exports.Select = Select;


/***/ }),

/***/ 77846:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extractSelectedPart = void 0;
var utils_1 = __webpack_require__(67309);
var trim_1 = __webpack_require__(33941);
var dom_1 = __webpack_require__(24263);
var is_marker_1 = __webpack_require__(37204);
function extractSelectedPart(wrapper, font, jodit) {
    var range = jodit.s.createRange();
    var leftEdge = (0, is_marker_1.isMarker)(font.previousSibling)
        ? font.previousSibling
        : font;
    range.setStartBefore(wrapper);
    range.setEndBefore(leftEdge);
    extractAndMove(wrapper, range, true);
    var rightEdge = (0, is_marker_1.isMarker)(font.nextSibling) ? font.nextSibling : font;
    range.setStartAfter(rightEdge);
    range.setEndAfter(wrapper);
    extractAndMove(wrapper, range, false);
}
exports.extractSelectedPart = extractSelectedPart;
function extractAndMove(wrapper, range, left) {
    var fragment = range.extractContents();
    if ((!fragment.textContent || !(0, trim_1.trim)(fragment.textContent).length) &&
        fragment.firstChild) {
        dom_1.Dom.unwrap(fragment.firstChild);
    }
    if (wrapper.parentNode) {
        (0, utils_1.call)(left ? dom_1.Dom.before : dom_1.Dom.after, wrapper, fragment);
    }
}


/***/ }),

/***/ 95901:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FiniteStateMachine = void 0;
var is_string_1 = __webpack_require__(24421);
var assert_1 = __webpack_require__(603);
var FiniteStateMachine = (function () {
    function FiniteStateMachine(state, transitions) {
        this.transitions = transitions;
        this.silent = true;
        this.__previewsStates = new Set();
        this.setState(state);
    }
    FiniteStateMachine.prototype.setState = function (state) {
        void 0;
        this.__previewsStates.add(state);
        this.__state = state;
    };
    FiniteStateMachine.prototype.getState = function () {
        return this.__state;
    };
    FiniteStateMachine.prototype.disableSilent = function () {
        this.silent = false;
    };
    FiniteStateMachine.prototype.dispatch = function (actionName, value) {
        var action = this.transitions[this.getState()][actionName];
        if (action) {
            var res = action.call(this, value);
            void 0;
            void 0;
            void 0;
            this.setState(res.next);
            if (false) {}
            return res;
        }
        throw new Error("invalid action: ".concat(this.getState(), ".").concat(actionName.toString()));
    };
    return FiniteStateMachine;
}());
exports.FiniteStateMachine = FiniteStateMachine;


/***/ }),

/***/ 65774:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getSuitChild = void 0;
var dom_1 = __webpack_require__(24263);
var is_normal_node_1 = __webpack_require__(63150);
var is_suit_element_1 = __webpack_require__(74477);
function getSuitChild(style, font) {
    var child = font.firstChild;
    while (child && !(0, is_normal_node_1.isNormalNode)(child)) {
        child = child.nextSibling;
        if (!child) {
            return null;
        }
    }
    if (child &&
        !dom_1.Dom.next(child, is_normal_node_1.isNormalNode, font) &&
        (0, is_suit_element_1.isSuitElement)(style, child, false)) {
        return child;
    }
    return null;
}
exports.getSuitChild = getSuitChild;


/***/ }),

/***/ 66277:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getSuitParent = void 0;
var dom_1 = __webpack_require__(24263);
var is_normal_node_1 = __webpack_require__(63150);
var is_suit_element_1 = __webpack_require__(74477);
function getSuitParent(style, node, root) {
    var parentNode = node.parentNode;
    if (parentNode === root ||
        !dom_1.Dom.isHTMLElement(parentNode) ||
        dom_1.Dom.next(node, is_normal_node_1.isNormalNode, parentNode) ||
        dom_1.Dom.prev(node, is_normal_node_1.isNormalNode, parentNode)) {
        return null;
    }
    if (style.isElementCommit &&
        style.elementIsBlock &&
        !dom_1.Dom.isBlock(parentNode)) {
        return getSuitParent(style, parentNode, root);
    }
    if ((0, is_suit_element_1.isSuitElement)(style, parentNode, false) &&
        (!dom_1.Dom.isBlock(parentNode) || style.elementIsBlock)) {
        return parentNode;
    }
    if (style.isElementCommit && !dom_1.Dom.isBlock(parentNode)) {
        return getSuitParent(style, parentNode, root);
    }
    return null;
}
exports.getSuitParent = getSuitParent;


/***/ }),

/***/ 18387:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasSameStyleKeys = exports.hasSameStyle = void 0;
var css_1 = __webpack_require__(26911);
var is_void_1 = __webpack_require__(24021);
var normalize_css_value_1 = __webpack_require__(49353);
var dom_1 = __webpack_require__(24263);
var assert_1 = __webpack_require__(52378);
function hasSameStyle(elm, rules) {
    return Boolean(!dom_1.Dom.isTag(elm, 'font') &&
        dom_1.Dom.isHTMLElement(elm) &&
        Object.keys(rules).every(function (property) {
            var value = (0, css_1.css)(elm, property, true);
            if (value === '' &&
                (rules[property] === '' || rules[property] == null)) {
                return true;
            }
            return (!(0, is_void_1.isVoid)(value) &&
                value !== '' &&
                !(0, is_void_1.isVoid)(rules[property]) &&
                (0, normalize_css_value_1.normalizeCssValue)(property, rules[property])
                    .toString()
                    .toLowerCase() === value.toString().toLowerCase());
        }));
}
exports.hasSameStyle = hasSameStyle;
var elm = document.createElement('div');
elm.style.color = 'red';
void 0;
void 0;
void 0;
function hasSameStyleKeys(elm, rules) {
    return Boolean(!dom_1.Dom.isTag(elm, 'font') &&
        dom_1.Dom.isHTMLElement(elm) &&
        Object.keys(rules).every(function (property) {
            var value = (0, css_1.css)(elm, property, true);
            return !(0, is_void_1.isVoid)(value);
        }));
}
exports.hasSameStyleKeys = hasSameStyleKeys;
void 0;
void 0;


/***/ }),

/***/ 66162:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(93217), exports);
tslib_1.__exportStar(__webpack_require__(11651), exports);
tslib_1.__exportStar(__webpack_require__(29271), exports);
tslib_1.__exportStar(__webpack_require__(18387), exports);
tslib_1.__exportStar(__webpack_require__(77846), exports);
tslib_1.__exportStar(__webpack_require__(95901), exports);
tslib_1.__exportStar(__webpack_require__(65774), exports);
tslib_1.__exportStar(__webpack_require__(66277), exports);
tslib_1.__exportStar(__webpack_require__(76991), exports);
tslib_1.__exportStar(__webpack_require__(47508), exports);
tslib_1.__exportStar(__webpack_require__(63150), exports);
tslib_1.__exportStar(__webpack_require__(74477), exports);
tslib_1.__exportStar(__webpack_require__(26707), exports);
tslib_1.__exportStar(__webpack_require__(8298), exports);
tslib_1.__exportStar(__webpack_require__(6278), exports);


/***/ }),

/***/ 76991:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isInsideInvisibleElement = void 0;
var dom_1 = __webpack_require__(24263);
function isInsideInvisibleElement(font, root) {
    return Boolean(dom_1.Dom.closest(font, ['style', 'script'], root));
}
exports.isInsideInvisibleElement = isInsideInvisibleElement;


/***/ }),

/***/ 63150:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNormalNode = void 0;
var dom_1 = __webpack_require__(24263);
var is_marker_1 = __webpack_require__(37204);
function isNormalNode(elm) {
    return Boolean(elm &&
        !dom_1.Dom.isEmptyTextNode(elm) &&
        !dom_1.Dom.isTemporary(elm) &&
        !(0, is_marker_1.isMarker)(elm));
}
exports.isNormalNode = isNormalNode;


/***/ }),

/***/ 47508:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.elementsEqualAttributes = exports.isSameAttributes = void 0;
var utils_1 = __webpack_require__(76502);
var object_size_1 = __webpack_require__(16492);
var assert_1 = __webpack_require__(52378);
var has_same_style_1 = __webpack_require__(18387);
function isSameAttributes(elm, attrs) {
    if (!elm.attributes.length && !(0, object_size_1.size)(attrs)) {
        return true;
    }
    if (!(0, object_size_1.size)(attrs)) {
        return true;
    }
    void 0;
    return Object.keys(attrs).every(function (key) {
        if (key === 'class') {
            return elm.classList.contains(attrs[key]);
        }
        if (key === 'style') {
            return (0, has_same_style_1.hasSameStyle)(elm, attrs[key]);
        }
        return (0, utils_1.attr)(elm, key) === attrs[key];
    });
}
exports.isSameAttributes = isSameAttributes;
function elementsEqualAttributes(elm1, elm2) {
    return (elm1.attributes.length === elm2.attributes.length &&
        Array.from(elm1.attributes).every(function (attr) {
            return elm2.hasAttribute(attr.name) &&
                elm2.getAttribute(attr.name) === attr.value;
        }));
}
exports.elementsEqualAttributes = elementsEqualAttributes;


/***/ }),

/***/ 74477:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSameStyleChild = exports.findSuitClosest = exports.isSuitElement = void 0;
var dom_1 = __webpack_require__(24263);
var is_normal_node_1 = __webpack_require__(63150);
var has_same_style_1 = __webpack_require__(18387);
function isSuitElement(commitStyle, elm, strict) {
    var _a;
    if (!elm) {
        return false;
    }
    var element = commitStyle.element, elementIsDefault = commitStyle.elementIsDefault, options = commitStyle.options;
    var elmHasSameStyle = Boolean(((_a = options.attributes) === null || _a === void 0 ? void 0 : _a.style) &&
        (0, has_same_style_1.hasSameStyle)(elm, options.attributes.style));
    var elmIsSame = elm.nodeName.toLowerCase() === element ||
        (dom_1.Dom.isTag(elm, ['ul', 'ol']) && commitStyle.elementIsList);
    if (((!elementIsDefault || !strict) && elmIsSame) ||
        (elmHasSameStyle && (0, is_normal_node_1.isNormalNode)(elm) && !commitStyle.elementIsList)) {
        return true;
    }
    return Boolean(!elmIsSame && !strict && elementIsDefault && dom_1.Dom.isInlineBlock(elm));
}
exports.isSuitElement = isSuitElement;
function findSuitClosest(commitStyle, element, root) {
    return dom_1.Dom.closest(element, function (node) { return isSuitElement(commitStyle, node, true); }, root);
}
exports.findSuitClosest = findSuitClosest;
function isSameStyleChild(commitStyle, elm) {
    var _a, _b;
    var element = commitStyle.element, options = commitStyle.options;
    if (!elm || !(0, is_normal_node_1.isNormalNode)(elm)) {
        return false;
    }
    var elmIsSame = elm.nodeName.toLowerCase() === element;
    var elmHasSameStyle = Boolean(((_a = options.attributes) === null || _a === void 0 ? void 0 : _a.style) &&
        (0, has_same_style_1.hasSameStyleKeys)(elm, (_b = options.attributes) === null || _b === void 0 ? void 0 : _b.style));
    return elmIsSame && elmHasSameStyle;
}
exports.isSameStyleChild = isSameStyleChild;


/***/ }),

/***/ 11651:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toggleOrderedList = void 0;
var dom_1 = __webpack_require__(24263);
var assert_1 = __webpack_require__(52378);
var extract_1 = __webpack_require__(77846);
var commit_style_1 = __webpack_require__(70851);
var toggle_attributes_1 = __webpack_require__(93217);
var api_1 = __webpack_require__(66162);
function toggleOrderedList(commitStyle, li, jodit, mode) {
    if (!li) {
        return mode;
    }
    var list = li.parentElement;
    if (!list) {
        return mode;
    }
    var result = jodit.e.fire("".concat(commit_style_1._PREFIX, "BeforeToggleList"), mode, commitStyle, list);
    if (result !== undefined) {
        return result;
    }
    var hook = jodit.e.fire.bind(jodit.e, "".concat(commit_style_1._PREFIX, "AfterToggleList"));
    if (mode !== commit_style_1.UNWRAP) {
        var isChangeMode = (0, toggle_attributes_1.toggleAttributes)(commitStyle, li.parentElement, jodit, commit_style_1.INITIAL, true) === commit_style_1.CHANGE;
        if (mode === commit_style_1.REPLACE ||
            isChangeMode ||
            list.tagName.toLowerCase() !== commitStyle.element) {
            var wrapper_1 = unwrapList(commit_style_1.REPLACE, list, li, jodit, commitStyle);
            var newList = (0, api_1.wrapList)(commitStyle, wrapper_1, jodit);
            hook(commit_style_1.REPLACE, newList, commitStyle);
            return commit_style_1.REPLACE;
        }
    }
    var wrapper = unwrapList(commit_style_1.UNWRAP, list, li, jodit, commitStyle);
    hook(commit_style_1.UNWRAP, wrapper, commitStyle);
    return commit_style_1.UNWRAP;
}
exports.toggleOrderedList = toggleOrderedList;
function unwrapList(mode, list, li, jodit, cs) {
    var result = jodit.e.fire("".concat(commit_style_1._PREFIX, "BeforeUnwrapList"), mode, list, cs);
    if (result) {
        void 0;
        return result;
    }
    (0, extract_1.extractSelectedPart)(list, li, jodit);
    void 0;
    dom_1.Dom.unwrap(li.parentElement);
    return dom_1.Dom.replace(li, jodit.o.enter, jodit.createInside);
}


/***/ }),

/***/ 29271:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.wrapList = void 0;
var dom_1 = __webpack_require__(64968);
var commit_style_1 = __webpack_require__(70851);
var api_1 = __webpack_require__(66162);
function wrapList(commitStyle, wrapper, jodit) {
    var result = jodit.e.fire("".concat(commit_style_1._PREFIX, "BeforeWrapList"), commit_style_1.REPLACE, wrapper, commitStyle);
    var newWrapper = result !== null && result !== void 0 ? result : dom_1.Dom.replace(wrapper, 'li', jodit.createInside);
    var prev = newWrapper.previousElementSibling;
    var next = newWrapper.nextElementSibling;
    var list = dom_1.Dom.isTag(prev, commitStyle.element) ? prev : null;
    list !== null && list !== void 0 ? list : (list = dom_1.Dom.isTag(next, commitStyle.element) ? next : null);
    if (!dom_1.Dom.isTag(list, ['ul', 'ol']) ||
        !(0, api_1.isSameAttributes)(list, commitStyle.options.attributes)) {
        list = jodit.createInside.element(commitStyle.element);
        (0, api_1.toggleAttributes)(commitStyle, list, jodit, commit_style_1.INITIAL);
        dom_1.Dom.before(newWrapper, list);
    }
    if (prev === list) {
        dom_1.Dom.append(list, newWrapper);
    }
    else {
        dom_1.Dom.prepend(list, newWrapper);
    }
    if (dom_1.Dom.isTag(list.nextElementSibling, commitStyle.element) &&
        (0, api_1.elementsEqualAttributes)(list, list.nextElementSibling)) {
        dom_1.Dom.append(list, Array.from(list.nextElementSibling.childNodes));
        dom_1.Dom.safeRemove(list.nextElementSibling);
    }
    jodit.e.fire("".concat(commit_style_1._PREFIX, "AfterWrapList"), commit_style_1.WRAP, list, commitStyle);
    return list;
}
exports.wrapList = wrapList;


/***/ }),

/***/ 93217:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toggleAttributes = void 0;
var utils_1 = __webpack_require__(76502);
var css_1 = __webpack_require__(26911);
var data_bind_1 = __webpack_require__(63122);
var kebab_case_1 = __webpack_require__(11278);
var normalize_css_value_1 = __webpack_require__(49353);
var object_size_1 = __webpack_require__(16492);
var dom_1 = __webpack_require__(24263);
var commit_style_1 = __webpack_require__(70851);
var global_1 = __webpack_require__(17332);
var checker_1 = __webpack_require__(10172);
var tak = 'toggleAttributes';
function toggleAttributes(commitStyle, elm, jodit, mode, dry) {
    if (dry === void 0) { dry = false; }
    if (!dry && commitStyle.isApplied(elm, tak)) {
        return mode;
    }
    !dry && commitStyle.setApplied(elm, tak);
    var attributes = commitStyle.options.attributes;
    if (attributes && (0, object_size_1.size)(attributes) > 0) {
        Object.keys(attributes).forEach(function (key) {
            var value = attributes[key];
            switch (key) {
                case 'style': {
                    mode = toggleStyle(commitStyle, jodit, value, elm, dry, mode);
                    break;
                }
                case 'class':
                    mode = toggleClass(jodit, value, elm, mode, dry);
                    break;
                default:
                    mode = toggleAttribute(jodit, value, elm, key, dry, mode);
            }
        });
    }
    return mode;
}
exports.toggleAttributes = toggleAttributes;
function toggleStyle(commitStyle, jodit, style, elm, dry, mode) {
    void 0;
    Object.keys(style).forEach(function (rule) {
        var inlineValue = elm.style.getPropertyValue((0, kebab_case_1.kebabCase)(rule));
        var newValue = style[rule];
        if (inlineValue === '' && newValue == null) {
            return;
        }
        if (getNativeCSSValue(jodit, elm, rule) ===
            (0, normalize_css_value_1.normalizeCssValue)(rule, newValue)) {
            if (!inlineValue) {
                return;
            }
            !dry && (0, css_1.css)(elm, rule, null);
            mode = commit_style_1.UNSET;
            mode = removeExtraStyleAttribute(commitStyle, elm, mode);
            return;
        }
        mode = commit_style_1.CHANGE;
        if (!dry) {
            (0, css_1.css)(elm, rule, newValue);
            mode = removeExtraStyleAttribute(commitStyle, elm, mode);
        }
    });
    return mode;
}
function toggleClass(jodit, value, elm, mode, dry) {
    void 0;
    var hook = jodit.e.fire.bind(jodit.e, "".concat(commit_style_1._PREFIX, "AfterToggleAttribute"));
    if (elm.classList.contains(value.toString())) {
        mode = commit_style_1.UNSET;
        if (!dry) {
            elm.classList.remove(value);
            if (elm.classList.length === 0) {
                (0, utils_1.attr)(elm, 'class', null);
                hook(mode, elm, 'class', null);
            }
        }
    }
    else {
        mode = commit_style_1.CHANGE;
        if (!dry) {
            elm.classList.add(value);
            hook(mode, elm, 'class', value);
        }
    }
    return mode;
}
function toggleAttribute(jodit, value, elm, key, dry, mode) {
    void 0;
    var hook = jodit.e.fire.bind(jodit.e, "".concat(commit_style_1._PREFIX, "AfterToggleAttribute"));
    if ((0, utils_1.attr)(elm, key) === value) {
        !dry && (0, utils_1.attr)(elm, key, null);
        mode = commit_style_1.UNSET;
        !dry && hook(mode, elm, key, value);
        return mode;
    }
    mode = commit_style_1.CHANGE;
    if (!dry) {
        (0, utils_1.attr)(elm, key, value);
        hook(mode, elm, key, value);
    }
    return mode;
}
function removeExtraStyleAttribute(commitStyle, elm, mode) {
    if (!(0, utils_1.attr)(elm, 'style')) {
        (0, utils_1.attr)(elm, 'style', null);
        if (elm.tagName.toLowerCase() === commitStyle.defaultTag) {
            dom_1.Dom.unwrap(elm);
            mode = commit_style_1.UNWRAP;
        }
    }
    return mode;
}
function getShadowRoot(jodit) {
    var _a;
    if ((0, data_bind_1.dataBind)(jodit, 'shadowRoot') !== undefined) {
        return (0, data_bind_1.dataBind)(jodit, 'shadowRoot');
    }
    var container = (0, global_1.getContainer)(jodit);
    var iframe = document.createElement('iframe');
    (0, css_1.css)(iframe, {
        width: 0,
        height: 0,
        position: 'absolute',
        border: 0
    });
    iframe.src = 'about:blank';
    container.appendChild(iframe);
    var doc = (_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document;
    var shadowRoot = !doc ? jodit.od.body : doc.body;
    (0, data_bind_1.dataBind)(jodit, 'shadowRoot', shadowRoot);
    return shadowRoot;
}
function getNativeCSSValue(jodit, elm, key) {
    var newElm = jodit.create.element(elm.tagName.toLowerCase());
    newElm.style.cssText = elm.style.cssText;
    var root = getShadowRoot(jodit);
    root.appendChild(newElm);
    var result = (0, css_1.css)(newElm, key);
    dom_1.Dom.safeRemove(newElm);
    return result;
}


/***/ }),

/***/ 26707:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.unwrapChildren = void 0;
var dom_1 = __webpack_require__(24263);
var helpers_1 = __webpack_require__(40332);
var has_same_style_1 = __webpack_require__(18387);
var is_suit_element_1 = __webpack_require__(74477);
function unwrapChildren(style, font) {
    var _a;
    var needUnwrap = [];
    var needChangeStyle = [];
    var firstElementSuit;
    var cssStyle = (_a = style.options.attributes) === null || _a === void 0 ? void 0 : _a.style;
    if (font.firstChild) {
        var gen = dom_1.Dom.eachGen(font);
        var item = gen.next();
        var _loop_1 = function () {
            var elm = item.value;
            if ((0, is_suit_element_1.isSuitElement)(style, elm, true) &&
                (!cssStyle || (0, has_same_style_1.hasSameStyleKeys)(elm, cssStyle))) {
                if (firstElementSuit === undefined) {
                    firstElementSuit = true;
                }
                needUnwrap.push(elm);
            }
            else if (cssStyle && (0, is_suit_element_1.isSameStyleChild)(style, elm)) {
                if (firstElementSuit === undefined) {
                    firstElementSuit = false;
                }
                needChangeStyle.push(function () {
                    (0, helpers_1.css)(elm, Object.keys(cssStyle).reduce(function (acc, key) {
                        acc[key] = null;
                        return acc;
                    }, {}));
                    if (!(0, helpers_1.attr)(elm, 'style')) {
                        (0, helpers_1.attr)(elm, 'style', null);
                    }
                    if (!(0, helpers_1.attr)(elm, 'style') &&
                        elm.nodeName.toLowerCase() === style.element) {
                        needUnwrap.push(elm);
                    }
                });
            }
            else if (!dom_1.Dom.isEmptyTextNode(elm)) {
                if (firstElementSuit === undefined) {
                    firstElementSuit = false;
                }
            }
            item = gen.next();
        };
        while (!item.done) {
            _loop_1();
        }
    }
    needChangeStyle.forEach(function (clb) { return clb(); });
    needUnwrap.forEach(dom_1.Dom.unwrap);
    return Boolean(firstElementSuit);
}
exports.unwrapChildren = unwrapChildren;


/***/ }),

/***/ 6278:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.wrapUnwrappedText = void 0;
var dom_1 = __webpack_require__(24263);
var is_marker_1 = __webpack_require__(37204);
function wrapUnwrappedText(style, elm, jodit) {
    var root = jodit.editor, ci = jodit.createInside, edge = function (n, key) {
        if (key === void 0) { key = 'previousSibling'; }
        var edgeNode = n, node = n;
        while (node && !(0, is_marker_1.isMarker)(node)) {
            if (dom_1.Dom.isTag(node, jodit.o.enter)) {
                break;
            }
            edgeNode = node;
            if (node[key]) {
                node = node[key];
            }
            else {
                node =
                    node.parentNode &&
                        !dom_1.Dom.isBlock(node.parentNode) &&
                        node.parentNode !== root
                        ? node.parentNode
                        : null;
            }
            if (dom_1.Dom.isBlock(node)) {
                break;
            }
        }
        return edgeNode;
    };
    var start = edge(elm), end = edge(elm, 'nextSibling');
    var range = jodit.s.createRange();
    range.setStartBefore(start);
    range.setEndAfter(end);
    var fragment = range.extractContents();
    var wrapper = ci.element(style.element);
    wrapper.appendChild(fragment);
    dom_1.Dom.safeInsertNode(range, wrapper);
    if (style.elementIsBlock) {
        if (dom_1.Dom.isEmpty(wrapper) &&
            !dom_1.Dom.isTag(wrapper.firstElementChild, 'br')) {
            wrapper.appendChild(ci.element('br'));
        }
    }
    return wrapper;
}
exports.wrapUnwrappedText = wrapUnwrappedText;


/***/ }),

/***/ 8298:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.wrap = void 0;
var dom_1 = __webpack_require__(64968);
var wrap_unwrapped_text_1 = __webpack_require__(6278);
var utils_1 = __webpack_require__(67309);
var wrap_list_1 = __webpack_require__(29271);
function wrap(commitStyle, font, jodit) {
    var wrapper = findOrCreateWrapper(commitStyle, font, jodit);
    return commitStyle.elementIsList
        ? (0, wrap_list_1.wrapList)(commitStyle, wrapper, jodit)
        : dom_1.Dom.replace(wrapper, commitStyle.element, jodit.createInside, true);
}
exports.wrap = wrap;
function findOrCreateWrapper(commitStyle, font, jodit) {
    if (commitStyle.elementIsBlock) {
        var box = dom_1.Dom.up(font, function (node) {
            return dom_1.Dom.isBlock(node) &&
                !dom_1.Dom.isTag(node, [
                    'td',
                    'th',
                    'tr',
                    'tbody',
                    'table',
                    'li',
                    'ul',
                    'ol'
                ]);
        }, jodit.editor);
        if (box) {
            return box;
        }
        return (0, wrap_unwrapped_text_1.wrapUnwrappedText)(commitStyle, font, jodit);
    }
    (0, utils_1.attr)(font, 'size', null);
    return font;
}


/***/ }),

/***/ 3097:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApplyStyle = void 0;
var normalize_node_1 = __webpack_require__(74504);
var api_1 = __webpack_require__(66162);
var transactions_1 = __webpack_require__(33090);
var commit_style_1 = __webpack_require__(70851);
function ApplyStyle(jodit, cs) {
    var sel = jodit.s, editor = jodit.editor;
    sel.save();
    (0, normalize_node_1.normalizeNode)(editor.firstChild);
    var gen = jodit.s.wrapInTagGen();
    var font = gen.next();
    var state = {
        mode: commit_style_1.INITIAL,
        element: font.value,
        next: transactions_1.states.START,
        jodit: jodit,
        style: cs
    };
    while (font && !font.done) {
        var machine = new api_1.FiniteStateMachine(transactions_1.states.START, transactions_1.transactions);
        state.element = font.value;
        while (machine.getState() !== transactions_1.states.END) {
            state = machine.dispatch('exec', state);
        }
        font = gen.next();
    }
    sel.restore();
}
exports.ApplyStyle = ApplyStyle;


/***/ }),

/***/ 70851:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommitStyle = exports._PREFIX = exports.REPLACE = exports.INITIAL = exports.UNSET = exports.CHANGE = exports.UNWRAP = exports.WRAP = void 0;
var constants_1 = __webpack_require__(86893);
var camel_case_1 = __webpack_require__(26596);
var apply_style_1 = __webpack_require__(3097);
exports.WRAP = 'wrap';
exports.UNWRAP = 'unwrap';
exports.CHANGE = 'change';
exports.UNSET = 'unset';
exports.INITIAL = 'initial';
exports.REPLACE = 'replace';
exports._PREFIX = 'commitStyle';
var CommitStyle = (function () {
    function CommitStyle(options) {
        this.options = options;
        this.__applyMap = new WeakMap();
        options.attributes = deprecatedUsing(this, options.attributes);
    }
    CommitStyle.prototype.isApplied = function (elm, key) {
        var data = this.__applyMap.get(elm);
        if (!data) {
            return false;
        }
        return data[key];
    };
    CommitStyle.prototype.setApplied = function (elm, key) {
        var _a;
        var data = (_a = this.__applyMap.get(elm)) !== null && _a !== void 0 ? _a : {};
        data[key] = true;
        this.__applyMap.set(elm, data);
    };
    Object.defineProperty(CommitStyle.prototype, "elementIsList", {
        get: function () {
            return Boolean(this.options.element && ['ul', 'ol'].includes(this.options.element));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommitStyle.prototype, "element", {
        get: function () {
            return this.options.element || this.defaultTag;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommitStyle.prototype, "elementIsBlock", {
        get: function () {
            return Boolean(this.options.element && constants_1.IS_BLOCK.test(this.options.element));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommitStyle.prototype, "isElementCommit", {
        get: function () {
            return Boolean(this.options.element &&
                this.options.element !== this.options.defaultTag);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommitStyle.prototype, "defaultTag", {
        get: function () {
            if (this.options.defaultTag) {
                return this.options.defaultTag;
            }
            return this.elementIsBlock ? 'p' : 'span';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommitStyle.prototype, "elementIsDefault", {
        get: function () {
            return this.element === this.defaultTag;
        },
        enumerable: false,
        configurable: true
    });
    CommitStyle.prototype.apply = function (jodit) {
        var hooks = this.options.hooks;
        try {
            hooks &&
                Object.keys(hooks).forEach(function (key) {
                    jodit.e.on((0, camel_case_1.camelCase)(exports._PREFIX + '_' + key), hooks[key]);
                });
            (0, apply_style_1.ApplyStyle)(jodit, this);
        }
        finally {
            hooks &&
                Object.keys(hooks).forEach(function (key) {
                    jodit.e.off((0, camel_case_1.camelCase)(exports._PREFIX + '_' + key), hooks[key]);
                });
            this.__applyMap = new WeakMap();
        }
    };
    return CommitStyle;
}());
exports.CommitStyle = CommitStyle;
function deprecatedUsing(commitStyle, attributes) {
    var _a = commitStyle.options, style = _a.style, className = _a.className;
    if (style) {
        if (attributes) {
            attributes.style = style;
        }
        else {
            attributes = { style: style };
        }
        delete commitStyle.options.style;
    }
    if (className) {
        if (attributes) {
            attributes['class'] = className;
        }
        else {
            attributes = { class: className };
        }
        delete commitStyle.options.className;
    }
    return attributes;
}


/***/ }),

/***/ 33090:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.transactions = exports.states = void 0;
var tslib_1 = __webpack_require__(20255);
var selection_1 = __webpack_require__(46325);
var api_1 = __webpack_require__(66162);
var dom_1 = __webpack_require__(64968);
var selection_2 = __webpack_require__(46325);
var assert_1 = __webpack_require__(52378);
exports.states = {
    START: 'START',
    ELEMENT: 'ELEMENT',
    UNWRAP: 'UNWRAP',
    UNWRAP_CHILDREN: 'UNWRAP_CHILDREN',
    CHANGE: 'CHANGE',
    REPLACE_DEFAULT: 'REPLACE_DEFAULT',
    LIST: 'LIST',
    TOGGLE_LIST: 'TOGGLE_LIST',
    WRAP: 'WRAP',
    EXTRACT: 'EXTRACT',
    END: 'END'
};
exports.transactions = (_a = {},
    _a[exports.states.START] = {
        exec: function (value) {
            var element = value.element, jodit = value.jodit, style = value.style, mode = value.mode;
            if ((0, api_1.isInsideInvisibleElement)(element, jodit.editor) ||
                dom_1.Dom.isEmptyContent(element)) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.END });
            }
            var elm = (0, api_1.getSuitParent)(style, element, jodit.editor) ||
                (0, api_1.getSuitChild)(style, element);
            if (elm) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.ELEMENT, element: elm });
            }
            var suit = (0, api_1.findSuitClosest)(style, element, jodit.editor);
            if (style.elementIsList && dom_1.Dom.isTag(suit, ['ul', 'ol'])) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.LIST });
            }
            if (suit) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.EXTRACT });
            }
            return tslib_1.__assign(tslib_1.__assign({}, value), { next: mode !== selection_2.UNWRAP ? exports.states.UNWRAP_CHILDREN : exports.states.END });
        }
    },
    _a[exports.states.LIST] = {
        exec: function (value) {
            var element = value.element, jodit = value.jodit, mode = value.mode;
            if (mode !== selection_2.INITIAL && mode !== selection_2.UNWRAP && mode !== selection_1.REPLACE) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.END });
            }
            var li = dom_1.Dom.closest(element, 'li', jodit.editor);
            if (!li) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.END });
            }
            var list = dom_1.Dom.closest(element, ['ul', 'ol'], jodit.editor);
            if (list) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { element: li, next: exports.states.TOGGLE_LIST });
            }
            return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.END });
        }
    },
    _a[exports.states.TOGGLE_LIST] = {
        exec: function (value) {
            return tslib_1.__assign(tslib_1.__assign({}, value), { mode: (0, api_1.toggleOrderedList)(value.style, value.element, value.jodit, value.mode), next: exports.states.END });
        }
    },
    _a[exports.states.EXTRACT] = {
        exec: function (value) {
            var element = value.element, jodit = value.jodit, style = value.style;
            var suit = (0, api_1.findSuitClosest)(style, element, jodit.editor);
            void 0;
            if (!style.elementIsBlock) {
                (0, api_1.extractSelectedPart)(suit, element, jodit);
            }
            return tslib_1.__assign(tslib_1.__assign({}, value), { element: suit, next: exports.states.ELEMENT });
        }
    },
    _a[exports.states.UNWRAP_CHILDREN] = {
        exec: function (value) {
            var element = value.element, style = value.style;
            if (!(0, api_1.unwrapChildren)(style, element)) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.WRAP });
            }
            return tslib_1.__assign(tslib_1.__assign({}, value), { mode: selection_2.UNWRAP, next: exports.states.END });
        }
    },
    _a[exports.states.WRAP] = {
        exec: function (value) {
            var element = value.element, jodit = value.jodit, style = value.style;
            var wrapper = (0, api_1.wrap)(style, element, jodit);
            return tslib_1.__assign(tslib_1.__assign({}, value), { next: style.elementIsList ? exports.states.END : exports.states.CHANGE, mode: selection_2.WRAP, element: wrapper });
        }
    },
    _a[exports.states.ELEMENT] = {
        exec: function (value) {
            var style = value.style, element = value.element, jodit = value.jodit;
            if ((0, api_1.toggleAttributes)(style, element, jodit, selection_2.INITIAL, true) !==
                selection_2.INITIAL) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.CHANGE });
            }
            if (!dom_1.Dom.isTag(element, style.element)) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.END });
            }
            return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.UNWRAP });
        }
    },
    _a[exports.states.CHANGE] = {
        exec: function (value) {
            var style = value.style, element = value.element, jodit = value.jodit, mode = value.mode;
            var newMode = (0, api_1.toggleAttributes)(style, element, jodit, value.mode);
            if (mode !== selection_2.WRAP &&
                newMode === selection_2.UNSET &&
                !element.attributes.length &&
                dom_1.Dom.isTag(element, style.element)) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.UNWRAP });
            }
            return tslib_1.__assign(tslib_1.__assign({}, value), { mode: newMode, next: exports.states.END });
        }
    },
    _a[exports.states.UNWRAP] = {
        exec: function (value) {
            if (value.element.attributes.length &&
                dom_1.Dom.isTag(value.element, value.style.element)) {
                return tslib_1.__assign(tslib_1.__assign({}, value), { next: exports.states.REPLACE_DEFAULT });
            }
            dom_1.Dom.unwrap(value.element);
            return tslib_1.__assign(tslib_1.__assign({}, value), { mode: selection_2.UNWRAP, next: exports.states.END });
        }
    },
    _a[exports.states.REPLACE_DEFAULT] = {
        exec: function (value) {
            dom_1.Dom.replace(value.element, value.style.defaultTag, value.jodit.createInside, true);
            return tslib_1.__assign(tslib_1.__assign({}, value), { mode: selection_1.REPLACE, next: exports.states.END });
        }
    },
    _a[exports.states.END] = {
        exec: function (value) {
            return value;
        }
    },
    _a);


/***/ }),

/***/ 75764:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LocalStorageProvider = exports.canUsePersistentStorage = void 0;
exports.canUsePersistentStorage = (function () {
    var canUse = function () {
        var tmpKey = '___Jodit___' + Math.random().toString();
        try {
            localStorage.setItem(tmpKey, '1');
            var result_1 = localStorage.getItem(tmpKey) === '1';
            localStorage.removeItem(tmpKey);
            return result_1;
        }
        catch (_a) { }
        return false;
    };
    var result;
    return function () {
        if (result === undefined) {
            result = canUse();
        }
        return result;
    };
})();
var LocalStorageProvider = (function () {
    function LocalStorageProvider(rootKey) {
        this.rootKey = rootKey;
    }
    LocalStorageProvider.prototype.set = function (key, value) {
        try {
            var buffer = localStorage.getItem(this.rootKey);
            var json = buffer ? JSON.parse(buffer) : {};
            json[key] = value;
            localStorage.setItem(this.rootKey, JSON.stringify(json));
        }
        catch (_a) { }
        return this;
    };
    LocalStorageProvider.prototype.delete = function (key) {
        try {
            localStorage.removeItem(this.rootKey);
        }
        catch (_a) { }
        return this;
    };
    LocalStorageProvider.prototype.get = function (key) {
        try {
            var buffer = localStorage.getItem(this.rootKey);
            var json = buffer ? JSON.parse(buffer) : {};
            return json[key] !== undefined ? json[key] : null;
        }
        catch (_a) { }
    };
    LocalStorageProvider.prototype.exists = function (key) {
        return this.get(key) != null;
    };
    LocalStorageProvider.prototype.clear = function () {
        try {
            localStorage.removeItem(this.rootKey);
        }
        catch (_a) { }
        return this;
    };
    return LocalStorageProvider;
}());
exports.LocalStorageProvider = LocalStorageProvider;


/***/ }),

/***/ 79905:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MemoryStorageProvider = void 0;
var MemoryStorageProvider = (function () {
    function MemoryStorageProvider() {
        this.data = new Map();
    }
    MemoryStorageProvider.prototype.set = function (key, value) {
        this.data.set(key, value);
        return this;
    };
    MemoryStorageProvider.prototype.delete = function (key) {
        this.data.delete(key);
        return this;
    };
    MemoryStorageProvider.prototype.get = function (key) {
        return this.data.get(key);
    };
    MemoryStorageProvider.prototype.exists = function (key) {
        return this.data.has(key);
    };
    MemoryStorageProvider.prototype.clear = function () {
        this.data.clear();
        return this;
    };
    return MemoryStorageProvider;
}());
exports.MemoryStorageProvider = MemoryStorageProvider;


/***/ }),

/***/ 77462:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(79905), exports);
tslib_1.__exportStar(__webpack_require__(75764), exports);
tslib_1.__exportStar(__webpack_require__(52015), exports);


/***/ }),

/***/ 52015:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Storage = exports.StorageKey = void 0;
var helpers_1 = __webpack_require__(40332);
var local_storage_provider_1 = __webpack_require__(75764);
var memory_storage_provider_1 = __webpack_require__(79905);
exports.StorageKey = 'Jodit_';
var Storage = (function () {
    function Storage(provider, suffix) {
        this.provider = provider;
        this.prefix = exports.StorageKey;
        if (suffix) {
            this.prefix += suffix;
        }
    }
    Storage.prototype.set = function (key, value) {
        this.provider.set((0, helpers_1.camelCase)(this.prefix + key), value);
        return this;
    };
    Storage.prototype.delete = function (key) {
        this.provider.delete((0, helpers_1.camelCase)(this.prefix + key));
        return this;
    };
    Storage.prototype.get = function (key) {
        return this.provider.get((0, helpers_1.camelCase)(this.prefix + key));
    };
    Storage.prototype.exists = function (key) {
        return this.provider.exists((0, helpers_1.camelCase)(this.prefix + key));
    };
    Storage.prototype.clear = function () {
        this.provider.clear();
        return this;
    };
    Storage.makeStorage = function (persistent, suffix) {
        if (persistent === void 0) { persistent = false; }
        var provider;
        if (persistent && (0, local_storage_provider_1.canUsePersistentStorage)()) {
            provider = new local_storage_provider_1.LocalStorageProvider(exports.StorageKey + suffix);
        }
        if (!provider) {
            provider = new memory_storage_provider_1.MemoryStorageProvider();
        }
        return new Storage(provider, suffix);
    };
    return Storage;
}());
exports.Storage = Storage;


/***/ }),

/***/ 59363:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Dlgs = void 0;
var tslib_1 = __webpack_require__(20255);
var modules_1 = __webpack_require__(87837);
var helpers_1 = __webpack_require__(40332);
var Dlgs = (function () {
    function Dlgs() {
    }
    Dlgs.prototype.dlg = function (options) {
        var dialog = new modules_1.Dialog(tslib_1.__assign({ language: this.o.language, shadowRoot: this.o.shadowRoot, ownerWindow: this.o.ownerWindow, defaultTimeout: this.o.defaultTimeout, theme: this.o.theme, globalFullSize: this.o.globalFullSize }, options));
        (0, helpers_1.markOwner)(this, dialog.container);
        dialog.parent = this;
        return dialog.bindDestruct(this);
    };
    Dlgs.prototype.confirm = function (msg, title, callback) {
        if ((0, helpers_1.isString)(title)) {
            title = this.i18n(title);
        }
        return modules_1.Confirm.call(this.dlg(), this.i18n(msg), title, callback);
    };
    Dlgs.prototype.prompt = function (msg, title, callback, placeholder, defaultValue) {
        if ((0, helpers_1.isString)(title)) {
            title = this.i18n(title);
        }
        if ((0, helpers_1.isString)(placeholder)) {
            placeholder = this.i18n(placeholder);
        }
        return modules_1.Prompt.call(this.dlg(), this.i18n(msg), title, callback, placeholder, defaultValue);
    };
    Dlgs.prototype.alert = function (msg, title, callback, className) {
        if ((0, helpers_1.isString)(msg)) {
            msg = this.i18n(msg);
        }
        if ((0, helpers_1.isString)(title)) {
            title = this.i18n(title);
        }
        return modules_1.Alert.call(this.dlg(), msg, title, callback, className);
    };
    return Dlgs;
}());
exports.Dlgs = Dlgs;


/***/ }),

/***/ 14089:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Elms = void 0;
var to_array_1 = __webpack_require__(1853);
var Elms = (function () {
    function Elms() {
    }
    Elms.prototype.getElm = function (elementName) {
        return this.container.querySelector(".".concat(this.getFullElName(elementName)));
    };
    Elms.prototype.getElms = function (elementName) {
        return (0, to_array_1.toArray)(this.container.querySelectorAll(".".concat(this.getFullElName(elementName))));
    };
    return Elms;
}());
exports.Elms = Elms;


/***/ }),

/***/ 59829:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(14089), exports);
tslib_1.__exportStar(__webpack_require__(41681), exports);
tslib_1.__exportStar(__webpack_require__(59363), exports);


/***/ }),

/***/ 41681:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Mods = void 0;
var to_array_1 = __webpack_require__(1853);
var is_void_1 = __webpack_require__(24021);
var Mods = (function () {
    function Mods() {
    }
    Mods.prototype.afterSetMod = function (name, value) { };
    Mods.prototype.setMod = function (name, value, container) {
        name = name.toLowerCase();
        if (this.mods[name] === value) {
            return this;
        }
        var mod = "".concat(this.componentName, "_").concat(name), cl = (container || this.container).classList;
        (0, to_array_1.toArray)(cl).forEach(function (className) {
            if (className.indexOf(mod) === 0) {
                cl.remove(className);
            }
        });
        !(0, is_void_1.isVoid)(value) &&
            value !== '' &&
            cl.add("".concat(mod, "_").concat(value.toString().toLowerCase()));
        this.mods[name] = value;
        this.afterSetMod(name, value);
        return this;
    };
    Mods.prototype.getMod = function (name) {
        var _a;
        return (_a = this.mods[name]) !== null && _a !== void 0 ? _a : null;
    };
    return Mods;
}());
exports.Mods = Mods;


/***/ }),

/***/ 96031:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Button = exports.UIButton = exports.UIButtonState = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(93330);
var element_1 = __webpack_require__(53929);
var dom_1 = __webpack_require__(24263);
var utils_1 = __webpack_require__(76502);
var is_string_1 = __webpack_require__(24421);
var is_function_1 = __webpack_require__(42096);
var icon_1 = __webpack_require__(77904);
var list_1 = __webpack_require__(47970);
var decorators_1 = __webpack_require__(43441);
var statuses_1 = __webpack_require__(29411);
var UIButtonState = function () { return ({
    size: 'middle',
    type: 'button',
    name: '',
    value: '',
    variant: 'initial',
    disabled: false,
    activated: false,
    icon: {
        name: 'empty',
        fill: '',
        iconURL: ''
    },
    tooltip: '',
    text: '',
    tabIndex: undefined
}); };
exports.UIButtonState = UIButtonState;
var UIButton = (function (_super) {
    tslib_1.__extends(UIButton, _super);
    function UIButton(jodit, state) {
        var _this = _super.call(this, jodit) || this;
        _this.isButton = true;
        _this.state = (0, exports.UIButtonState)();
        _this.actionHandlers = [];
        _this.updateSize();
        _this.onChangeSize();
        _this.onChangeStatus();
        if (state) {
            _this.hookStatus(statuses_1.STATUSES.ready, function () {
                _this.setState(state);
            });
        }
        return _this;
    }
    UIButton.prototype.className = function () {
        return 'UIButton';
    };
    UIButton.prototype.setState = function (state) {
        Object.assign(this.state, state);
        return this;
    };
    UIButton.prototype.onChangeSize = function () {
        this.setMod('size', this.state.size);
    };
    UIButton.prototype.onChangeType = function () {
        (0, utils_1.attr)(this.container, 'type', this.state.type);
    };
    UIButton.prototype.updateSize = function () {
        var pe = this.closest(list_1.UIList);
        if (pe) {
            this.state.size = pe.buttonSize;
            return;
        }
    };
    UIButton.prototype.onChangeStatus = function () {
        this.setMod('variant', this.state.variant);
    };
    UIButton.prototype.onChangeText = function () {
        this.text.textContent = this.jodit.i18n(this.state.text);
    };
    UIButton.prototype.onChangeTextSetMode = function () {
        this.setMod('text-icons', Boolean(this.state.text.trim().length));
    };
    UIButton.prototype.onChangeDisabled = function () {
        (0, utils_1.attr)(this.container, 'disabled', this.state.disabled || null);
    };
    UIButton.prototype.onChangeActivated = function () {
        (0, utils_1.attr)(this.container, 'aria-pressed', this.state.activated);
    };
    UIButton.prototype.onChangeName = function () {
        this.container.classList.add("".concat(this.componentName, "_").concat(this.clearName(this.state.name)));
        this.name = this.state.name;
        (0, utils_1.attr)(this.container, 'data-ref', this.state.name);
        (0, utils_1.attr)(this.container, 'ref', this.state.name);
    };
    UIButton.prototype.onChangeTooltip = function () {
        if (this.get('j.o.useNativeTooltip')) {
            (0, utils_1.attr)(this.container, 'title', this.state.tooltip);
        }
        (0, utils_1.attr)(this.container, 'aria-label', this.state.tooltip);
    };
    UIButton.prototype.onChangeTabIndex = function () {
        (0, utils_1.attr)(this.container, 'tabindex', this.state.tabIndex);
    };
    UIButton.prototype.onChangeIcon = function () {
        var textIcons = this.get('j.o.textIcons');
        if (textIcons === true ||
            ((0, is_function_1.isFunction)(textIcons) && textIcons(this.state.name))) {
            return;
        }
        dom_1.Dom.detach(this.icon);
        var iconElement = icon_1.Icon.makeIcon(this.j, this.state.icon);
        iconElement && this.icon.appendChild(iconElement);
    };
    UIButton.prototype.focus = function () {
        this.container.focus();
    };
    UIButton.prototype.isFocused = function () {
        var activeElement = this.od.activeElement;
        return Boolean(activeElement && dom_1.Dom.isOrContains(this.container, activeElement));
    };
    UIButton.prototype.createContainer = function () {
        var cn = this.componentName;
        var button = this.j.c.element('button', {
            class: cn,
            type: 'button',
            role: 'button',
            ariaPressed: false
        });
        this.icon = this.j.c.span(cn + '__icon');
        this.text = this.j.c.span(cn + '__text');
        button.appendChild(this.icon);
        button.appendChild(this.text);
        this.j.e.on(button, 'click', this.onActionFire);
        return button;
    };
    UIButton.prototype.destruct = function () {
        this.j.e.off(this.container);
        return _super.prototype.destruct.call(this);
    };
    UIButton.prototype.onAction = function (callback) {
        this.actionHandlers.push(callback);
        return this;
    };
    UIButton.prototype.onActionFire = function (e) {
        var _this = this;
        e.buffer = {
            actionTrigger: this
        };
        this.actionHandlers.forEach(function (callback) { return callback.call(_this, e); });
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.size')
    ], UIButton.prototype, "onChangeSize", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.type')
    ], UIButton.prototype, "onChangeType", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('parentElement')
    ], UIButton.prototype, "updateSize", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.variant')
    ], UIButton.prototype, "onChangeStatus", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.text')
    ], UIButton.prototype, "onChangeText", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.text')
    ], UIButton.prototype, "onChangeTextSetMode", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.disabled')
    ], UIButton.prototype, "onChangeDisabled", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.activated')
    ], UIButton.prototype, "onChangeActivated", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.name')
    ], UIButton.prototype, "onChangeName", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.tooltip')
    ], UIButton.prototype, "onChangeTooltip", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.tabIndex')
    ], UIButton.prototype, "onChangeTabIndex", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.icon')
    ], UIButton.prototype, "onChangeIcon", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], UIButton.prototype, "onActionFire", null);
    UIButton = tslib_1.__decorate([
        decorators_1.component
    ], UIButton);
    return UIButton;
}(element_1.UIElement));
exports.UIButton = UIButton;
function Button(jodit, stateOrText, text, variant) {
    var button = new UIButton(jodit);
    button.state.tabIndex = jodit.o.allowTabNavigation ? 0 : -1;
    if ((0, is_string_1.isString)(stateOrText)) {
        button.state.icon.name = stateOrText;
        button.state.name = stateOrText;
        if (variant) {
            button.state.variant = variant;
        }
        if (text) {
            button.state.text = text;
        }
    }
    else {
        button.setState(stateOrText);
    }
    return button;
}
exports.Button = Button;


/***/ }),

/***/ 67252:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UIButtonGroup = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(45066);
var group_1 = __webpack_require__(61479);
var component_1 = __webpack_require__(11441);
var button_1 = __webpack_require__(96031);
var assert_1 = __webpack_require__(52378);
var UIButtonGroup = (function (_super) {
    tslib_1.__extends(UIButtonGroup, _super);
    function UIButtonGroup(jodit, options) {
        if (options === void 0) { options = {
            radio: true
        }; }
        var _this = this;
        var _a, _b;
        _this = _super.call(this, jodit, (_a = options.options) === null || _a === void 0 ? void 0 : _a.map(function (opt) {
            var btn = new button_1.UIButton(jodit, {
                text: opt.text,
                value: opt.value,
                variant: 'primary'
            });
            btn.onAction(function () {
                _this.select(opt.value);
            });
            return btn;
        }), options) || this;
        _this.options = options;
        _this.select((_b = options.value) !== null && _b !== void 0 ? _b : 0);
        return _this;
    }
    UIButtonGroup.prototype.className = function () {
        return 'UIButtonGroup';
    };
    UIButtonGroup.prototype.render = function (options) {
        return "<div>\n\t\t\t<div class=\"&__label\">~".concat(options.label, "~</div>\n\t\t\t<div class=\"&__options\"></div>\n\t\t</div>");
    };
    UIButtonGroup.prototype.appendChildToContainer = function (childContainer) {
        var options = this.getElm('options');
        void 0;
        options.appendChild(childContainer);
    };
    UIButtonGroup.prototype.select = function (indexOrValue) {
        var _this = this;
        var _a, _b;
        this.elements.forEach(function (elm, index) {
            if (index === indexOrValue || elm.state.value === indexOrValue) {
                elm.state.activated = true;
            }
            else if (_this.options.radio) {
                elm.state.activated = false;
            }
        });
        var result = this.elements
            .filter(function (elm) { return elm.state.activated; })
            .map(function (elm) { return ({
            text: elm.state.text,
            value: elm.state.value
        }); });
        this.jodit.e.fire(this, 'select', result);
        (_b = (_a = this.options).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, result);
    };
    UIButtonGroup = tslib_1.__decorate([
        component_1.component
    ], UIButtonGroup);
    return UIButtonGroup;
}(group_1.UIGroup));
exports.UIButtonGroup = UIButtonGroup;


/***/ }),

/***/ 96516:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(96031), exports);
tslib_1.__exportStar(__webpack_require__(67252), exports);
tslib_1.__exportStar(__webpack_require__(33627), exports);


/***/ }),

/***/ 33627:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UITooltip = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(99895);
var helpers_1 = __webpack_require__(40332);
var global_1 = __webpack_require__(17332);
var decorators_1 = __webpack_require__(43441);
var element_1 = __webpack_require__(53929);
var UITooltip = (function (_super) {
    tslib_1.__extends(UITooltip, _super);
    function UITooltip(view) {
        var _this = _super.call(this, view) || this;
        _this.__isOpened = false;
        _this.__useCount = 1;
        _this.__delayShowTimeout = 0;
        (0, global_1.getContainer)(view, UITooltip).appendChild(_this.container);
        var timeout = 0;
        view.e
            .off('.tooltip')
            .on('showTooltip.tooltip', function (getPoint, content) {
            view.async.clearTimeout(timeout);
            _this.__open(getPoint, content);
        })
            .on('delayShowTooltip.tooltip', _this.__delayOpen)
            .on('escape.tooltip', _this.__close)
            .on('hideTooltip.tooltip change.tooltip scroll.tooltip changePlace.tooltip hidePopup.tooltip closeAllPopups.tooltip', function () {
            _this.j.async.clearTimeout(_this.__delayShowTimeout);
            timeout = view.async.setTimeout(_this.__close, _this.j.defaultTimeout);
        });
        return _this;
    }
    UITooltip.prototype.className = function () {
        return 'UITooltip';
    };
    UITooltip.make = function (view) {
        var instance = (0, helpers_1.dataBind)(view, 'ui-tooltip');
        if (instance) {
            instance.__useCount += 1;
            return instance;
        }
        instance = new UITooltip(view);
        (0, helpers_1.dataBind)(view, 'ui-tooltip', instance);
        return instance;
    };
    UITooltip.prototype.__delayOpen = function (getPoint, content) {
        var _this = this;
        var to = this.j.o.showTooltipDelay || this.j.defaultTimeout;
        this.j.async.clearTimeout(this.__delayShowTimeout);
        this.__delayShowTimeout = this.j.async.setTimeout(function () { return _this.__open(getPoint, content); }, {
            timeout: to,
            label: 'tooltip'
        });
    };
    UITooltip.prototype.__open = function (getPoint, content) {
        this.setMod('visible', true);
        this.container.innerHTML = content;
        this.__isOpened = true;
        this.__setPosition(getPoint);
    };
    UITooltip.prototype.__setPosition = function (getPoint) {
        var point = getPoint();
        (0, helpers_1.css)(this.container, {
            left: point.x,
            top: point.y
        });
    };
    UITooltip.prototype.__close = function () {
        this.j.async.clearTimeout(this.__delayShowTimeout);
        if (this.__isOpened) {
            this.__isOpened = false;
            this.setMod('visible', false);
            (0, helpers_1.css)(this.container, {
                left: -5000
            });
        }
    };
    UITooltip.prototype.destruct = function () {
        var _a;
        this.__useCount--;
        if (!this.__useCount) {
            (_a = this.j) === null || _a === void 0 ? void 0 : _a.e.off('.tooltip');
            this.__close();
            _super.prototype.destruct.call(this);
        }
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], UITooltip.prototype, "__delayOpen", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], UITooltip.prototype, "__close", null);
    return UITooltip;
}(element_1.UIElement));
exports.UITooltip = UITooltip;


/***/ }),

/***/ 53929:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UIElement = void 0;
var tslib_1 = __webpack_require__(20255);
var component_1 = __webpack_require__(56562);
var dom_1 = __webpack_require__(24263);
var traits_1 = __webpack_require__(59829);
var is_string_1 = __webpack_require__(24421);
var icon_1 = __webpack_require__(77904);
var decorators_1 = __webpack_require__(43441);
var UIElement = (function (_super) {
    tslib_1.__extends(UIElement, _super);
    function UIElement(jodit, options) {
        var _this = _super.call(this, jodit) || this;
        _this.name = '';
        _this.__parentElement = null;
        _this.mods = {};
        _this.container = _this.createContainer(options);
        Object.defineProperty(_this.container, 'component', {
            value: _this,
            configurable: true
        });
        return _this;
    }
    UIElement_1 = UIElement;
    Object.defineProperty(UIElement.prototype, "parentElement", {
        get: function () {
            return this.__parentElement;
        },
        set: function (parentElement) {
            var _this = this;
            this.__parentElement = parentElement;
            if (parentElement) {
                parentElement.hookStatus('beforeDestruct', function () { return _this.destruct(); });
            }
            this.updateParentElement(this);
        },
        enumerable: false,
        configurable: true
    });
    UIElement.prototype.bubble = function (callback) {
        var parent = this.parentElement;
        while (parent) {
            callback(parent);
            parent = parent.parentElement;
        }
        return this;
    };
    UIElement.prototype.updateParentElement = function (target) {
        var _a;
        (_a = this.__parentElement) === null || _a === void 0 ? void 0 : _a.updateParentElement(target);
        return this;
    };
    UIElement.prototype.get = function (chain, obj) {
        return _super.prototype.get.call(this, chain, obj) || this.getElm(chain);
    };
    UIElement.prototype.closest = function (type) {
        var c = typeof type === 'object'
            ? function (pe) { return pe === type; }
            : function (pe) { return component_1.Component.isInstanceOf(pe, type); };
        var pe = this.__parentElement;
        while (pe) {
            if (c(pe)) {
                return pe;
            }
            if (!pe.parentElement && pe.container.parentElement) {
                pe = UIElement_1.closestElement(pe.container.parentElement, UIElement_1);
            }
            else {
                pe = pe.parentElement;
            }
        }
        return null;
    };
    UIElement.closestElement = function (node, type) {
        var elm = dom_1.Dom.up(node, function (elm) {
            if (elm) {
                var component = elm.component;
                return component && component_1.Component.isInstanceOf(component, type);
            }
            return false;
        });
        return elm ? elm === null || elm === void 0 ? void 0 : elm.component : null;
    };
    UIElement.prototype.update = function () {
    };
    UIElement.prototype.appendTo = function (element) {
        element.appendChild(this.container);
        return this;
    };
    UIElement.prototype.clearName = function (name) {
        return name.replace(/[^a-zA-Z0-9]/g, '_');
    };
    UIElement.prototype.render = function (options) {
        return this.j.c.div(this.componentName);
    };
    UIElement.prototype.createContainer = function (options) {
        var result = this.render(options);
        if ((0, is_string_1.isString)(result)) {
            var elm = this.parseTemplate(result);
            elm.classList.add(this.componentName);
            return elm;
        }
        return result;
    };
    UIElement.prototype.parseTemplate = function (result) {
        var _this = this;
        return this.j.c.fromHTML(result
            .replace(/\*([^*]+?)\*/g, function (_, name) { return icon_1.Icon.get(name) || ''; })
            .replace(/&__/g, this.componentName + '__')
            .replace(/~([^~]+?)~/g, function (_, s) { return _this.i18n(s); }));
    };
    UIElement.prototype.destruct = function () {
        dom_1.Dom.safeRemove(this.container);
        this.parentElement = null;
        return _super.prototype.destruct.call(this);
    };
    var UIElement_1;
    UIElement = UIElement_1 = tslib_1.__decorate([
        (0, decorators_1.derive)(traits_1.Mods, traits_1.Elms)
    ], UIElement);
    return UIElement;
}(component_1.ViewComponent));
exports.UIElement = UIElement;


/***/ }),

/***/ 38318:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UIBlock = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(87682);
var group_1 = __webpack_require__(61479);
var utils_1 = __webpack_require__(76502);
var component_1 = __webpack_require__(11441);
var UIBlock = (function (_super) {
    tslib_1.__extends(UIBlock, _super);
    function UIBlock(jodit, elements, options) {
        if (options === void 0) { options = {
            align: 'left'
        }; }
        var _this = _super.call(this, jodit, elements) || this;
        _this.options = options;
        _this.setMod('align', _this.options.align || 'left');
        _this.setMod('width', _this.options.width || '');
        _this.options.mod && _this.setMod(_this.options.mod, true);
        _this.options.className &&
            _this.container.classList.add(_this.options.className);
        (0, utils_1.attr)(_this.container, 'data-ref', options.ref);
        (0, utils_1.attr)(_this.container, 'ref', options.ref);
        return _this;
    }
    UIBlock.prototype.className = function () {
        return 'UIBlock';
    };
    UIBlock = tslib_1.__decorate([
        component_1.component
    ], UIBlock);
    return UIBlock;
}(group_1.UIGroup));
exports.UIBlock = UIBlock;


/***/ }),

/***/ 26207:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UIForm = void 0;
var tslib_1 = __webpack_require__(20255);
var group_1 = __webpack_require__(61479);
var input_1 = __webpack_require__(30194);
var select_1 = __webpack_require__(75840);
var utils_1 = __webpack_require__(76502);
var component_1 = __webpack_require__(11441);
var component_2 = __webpack_require__(45113);
var UIForm = (function (_super) {
    tslib_1.__extends(UIForm, _super);
    function UIForm() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        var _a, _b;
        _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(args), false)) || this;
        if ((_a = _this.options) === null || _a === void 0 ? void 0 : _a.className) {
            _this.container.classList.add((_b = _this.options) === null || _b === void 0 ? void 0 : _b.className);
        }
        return _this;
    }
    UIForm.prototype.className = function () {
        return 'UIForm';
    };
    UIForm.prototype.submit = function () {
        this.j.e.fire(this.container, 'submit');
    };
    UIForm.prototype.validate = function () {
        var e_1, _a, e_2, _b;
        var inputs = this.allChildren.filter(function (elm) {
            return component_2.Component.isInstanceOf(elm, input_1.UIInput);
        });
        try {
            for (var inputs_1 = tslib_1.__values(inputs), inputs_1_1 = inputs_1.next(); !inputs_1_1.done; inputs_1_1 = inputs_1.next()) {
                var input = inputs_1_1.value;
                if (!input.validate()) {
                    return false;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (inputs_1_1 && !inputs_1_1.done && (_a = inputs_1.return)) _a.call(inputs_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var selects = this.allChildren.filter(function (elm) {
            return component_2.Component.isInstanceOf(elm, select_1.UISelect);
        });
        try {
            for (var selects_1 = tslib_1.__values(selects), selects_1_1 = selects_1.next(); !selects_1_1.done; selects_1_1 = selects_1.next()) {
                var select = selects_1_1.value;
                if (!select.validate()) {
                    return false;
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (selects_1_1 && !selects_1_1.done && (_b = selects_1.return)) _b.call(selects_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return true;
    };
    UIForm.prototype.onSubmit = function (handler) {
        var _this = this;
        this.j.e.on(this.container, 'submit', function () {
            var inputs = _this.allChildren.filter(function (elm) {
                return component_2.Component.isInstanceOf(elm, input_1.UIInput);
            });
            if (!_this.validate()) {
                return false;
            }
            handler(inputs.reduce(function (res, item) {
                res[item.state.name] = item.value;
                return res;
            }, {}));
            return false;
        });
    };
    UIForm.prototype.createContainer = function () {
        var form = this.j.c.element('form');
        form.classList.add(this.componentName);
        (0, utils_1.attr)(form, 'dir', this.j.o.direction || 'auto');
        return form;
    };
    UIForm = tslib_1.__decorate([
        component_1.component
    ], UIForm);
    return UIForm;
}(group_1.UIGroup));
exports.UIForm = UIForm;


/***/ }),

/***/ 95963:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(26207), exports);
tslib_1.__exportStar(__webpack_require__(63034), exports);
tslib_1.__exportStar(__webpack_require__(38318), exports);


/***/ }),

/***/ 21639:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UITextArea = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(50905);
var input_1 = __webpack_require__(30194);
var component_1 = __webpack_require__(11441);
var UITextArea = (function (_super) {
    tslib_1.__extends(UITextArea, _super);
    function UITextArea(jodit, state) {
        var _this = _super.call(this, jodit, state) || this;
        _this.state = tslib_1.__assign({}, UITextArea_1.defaultState);
        Object.assign(_this.state, state);
        if (_this.state.resizable === false) {
            _this.nativeInput.style.resize = 'none';
        }
        return _this;
    }
    UITextArea_1 = UITextArea;
    UITextArea.prototype.className = function () {
        return 'UITextArea';
    };
    UITextArea.prototype.createContainer = function (options) {
        this.nativeInput = this.j.create.element('textarea');
        return _super.prototype.createContainer.call(this, options);
    };
    var UITextArea_1;
    UITextArea.defaultState = tslib_1.__assign(tslib_1.__assign({}, input_1.UIInput.defaultState), { size: 5, resizable: true });
    UITextArea = UITextArea_1 = tslib_1.__decorate([
        component_1.component
    ], UITextArea);
    return UITextArea;
}(input_1.UIInput));
exports.UITextArea = UITextArea;


/***/ }),

/***/ 63747:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UICheckbox = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(70446);
var input_1 = __webpack_require__(30194);
var decorators_1 = __webpack_require__(43441);
var dom_1 = __webpack_require__(24263);
var UICheckbox = (function (_super) {
    tslib_1.__extends(UICheckbox, _super);
    function UICheckbox(jodit, options) {
        var _this = _super.call(this, jodit, tslib_1.__assign(tslib_1.__assign({}, options), { type: 'checkbox' })) || this;
        _this.state = tslib_1.__assign({}, UICheckbox_1.defaultState);
        Object.assign(_this.state, options);
        return _this;
    }
    UICheckbox_1 = UICheckbox;
    UICheckbox.prototype.className = function () {
        return 'UICheckbox';
    };
    UICheckbox.prototype.render = function () {
        return this.j.c.element('label', {
            className: this.componentName
        });
    };
    UICheckbox.prototype.onChangeChecked = function () {
        this.value = this.state.checked.toString();
        this.nativeInput.checked = this.state.checked;
        this.setMod('checked', this.state.checked);
    };
    UICheckbox.prototype.onChangeNativeCheckBox = function () {
        this.state.checked = this.nativeInput.checked;
    };
    UICheckbox.prototype.onChangeSwitch = function () {
        this.setMod('switch', this.state.switch);
        var slider = this.getElm('switch-slider');
        if (this.state.switch) {
            if (!slider) {
                slider = this.j.c.div(this.getFullElName('switch-slider'));
            }
            dom_1.Dom.after(this.nativeInput, slider);
        }
        else {
            dom_1.Dom.safeRemove(slider);
        }
    };
    var UICheckbox_1;
    UICheckbox.defaultState = tslib_1.__assign(tslib_1.__assign({}, input_1.UIInput.defaultState), { checked: false, switch: false });
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.checked'),
        (0, decorators_1.hook)('ready')
    ], UICheckbox.prototype, "onChangeChecked", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('nativeInput:change')
    ], UICheckbox.prototype, "onChangeNativeCheckBox", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.switch'),
        (0, decorators_1.hook)('ready')
    ], UICheckbox.prototype, "onChangeSwitch", null);
    UICheckbox = UICheckbox_1 = tslib_1.__decorate([
        decorators_1.component
    ], UICheckbox);
    return UICheckbox;
}(input_1.UIInput));
exports.UICheckbox = UICheckbox;


/***/ }),

/***/ 41374:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UIFileInput = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(18984);
var input_1 = __webpack_require__(30194);
var component_1 = __webpack_require__(11441);
var button_1 = __webpack_require__(96031);
var UIFileInput = (function (_super) {
    tslib_1.__extends(UIFileInput, _super);
    function UIFileInput(jodit, options) {
        var _this = _super.call(this, jodit, tslib_1.__assign({ type: 'file' }, options)) || this;
        _this.state = tslib_1.__assign(tslib_1.__assign({}, input_1.UIInput.defaultState), { type: 'file', onlyImages: true });
        return _this;
    }
    UIFileInput.prototype.className = function () {
        return 'UIFileInput';
    };
    UIFileInput.prototype.createContainer = function (options) {
        this.button = new button_1.UIButton(this.j, {
            icon: {
                name: 'plus'
            }
        });
        var container = this.button.container;
        if (!this.nativeInput) {
            this.nativeInput = this.createNativeInput(options);
        }
        var nativeInput = this.nativeInput;
        nativeInput.classList.add(this.getFullElName('input'));
        container.classList.add(this.componentName);
        container.appendChild(nativeInput);
        return container;
    };
    UIFileInput.prototype.createNativeInput = function (options) {
        return this.j.create.fromHTML("<input\n\t\t\ttype=\"file\"\n\t\t\taccept=\"".concat(options.onlyImages ? 'image/*' : '*', "\"\n\t\t\ttabindex=\"-1\"\n\t\t\tdir=\"auto\"\n\t\t\tmultiple=\"\"\n\t\t/>"));
    };
    UIFileInput = tslib_1.__decorate([
        component_1.component
    ], UIFileInput);
    return UIFileInput;
}(input_1.UIInput));
exports.UIFileInput = UIFileInput;


/***/ }),

/***/ 63034:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(30194), exports);
tslib_1.__exportStar(__webpack_require__(21639), exports);
tslib_1.__exportStar(__webpack_require__(63747), exports);
tslib_1.__exportStar(__webpack_require__(75840), exports);
tslib_1.__exportStar(__webpack_require__(41374), exports);


/***/ }),

/***/ 30194:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UIInput = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(4591);
var element_1 = __webpack_require__(53929);
var utils_1 = __webpack_require__(76502);
var to_array_1 = __webpack_require__(1853);
var dom_1 = __webpack_require__(24263);
var decorators_1 = __webpack_require__(43441);
var icon_1 = __webpack_require__(77904);
var validators_1 = __webpack_require__(60081);
var UIInput = (function (_super) {
    tslib_1.__extends(UIInput, _super);
    function UIInput(jodit, options) {
        var _this = _super.call(this, jodit, options) || this;
        _this.label = _this.j.c.span(_this.getFullElName('label'));
        _this.icon = _this.j.c.span(_this.getFullElName('icon'));
        _this.clearButton = _this.j.c.span(_this.getFullElName('clear'), icon_1.Icon.get('cancel'));
        _this.state = tslib_1.__assign({}, UIInput_1.defaultState);
        _this.__errorBox = _this.j.c.span(_this.getFullElName('error'));
        _this.validators = new Set([]);
        if ((options === null || options === void 0 ? void 0 : options.value) !== undefined) {
            options.value = options.value.toString();
        }
        Object.assign(_this.state, options);
        if (_this.state.clearButton !== undefined) {
            _this.j.e
                .on(_this.clearButton, 'click', function (e) {
                e.preventDefault();
                _this.nativeInput.value = '';
                _this.j.e.fire(_this.nativeInput, 'input');
                _this.focus();
            })
                .on(_this.nativeInput, 'input', function () {
                _this.state.clearButton = Boolean(_this.value.length);
            });
            _this.state.clearButton = Boolean(_this.value.length);
        }
        _this.j.e
            .on(_this.nativeInput, 'focus blur', function () {
            _this.onChangeFocus();
        })
            .on(_this.nativeInput, 'input change', _this.onChangeValue);
        _this.onChangeState();
        _this.onChangeClassName();
        _this.onChangeStateValue();
        return _this;
    }
    UIInput_1 = UIInput;
    UIInput.prototype.className = function () {
        return 'UIInput';
    };
    UIInput.prototype.onChangeClear = function () {
        if (this.state.clearButton) {
            dom_1.Dom.after(this.nativeInput, this.clearButton);
        }
        else {
            dom_1.Dom.safeRemove(this.clearButton);
        }
    };
    UIInput.prototype.onChangeClassName = function (ignore, oldClassName) {
        oldClassName && this.container.classList.remove(oldClassName);
        this.state.className &&
            this.container.classList.add(this.state.className);
    };
    UIInput.prototype.onChangeState = function () {
        this.name = this.state.name;
        var input = this.nativeInput, _a = this.state, name = _a.name, icon = _a.icon, type = _a.type, ref = _a.ref, required = _a.required, placeholder = _a.placeholder, autocomplete = _a.autocomplete, label = _a.label;
        (0, utils_1.attr)(input, 'name', name);
        (0, utils_1.attr)(input, 'type', type);
        (0, utils_1.attr)(input, 'data-ref', ref || name);
        (0, utils_1.attr)(input, 'ref', ref || name);
        (0, utils_1.attr)(input, 'required', required || null);
        (0, utils_1.attr)(input, 'autocomplete', !autocomplete ? 'off' : null);
        (0, utils_1.attr)(input, 'placeholder', placeholder ? this.j.i18n(placeholder) : '');
        if (icon && icon_1.Icon.exists(icon)) {
            dom_1.Dom.before(input, this.icon);
            this.icon.innerHTML = icon_1.Icon.get(icon);
        }
        else {
            dom_1.Dom.safeRemove(this.icon);
        }
        if (label) {
            dom_1.Dom.before(this.wrapper, this.label);
            this.label.innerText = this.j.i18n(label);
        }
        else {
            dom_1.Dom.safeRemove(this.label);
        }
        this.updateValidators();
    };
    UIInput.prototype.updateValidators = function () {
        var _this = this;
        var _a;
        this.validators.clear();
        if (this.state.required) {
            this.validators.add(validators_1.inputValidators.required);
        }
        (_a = this.state.validators) === null || _a === void 0 ? void 0 : _a.forEach(function (name) {
            var validator = validators_1.inputValidators[name];
            validator && _this.validators.add(validator);
        });
    };
    Object.defineProperty(UIInput.prototype, "error", {
        set: function (value) {
            this.setMod('has-error', Boolean(value));
            if (!value) {
                dom_1.Dom.safeRemove(this.__errorBox);
            }
            else {
                this.__errorBox.innerText = this.j.i18n(value, this.j.i18n(this.state.label || ''));
                this.container.appendChild(this.__errorBox);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UIInput.prototype, "value", {
        get: function () {
            return this.nativeInput.value;
        },
        set: function (value) {
            if (this.value !== value) {
                this.nativeInput.value = value;
                this.onChangeValue();
            }
        },
        enumerable: false,
        configurable: true
    });
    UIInput.prototype.onChangeStateValue = function () {
        var value = this.state.value.toString();
        if (value !== this.value) {
            this.value = value;
        }
    };
    UIInput.prototype.onChangeValue = function () {
        var _a, _b;
        var value = this.value;
        if (this.state.value !== value) {
            this.state.value = value;
            this.j.e.fire(this, 'change', value);
            (_b = (_a = this.state).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value);
        }
    };
    UIInput.prototype.validate = function () {
        var _this = this;
        this.error = '';
        return (0, to_array_1.toArray)(this.validators).every(function (validator) { return validator(_this); });
    };
    UIInput.prototype.createContainer = function (options) {
        var container = _super.prototype.createContainer.call(this);
        this.wrapper = this.j.c.div(this.getFullElName('wrapper'));
        if (!this.nativeInput) {
            this.nativeInput = this.createNativeInput();
        }
        var nativeInput = this.nativeInput;
        nativeInput.classList.add(this.getFullElName('input'));
        this.wrapper.appendChild(nativeInput);
        container.appendChild(this.wrapper);
        (0, utils_1.attr)(nativeInput, 'dir', this.j.o.direction || 'auto');
        return container;
    };
    UIInput.prototype.createNativeInput = function (options) {
        return this.j.create.element('input');
    };
    UIInput.prototype.focus = function () {
        this.nativeInput.focus();
    };
    Object.defineProperty(UIInput.prototype, "isFocused", {
        get: function () {
            return this.nativeInput === this.j.od.activeElement;
        },
        enumerable: false,
        configurable: true
    });
    UIInput.prototype.onChangeFocus = function () {
        this.setMod('focused', this.isFocused);
    };
    var UIInput_1;
    UIInput.defaultState = {
        className: '',
        autocomplete: true,
        name: '',
        value: '',
        icon: '',
        label: '',
        ref: '',
        type: 'text',
        placeholder: '',
        required: false,
        validators: []
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.clearButton')
    ], UIInput.prototype, "onChangeClear", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.className')
    ], UIInput.prototype, "onChangeClassName", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)([
            'state.name',
            'state.type',
            'state.label',
            'state.placeholder',
            'state.autocomplete',
            'state.icon'
        ]),
        (0, decorators_1.debounce)()
    ], UIInput.prototype, "onChangeState", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.value')
    ], UIInput.prototype, "onChangeStateValue", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], UIInput.prototype, "onChangeValue", null);
    UIInput = UIInput_1 = tslib_1.__decorate([
        decorators_1.component
    ], UIInput);
    return UIInput;
}(element_1.UIElement));
exports.UIInput = UIInput;


/***/ }),

/***/ 75840:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UISelect = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(64194);
var utils_1 = __webpack_require__(67309);
var component_1 = __webpack_require__(11441);
var input_1 = __webpack_require__(30194);
var validators_1 = __webpack_require__(60081);
var UISelect = (function (_super) {
    tslib_1.__extends(UISelect, _super);
    function UISelect(jodit, state) {
        var _this = _super.call(this, jodit, state) || this;
        _this.state = tslib_1.__assign({}, UISelect_1.defaultState);
        Object.assign(_this.state, state);
        return _this;
    }
    UISelect_1 = UISelect;
    UISelect.prototype.className = function () {
        return 'UISelect';
    };
    UISelect.prototype.createContainer = function (state) {
        var _a;
        var container = _super.prototype.createContainer.call(this, state);
        var j = this.j, nativeInput = this.nativeInput;
        var opt = function () { return j.create.element('option'); };
        if (state.placeholder !== undefined) {
            var option = opt();
            option.value = '';
            option.text = j.i18n(state.placeholder);
            nativeInput.add(option);
        }
        (_a = state.options) === null || _a === void 0 ? void 0 : _a.forEach(function (element) {
            var option = opt();
            option.value = element.value.toString();
            option.text = j.i18n(element.text);
            nativeInput.add(option);
        });
        if (state.size && state.size > 0) {
            (0, utils_1.attr)(nativeInput, 'size', state.size);
        }
        if (state.multiple) {
            (0, utils_1.attr)(nativeInput, 'multiple', '');
        }
        return container;
    };
    UISelect.prototype.createNativeInput = function () {
        return this.j.create.element('select');
    };
    UISelect.prototype.updateValidators = function () {
        _super.prototype.updateValidators.call(this);
        if (this.state.required) {
            this.validators.delete(validators_1.inputValidators.required);
            this.validators.add(validators_1.selectValidators.required);
        }
    };
    var UISelect_1;
    UISelect.defaultState = tslib_1.__assign(tslib_1.__assign({}, input_1.UIInput.defaultState), { options: [], size: 1, multiple: false });
    UISelect = UISelect_1 = tslib_1.__decorate([
        component_1.component
    ], UISelect);
    return UISelect;
}(input_1.UIInput));
exports.UISelect = UISelect;


/***/ }),

/***/ 60081:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.selectValidators = exports.inputValidators = void 0;
exports.inputValidators = __webpack_require__(63355);
exports.selectValidators = __webpack_require__(65935);


/***/ }),

/***/ 63355:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.url = exports.required = void 0;
var is_url_1 = __webpack_require__(64350);
var trim_1 = __webpack_require__(33941);
exports.required = function (input) {
    if (!(0, trim_1.trim)(input.value).length) {
        input.error = 'Please fill out this field';
        return false;
    }
    return true;
};
exports.url = function (input) {
    if (!(0, is_url_1.isURL)((0, trim_1.trim)(input.value))) {
        input.error = 'Please enter a web address';
        return false;
    }
    return true;
};


/***/ }),

/***/ 65935:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.required = void 0;
var trim_1 = __webpack_require__(33941);
exports.required = function (select) {
    if (!(0, trim_1.trim)(select.value).length) {
        select.error = 'Please fill out this field';
        return false;
    }
    return true;
};


/***/ }),

/***/ 61479:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UIGroup = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(70375);
var element_1 = __webpack_require__(53929);
var decorators_1 = __webpack_require__(43441);
var helpers_1 = __webpack_require__(40332);
var assert_1 = __webpack_require__(52378);
var dom_1 = __webpack_require__(24263);
var component_1 = __webpack_require__(45113);
var UIGroup = (function (_super) {
    tslib_1.__extends(UIGroup, _super);
    function UIGroup(jodit, elements, options) {
        var _this = _super.call(this, jodit, options) || this;
        _this.options = options;
        _this.syncMod = false;
        _this.elements = [];
        _this.buttonSize = 'middle';
        elements === null || elements === void 0 ? void 0 : elements.forEach(function (elm) { return elm && _this.append(elm); });
        if (options === null || options === void 0 ? void 0 : options.name) {
            _this.name = options.name;
        }
        return _this;
    }
    UIGroup_1 = UIGroup;
    UIGroup.prototype.className = function () {
        return 'UIGroup';
    };
    Object.defineProperty(UIGroup.prototype, "allChildren", {
        get: function () {
            var result = [];
            var stack = tslib_1.__spreadArray([], tslib_1.__read(this.elements), false);
            while (stack.length) {
                var elm = stack.shift();
                if ((0, helpers_1.isArray)(elm)) {
                    stack.push.apply(stack, tslib_1.__spreadArray([], tslib_1.__read(elm), false));
                }
                else if (component_1.Component.isInstanceOf(elm, UIGroup_1)) {
                    stack.push.apply(stack, tslib_1.__spreadArray([], tslib_1.__read(elm.elements), false));
                }
                else {
                    elm && result.push(elm);
                }
            }
            return result;
        },
        enumerable: false,
        configurable: true
    });
    UIGroup.prototype.update = function () {
        this.elements.forEach(function (elm) { return elm.update(); });
        this.setMod('size', this.buttonSize);
    };
    UIGroup.prototype.append = function (elm, distElement) {
        var _this = this;
        if ((0, helpers_1.isArray)(elm)) {
            elm.forEach(function (item) { return _this.append(item, distElement); });
            return this;
        }
        this.elements.push(elm);
        if (elm.name) {
            elm.container.classList.add(this.getFullElName(elm.name));
        }
        if (distElement) {
            var distElm = this.getElm(distElement);
            void 0;
            distElm.appendChild(elm.container);
        }
        else {
            this.appendChildToContainer(elm.container);
        }
        elm.parentElement = this;
        elm.update();
        return this;
    };
    UIGroup.prototype.afterSetMod = function (name, value) {
        if (this.syncMod) {
            this.elements.forEach(function (elm) { return elm.setMod(name, value); });
        }
    };
    UIGroup.prototype.appendChildToContainer = function (childContainer) {
        this.container.appendChild(childContainer);
    };
    UIGroup.prototype.remove = function (elm) {
        var index = this.elements.indexOf(elm);
        if (index !== -1) {
            this.elements.splice(index, 1);
            dom_1.Dom.safeRemove(elm.container);
            elm.parentElement = null;
        }
        return this;
    };
    UIGroup.prototype.clear = function () {
        this.elements.forEach(function (elm) { return elm.destruct(); });
        this.elements.length = 0;
        return this;
    };
    UIGroup.prototype.destruct = function () {
        this.clear();
        return _super.prototype.destruct.call(this);
    };
    var UIGroup_1;
    tslib_1.__decorate([
        (0, decorators_1.watch)('buttonSize')
    ], UIGroup.prototype, "update", null);
    UIGroup = UIGroup_1 = tslib_1.__decorate([
        decorators_1.component
    ], UIGroup);
    return UIGroup;
}(element_1.UIElement));
exports.UIGroup = UIGroup;


/***/ }),

/***/ 3249:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(61479), exports);
tslib_1.__exportStar(__webpack_require__(47970), exports);
tslib_1.__exportStar(__webpack_require__(75018), exports);
tslib_1.__exportStar(__webpack_require__(58495), exports);


/***/ }),

/***/ 47970:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UIList = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(90235);
var get_strong_control_types_1 = __webpack_require__(32070);
var decorators_1 = __webpack_require__(43441);
var group_1 = __webpack_require__(61479);
var separator_1 = __webpack_require__(75018);
var spacer_1 = __webpack_require__(58495);
var button_1 = __webpack_require__(96031);
var buttons_1 = __webpack_require__(97642);
var get_control_type_1 = __webpack_require__(38546);
var split_array_1 = __webpack_require__(14556);
var component_1 = __webpack_require__(45113);
var UIList = (function (_super) {
    tslib_1.__extends(UIList, _super);
    function UIList(jodit) {
        var _this = _super.call(this, jodit) || this;
        _this.mode = 'horizontal';
        _this.removeButtons = [];
        _this.onChangeMode();
        return _this;
    }
    UIList.prototype.className = function () {
        return 'UIList';
    };
    UIList.prototype.onChangeMode = function () {
        this.setMod('mode', this.mode);
    };
    UIList.prototype.makeGroup = function () {
        return new group_1.UIGroup(this.jodit);
    };
    Object.defineProperty(UIList.prototype, "buttons", {
        get: function () {
            return this.allChildren.filter(function (elm) {
                return component_1.Component.isInstanceOf(elm, button_1.UIButton);
            });
        },
        enumerable: false,
        configurable: true
    });
    UIList.prototype.getButtonsNames = function () {
        return this.buttons
            .map(function (a) { return (a instanceof button_1.UIButton && a.state.name) || ''; })
            .filter(function (a) { return a !== ''; });
    };
    UIList.prototype.setRemoveButtons = function (removeButtons) {
        this.removeButtons = removeButtons || [];
        return this;
    };
    UIList.prototype.build = function (items, target) {
        var _this = this;
        if (target === void 0) { target = null; }
        items = (0, split_array_1.splitArray)(items);
        this.clear();
        var lastBtnSeparator = false;
        var line = this.makeGroup();
        this.append(line);
        line.setMod('line', true);
        var group;
        var addButton = function (control) {
            var elm = null;
            switch (control.name) {
                case '\n':
                    line = _this.makeGroup();
                    line.setMod('line', true);
                    group = _this.makeGroup();
                    line.append(group);
                    _this.append(line);
                    break;
                case '|':
                    if (!lastBtnSeparator) {
                        lastBtnSeparator = true;
                        elm = new separator_1.UISeparator(_this.j);
                    }
                    break;
                case '---': {
                    group.setMod('before-spacer', true);
                    var space = new spacer_1.UISpacer(_this.j);
                    line.append(space);
                    group = _this.makeGroup();
                    line.append(group);
                    lastBtnSeparator = false;
                    break;
                }
                default:
                    lastBtnSeparator = false;
                    elm = _this.makeButton(control, target);
            }
            if (elm) {
                if (!group) {
                    group = _this.makeGroup();
                    line.append(group);
                }
                group.append(elm);
            }
        };
        var isNotRemoved = function (b) {
            return !_this.removeButtons.includes(b.name);
        };
        items.forEach(function (item) {
            if ((0, buttons_1.isButtonGroup)(item)) {
                var buttons = item.buttons.filter(function (b) { return b; });
                if (buttons.length) {
                    group = _this.makeGroup();
                    group.setMod('separated', true).setMod('group', item.group);
                    line.append(group);
                    (0, get_strong_control_types_1.getStrongControlTypes)(buttons, _this.j.o.controls)
                        .filter(isNotRemoved)
                        .forEach(addButton);
                }
            }
            else {
                if (!group) {
                    group = _this.makeGroup();
                    line.append(group);
                }
                var control = (0, get_control_type_1.getControlType)(item, _this.j.o.controls);
                isNotRemoved(control) && addButton(control);
            }
        });
        this.update();
        return this;
    };
    UIList.prototype.makeButton = function (control, target) {
        return new button_1.UIButton(this.j);
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)('mode')
    ], UIList.prototype, "onChangeMode", null);
    UIList = tslib_1.__decorate([
        decorators_1.component
    ], UIList);
    return UIList;
}(group_1.UIGroup));
exports.UIList = UIList;


/***/ }),

/***/ 75018:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UISeparator = void 0;
var tslib_1 = __webpack_require__(20255);
var element_1 = __webpack_require__(53929);
var component_1 = __webpack_require__(11441);
var UISeparator = (function (_super) {
    tslib_1.__extends(UISeparator, _super);
    function UISeparator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UISeparator.prototype.className = function () {
        return 'UISeparator';
    };
    UISeparator = tslib_1.__decorate([
        component_1.component
    ], UISeparator);
    return UISeparator;
}(element_1.UIElement));
exports.UISeparator = UISeparator;


/***/ }),

/***/ 58495:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UISpacer = void 0;
var tslib_1 = __webpack_require__(20255);
var element_1 = __webpack_require__(53929);
var component_1 = __webpack_require__(11441);
var UISpacer = (function (_super) {
    tslib_1.__extends(UISpacer, _super);
    function UISpacer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UISpacer.prototype.className = function () {
        return 'UISpacer';
    };
    UISpacer = tslib_1.__decorate([
        component_1.component
    ], UISpacer);
    return UISpacer;
}(element_1.UIElement));
exports.UISpacer = UISpacer;


/***/ }),

/***/ 97642:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.flatButtonsSet = exports.isButtonGroup = void 0;
var tslib_1 = __webpack_require__(20255);
var is_array_1 = __webpack_require__(49781);
var isButtonGroup = function (item) {
    return (0, is_array_1.isArray)(item.buttons);
};
exports.isButtonGroup = isButtonGroup;
function flatButtonsSet(buttons, jodit) {
    var groups = jodit.getRegisteredButtonGroups();
    return new Set(buttons.reduce(function (acc, item) {
        var _a;
        if ((0, exports.isButtonGroup)(item)) {
            acc = acc.concat(tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read(item.buttons), false), tslib_1.__read(((_a = groups[item.group]) !== null && _a !== void 0 ? _a : [])), false));
        }
        else {
            acc.push(item);
        }
        return acc;
    }, []));
}
exports.flatButtonsSet = flatButtonsSet;


/***/ }),

/***/ 38546:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.findControlType = exports.getControlType = void 0;
var tslib_1 = __webpack_require__(20255);
var helpers_1 = __webpack_require__(40332);
var config_1 = __webpack_require__(93166);
function getControlType(button, controls) {
    var buttonControl;
    if (!controls) {
        controls = config_1.Config.defaultOptions.controls;
    }
    if (!(0, helpers_1.isString)(button)) {
        buttonControl = tslib_1.__assign({ name: 'empty' }, (0, helpers_1.ConfigFlatten)(button));
        if (controls[buttonControl.name] !== undefined) {
            buttonControl = tslib_1.__assign(tslib_1.__assign({}, (0, helpers_1.ConfigFlatten)(controls[buttonControl.name])), (0, helpers_1.ConfigFlatten)(buttonControl));
        }
    }
    else {
        buttonControl = findControlType(button, controls) || {
            name: button,
            command: button,
            tooltip: button
        };
    }
    return buttonControl;
}
exports.getControlType = getControlType;
function findControlType(path, controls) {
    var _a = tslib_1.__read(path.split(/\./), 2), namespaceOrKey = _a[0], key = _a[1];
    var store = controls;
    if (key != null) {
        if (controls[namespaceOrKey] !== undefined) {
            store = controls[namespaceOrKey];
        }
    }
    else {
        key = namespaceOrKey;
    }
    return store[key]
        ? tslib_1.__assign({ name: key }, (0, helpers_1.ConfigFlatten)(store[key])) : undefined;
}
exports.findControlType = findControlType;


/***/ }),

/***/ 32070:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getStrongControlTypes = void 0;
var get_control_type_1 = __webpack_require__(38546);
var config_1 = __webpack_require__(93166);
var is_array_1 = __webpack_require__(49781);
var utils_1 = __webpack_require__(76502);
function getStrongControlTypes(items, controls) {
    var elements = (0, is_array_1.isArray)(items)
        ? items
        : (0, utils_1.keys)(items, false).map(function (key) {
            var value = items[key] || {};
            return (0, utils_1.ConfigProto)({ name: key }, value);
        });
    return elements.map(function (item) {
        return (0, get_control_type_1.getControlType)(item, controls || config_1.Config.defaultOptions.controls);
    });
}
exports.getStrongControlTypes = getStrongControlTypes;


/***/ }),

/***/ 77904:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Icon = void 0;
var css_1 = __webpack_require__(26911);
var helpers_1 = __webpack_require__(40332);
var Icon = (function () {
    function Icon() {
    }
    Icon.getIcon = function (name) {
        if (/<svg/i.test(name)) {
            return name;
        }
        var icon = Icon.icons[name] ||
            Icon.icons[name.replace(/-/g, '_')] ||
            Icon.icons[name.replace(/_/g, '-')] ||
            Icon.icons[(0, helpers_1.camelCase)(name)] ||
            Icon.icons[(0, helpers_1.kebabCase)(name)] ||
            Icon.icons[name.toLowerCase()];
        if (false) {}
        return icon;
    };
    Icon.exists = function (name) {
        return this.getIcon(name) !== undefined;
    };
    Icon.get = function (name, defaultValue) {
        if (defaultValue === void 0) { defaultValue = '<span></span>'; }
        return this.getIcon(name) || defaultValue;
    };
    Icon.set = function (name, value) {
        this.icons[name.replace('_', '-')] = value;
        return this;
    };
    Icon.makeIcon = function (jodit, icon) {
        var _a;
        var iconElement;
        if (icon) {
            var clearName = icon.name.replace(/[^a-zA-Z0-9]/g, '_');
            if (icon.iconURL) {
                iconElement = jodit.c.span();
                (0, css_1.css)(iconElement, 'backgroundImage', 'url(' +
                    icon.iconURL.replace('{basePath}', (jodit === null || jodit === void 0 ? void 0 : jodit.basePath) || '') +
                    ')');
            }
            else {
                var svg = jodit.e.fire('getIcon', icon.name, icon, clearName) ||
                    Icon.get(icon.name, '') ||
                    ((_a = jodit.o.extraIcons) === null || _a === void 0 ? void 0 : _a[icon.name]);
                if (svg) {
                    iconElement = jodit.c.fromHTML(svg.trim());
                    if (!/^<svg/i.test(icon.name)) {
                        iconElement.classList.add('jodit-icon_' + clearName);
                    }
                }
            }
        }
        if (iconElement) {
            iconElement.classList.add('jodit-icon');
            iconElement.style.fill = icon.fill;
        }
        return iconElement;
    };
    Icon.icons = {};
    return Icon;
}());
exports.Icon = Icon;


/***/ }),

/***/ 2074:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(53929), exports);
tslib_1.__exportStar(__webpack_require__(96516), exports);
tslib_1.__exportStar(__webpack_require__(35799), exports);
tslib_1.__exportStar(__webpack_require__(3249), exports);
tslib_1.__exportStar(__webpack_require__(95963), exports);
tslib_1.__exportStar(__webpack_require__(77904), exports);
tslib_1.__exportStar(__webpack_require__(63682), exports);


/***/ }),

/***/ 35799:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(12680), exports);


/***/ }),

/***/ 12680:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Popup = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(88477);
var dom_1 = __webpack_require__(24263);
var helpers_1 = __webpack_require__(40332);
var assert_1 = __webpack_require__(52378);
var element_1 = __webpack_require__(53929);
var decorators_1 = __webpack_require__(43441);
var component_1 = __webpack_require__(45113);
var global_1 = __webpack_require__(17332);
var Popup = (function (_super) {
    tslib_1.__extends(Popup, _super);
    function Popup(jodit, smart) {
        if (smart === void 0) { smart = true; }
        var _this = _super.call(this, jodit) || this;
        _this.smart = smart;
        _this.isOpened = false;
        _this.strategy = 'leftBottom';
        _this.viewBound = function () { return ({
            left: 0,
            top: 0,
            width: _this.ow.innerWidth,
            height: _this.ow.innerHeight
        }); };
        _this.childrenPopups = new Set();
        (0, helpers_1.attr)(_this.container, 'role', 'popup');
        return _this;
    }
    Popup.prototype.className = function () {
        return 'Popup';
    };
    Popup.prototype.updateParentElement = function (target) {
        var _this = this;
        if (target !== this && component_1.Component.isInstanceOf(target, Popup)) {
            this.childrenPopups.forEach(function (popup) {
                if (!target.closest(popup) && popup.isOpened) {
                    popup.close();
                }
            });
            if (!this.childrenPopups.has(target)) {
                this.j.e.on(target, 'beforeClose', function () {
                    _this.childrenPopups.delete(target);
                });
            }
            this.childrenPopups.add(target);
        }
        return _super.prototype.updateParentElement.call(this, target);
    };
    Popup.prototype.setContent = function (content) {
        dom_1.Dom.detach(this.container);
        var box = this.j.c.div("".concat(this.componentName, "__content"));
        var elm;
        if (component_1.Component.isInstanceOf(content, element_1.UIElement)) {
            elm = content.container;
            content.parentElement = this;
        }
        else if ((0, helpers_1.isString)(content)) {
            elm = this.j.c.fromHTML(content);
        }
        else {
            elm = content;
        }
        box.appendChild(elm);
        this.container.appendChild(box);
        this.updatePosition();
        return this;
    };
    Popup.prototype.open = function (getBound, keepPosition, parentContainer) {
        if (keepPosition === void 0) { keepPosition = false; }
        (0, helpers_1.markOwner)(this.jodit, this.container);
        this.calculateZIndex();
        this.isOpened = true;
        this.addGlobalListeners();
        this.targetBound = !keepPosition
            ? getBound
            : this.getKeepBound(getBound);
        if (parentContainer) {
            parentContainer.appendChild(this.container);
        }
        else {
            var popupContainer = (0, global_1.getContainer)(this.jodit, Popup);
            if (parentContainer !== this.container.parentElement) {
                popupContainer.appendChild(this.container);
            }
        }
        this.updatePosition();
        this.j.e.fire(this, 'afterOpen');
        return this;
    };
    Popup.prototype.calculateZIndex = function () {
        var _this = this;
        if (this.container.style.zIndex) {
            return;
        }
        var checkView = function (view) {
            var zIndex = view.container.style.zIndex || view.o.zIndex;
            if (zIndex) {
                _this.setZIndex(1 + parseInt(zIndex.toString(), 10));
                return true;
            }
            return false;
        };
        var j = this.j;
        if (checkView(j)) {
            return;
        }
        var pe = this.parentElement;
        while (pe) {
            if (checkView(j)) {
                return;
            }
            if (pe.container.style.zIndex) {
                this.setZIndex(1 + parseInt(pe.container.style.zIndex.toString(), 10));
                return;
            }
            if (!pe.parentElement && pe.container.parentElement) {
                var elm = element_1.UIElement.closestElement(pe.container.parentElement, element_1.UIElement);
                if (elm) {
                    pe = elm;
                    continue;
                }
            }
            pe = pe.parentElement;
        }
    };
    Popup.prototype.getKeepBound = function (getBound) {
        var _this = this;
        var oldBound = getBound();
        var elmUnderCursor = this.od.elementFromPoint(oldBound.left, oldBound.top);
        if (!elmUnderCursor) {
            return getBound;
        }
        var element = dom_1.Dom.isHTMLElement(elmUnderCursor)
            ? elmUnderCursor
            : elmUnderCursor.parentElement;
        var oldPos = (0, helpers_1.position)(element, this.j);
        return function () {
            var bound = getBound();
            var newPos = (0, helpers_1.position)(element, _this.j);
            return tslib_1.__assign(tslib_1.__assign({}, bound), { top: bound.top + (newPos.top - oldPos.top), left: bound.left + (newPos.left - oldPos.left) });
        };
    };
    Popup.prototype.updatePosition = function () {
        if (!this.isOpened) {
            return this;
        }
        var _a = tslib_1.__read(this.calculatePosition(this.targetBound(), this.viewBound(), (0, helpers_1.position)(this.container, this.j)), 2), pos = _a[0], strategy = _a[1];
        this.setMod('strategy', strategy);
        (0, helpers_1.css)(this.container, {
            left: pos.left,
            top: pos.top
        });
        this.childrenPopups.forEach(function (popup) { return popup.updatePosition(); });
        return this;
    };
    Popup.prototype.throttleUpdatePosition = function () {
        this.updatePosition();
    };
    Popup.prototype.calculatePosition = function (target, view, container, defaultStrategy) {
        if (defaultStrategy === void 0) { defaultStrategy = this.strategy; }
        var x = {
            left: target.left,
            right: target.left - (container.width - target.width)
        }, y = {
            bottom: target.top + target.height,
            top: target.top - container.height
        };
        var list = Object.keys(x).reduce(function (keys, xKey) {
            return keys.concat(Object.keys(y).map(function (yKey) { return "".concat(xKey).concat((0, helpers_1.ucfirst)(yKey)); }));
        }, []);
        var getPointByStrategy = function (strategy) {
            var _a = tslib_1.__read((0, helpers_1.kebabCase)(strategy).split('-'), 2), xKey = _a[0], yKey = _a[1];
            return {
                left: x[xKey],
                top: y[yKey],
                width: container.width,
                height: container.height
            };
        };
        var getMatchStrategy = function (inBox) {
            var strategy = null;
            if (Popup.boxInView(getPointByStrategy(defaultStrategy), inBox)) {
                strategy = defaultStrategy;
            }
            else {
                strategy =
                    list.find(function (key) {
                        if (Popup.boxInView(getPointByStrategy(key), inBox)) {
                            return key;
                        }
                        return;
                    }) || null;
            }
            return strategy;
        };
        var strategy = getMatchStrategy((0, helpers_1.position)(this.j.container, this.j));
        if (!strategy || !Popup.boxInView(getPointByStrategy(strategy), view)) {
            strategy = getMatchStrategy(view) || strategy || defaultStrategy;
        }
        return [getPointByStrategy(strategy), strategy];
    };
    Popup.boxInView = function (box, view) {
        var accuracy = 2;
        return (box.top - view.top >= -accuracy &&
            box.left - view.left >= -accuracy &&
            view.top + view.height - (box.top + box.height) >= -accuracy &&
            view.left + view.width - (box.left + box.width) >= -accuracy);
    };
    Popup.prototype.close = function () {
        if (!this.isOpened) {
            return this;
        }
        this.isOpened = false;
        this.childrenPopups.forEach(function (popup) { return popup.close(); });
        this.j.e.fire(this, 'beforeClose');
        this.j.e.fire('beforePopupClose', this);
        this.removeGlobalListeners();
        dom_1.Dom.safeRemove(this.container);
        return this;
    };
    Popup.prototype.closeOnOutsideClick = function (e) {
        if (!this.isOpened || this.isOwnClick(e)) {
            return;
        }
        this.close();
    };
    Popup.prototype.isOwnClick = function (e) {
        if (!e.target) {
            return false;
        }
        var box = element_1.UIElement.closestElement(e.target, Popup);
        return Boolean(box && (this === box || box.closest(this)));
    };
    Popup.prototype.addGlobalListeners = function () {
        var _this = this;
        var up = this.throttleUpdatePosition, ow = this.ow;
        global_1.eventEmitter.on('closeAllPopups', this.close);
        if (this.smart) {
            this.j.e
                .on('escape', this.close)
                .on('mousedown touchstart', this.closeOnOutsideClick)
                .on(ow, 'mousedown touchstart', this.closeOnOutsideClick);
        }
        this.j.e
            .on('closeAllPopups', this.close)
            .on('resize', up)
            .on(this.container, 'scroll mousewheel', up)
            .on(ow, 'scroll', up)
            .on(ow, 'resize', up);
        dom_1.Dom.up(this.j.container, function (box) {
            box && _this.j.e.on(box, 'scroll mousewheel', up);
        });
    };
    Popup.prototype.removeGlobalListeners = function () {
        var _this = this;
        var up = this.throttleUpdatePosition, ow = this.ow;
        global_1.eventEmitter.off('closeAllPopups', this.close);
        if (this.smart) {
            this.j.e
                .off('escape', this.close)
                .off('mousedown touchstart', this.closeOnOutsideClick)
                .off(ow, 'mousedown touchstart', this.closeOnOutsideClick);
        }
        this.j.e
            .off('closeAllPopups', this.close)
            .off('resize', up)
            .off(this.container, 'scroll mousewheel', up)
            .off(ow, 'scroll', up)
            .off(ow, 'resize', up);
        void 0;
        dom_1.Dom.up(this.j.container, function (box) {
            box && _this.j.e.off(box, 'scroll mousewheel', up);
        });
    };
    Popup.prototype.setZIndex = function (index) {
        this.container.style.zIndex = index.toString();
    };
    Popup.prototype.destruct = function () {
        this.close();
        return _super.prototype.destruct.call(this);
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], Popup.prototype, "updatePosition", null);
    tslib_1.__decorate([
        (0, decorators_1.throttle)(10),
        decorators_1.autobind
    ], Popup.prototype, "throttleUpdatePosition", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Popup.prototype, "close", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Popup.prototype, "closeOnOutsideClick", null);
    return Popup;
}(element_1.UIElement));
exports.Popup = Popup;


/***/ }),

/***/ 63682:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProgressBar = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(50197);
var dom_1 = __webpack_require__(24263);
var element_1 = __webpack_require__(53929);
var ProgressBar = (function (_super) {
    tslib_1.__extends(ProgressBar, _super);
    function ProgressBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProgressBar.prototype.className = function () {
        return 'ProgressBar';
    };
    ProgressBar.prototype.render = function () {
        return '<div><div></div></div>';
    };
    ProgressBar.prototype.show = function () {
        var container = this.j.workplace || this.j.container;
        container.appendChild(this.container);
        return this;
    };
    ProgressBar.prototype.hide = function () {
        dom_1.Dom.safeRemove(this.container);
        return this;
    };
    ProgressBar.prototype.progress = function (percentage) {
        this.container.style.width = percentage.toFixed(2) + '%';
        return this;
    };
    ProgressBar.prototype.destruct = function () {
        this.hide();
        return _super.prototype.destruct.call(this);
    };
    return ProgressBar;
}(element_1.UIElement));
exports.ProgressBar = ProgressBar;


/***/ }),

/***/ 43608:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewWithToolbar = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(39008);
var view_1 = __webpack_require__(75902);
var helpers_1 = __webpack_require__(40332);
var dom_1 = __webpack_require__(64968);
var factory_1 = __webpack_require__(81438);
var component_1 = __webpack_require__(56562);
var buttons_1 = __webpack_require__(97642);
var decorators_1 = __webpack_require__(43441);
var ViewWithToolbar = (function (_super) {
    tslib_1.__extends(ViewWithToolbar, _super);
    function ViewWithToolbar(options, isJodit) {
        if (isJodit === void 0) { isJodit = false; }
        var _this = _super.call(this, options, isJodit) || this;
        _this.toolbar = (0, factory_1.makeCollection)(_this);
        _this.defaultToolbarContainer = _this.c.div('jodit-toolbar__box');
        _this.registeredButtons = new Set();
        _this.groupToButtons = {};
        _this.isJodit = false;
        _this.isJodit = isJodit;
        _this.e.on('beforeToolbarBuild', _this.beforeToolbarBuild);
        return _this;
    }
    Object.defineProperty(ViewWithToolbar.prototype, "toolbarContainer", {
        get: function () {
            if (!this.o.fullsize &&
                ((0, helpers_1.isString)(this.o.toolbar) || dom_1.Dom.isHTMLElement(this.o.toolbar))) {
                return (0, helpers_1.resolveElement)(this.o.toolbar, this.o.shadowRoot || this.od);
            }
            this.o.toolbar &&
                dom_1.Dom.appendChildFirst(this.container, this.defaultToolbarContainer);
            return this.defaultToolbarContainer;
        },
        enumerable: false,
        configurable: true
    });
    ViewWithToolbar.prototype.setPanel = function (element) {
        this.o.toolbar = element;
        this.buildToolbar();
    };
    ViewWithToolbar.prototype.buildToolbar = function () {
        if (!this.o.toolbar) {
            return;
        }
        var buttons = this.o.buttons
            ? (0, helpers_1.splitArray)(this.o.buttons)
            : [];
        this.toolbar
            .setRemoveButtons(this.o.removeButtons)
            .build(buttons.concat(this.o.extraButtons || []))
            .appendTo(this.toolbarContainer);
    };
    ViewWithToolbar.prototype.getRegisteredButtonGroups = function () {
        return this.groupToButtons;
    };
    ViewWithToolbar.prototype.registerButton = function (btn) {
        var _a;
        this.registeredButtons.add(btn);
        var group = (_a = btn.group) !== null && _a !== void 0 ? _a : 'other';
        if (!this.groupToButtons[group]) {
            this.groupToButtons[group] = [];
        }
        if (btn.position != null) {
            this.groupToButtons[group][btn.position] = btn.name;
        }
        else {
            this.groupToButtons[group].push(btn.name);
        }
        return this;
    };
    ViewWithToolbar.prototype.unregisterButton = function (btn) {
        var _a;
        this.registeredButtons.delete(btn);
        var groupName = (_a = btn.group) !== null && _a !== void 0 ? _a : 'other', group = this.groupToButtons[groupName];
        if (group) {
            var index = group.indexOf(btn.name);
            if (index !== -1) {
                group.splice(index, 1);
            }
            if (group.length === 0) {
                delete this.groupToButtons[groupName];
            }
        }
        return this;
    };
    ViewWithToolbar.prototype.beforeToolbarBuild = function (items) {
        var _this = this;
        if (Object.keys(this.groupToButtons).length) {
            return items.map(function (item) {
                if ((0, buttons_1.isButtonGroup)(item) &&
                    item.group &&
                    _this.groupToButtons[item.group]) {
                    return {
                        group: item.group,
                        buttons: tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read(item.buttons), false), tslib_1.__read(_this.groupToButtons[item.group]), false)
                    };
                }
                return item;
            });
        }
    };
    ViewWithToolbar.prototype.destruct = function () {
        if (this.isDestructed) {
            return;
        }
        this.setStatus(component_1.STATUSES.beforeDestruct);
        this.e.off('beforeToolbarBuild', this.beforeToolbarBuild);
        this.toolbar.destruct();
        _super.prototype.destruct.call(this);
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], ViewWithToolbar.prototype, "beforeToolbarBuild", null);
    return ViewWithToolbar;
}(view_1.View));
exports.ViewWithToolbar = ViewWithToolbar;


/***/ }),

/***/ 75902:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.View = void 0;
var tslib_1 = __webpack_require__(20255);
var storage_1 = __webpack_require__(77462);
var helpers_1 = __webpack_require__(40332);
var constants_1 = __webpack_require__(86893);
var modules_1 = __webpack_require__(87837);
var global_1 = __webpack_require__(17332);
var decorators_1 = __webpack_require__(43441);
var traits_1 = __webpack_require__(59829);
var event_emitter_1 = __webpack_require__(55395);
var messages_1 = __webpack_require__(71014);
var View = (function (_super) {
    tslib_1.__extends(View, _super);
    function View(options, isJodit) {
        if (isJodit === void 0) { isJodit = false; }
        var _this = _super.call(this) || this;
        _this.isJodit = isJodit;
        _this.isView = true;
        _this.parent = null;
        _this.mods = {};
        _this.components = new Set();
        _this.version = "3.24.9";
        _this.buffer = storage_1.Storage.makeStorage();
        _this.storage = storage_1.Storage.makeStorage(true, _this.componentName);
        _this.OPTIONS = View_1.defaultOptions;
        _this.__isFullSize = false;
        _this.__whoLocked = '';
        _this.isLockedNotBy = function (name) {
            return _this.isLocked && _this.__whoLocked !== name;
        };
        _this.__modulesInstances = new Map();
        _this.id = new Date().getTime().toString();
        _this.buffer = storage_1.Storage.makeStorage();
        _this.initOptions(options);
        _this.initOwners();
        _this.events = new event_emitter_1.EventEmitter(_this.od);
        _this.create = new modules_1.Create(_this.od);
        _this.container = _this.c.div("jodit ".concat(_this.componentName));
        _this.progressbar = new modules_1.ProgressBar(_this);
        _this.message = new messages_1.UIMessages(_this, _this.container);
        return _this;
    }
    View_1 = View;
    Object.defineProperty(View.prototype, "basePath", {
        get: function () {
            if (this.o.basePath) {
                return this.o.basePath;
            }
            return constants_1.BASE_PATH;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(View.prototype, "defaultTimeout", {
        get: function () {
            return (0, helpers_1.isVoid)(this.o.defaultTimeout) ? 100 : this.o.defaultTimeout;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(View.prototype, "c", {
        get: function () {
            return this.create;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(View.prototype, "container", {
        get: function () {
            return this.__container;
        },
        set: function (container) {
            this.__container = container;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(View.prototype, "e", {
        get: function () {
            return this.events;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(View.prototype, "options", {
        get: function () {
            return this.__options;
        },
        set: function (options) {
            this.__options = options;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(View.prototype, "o", {
        get: function () {
            return this.options;
        },
        enumerable: false,
        configurable: true
    });
    View.prototype.i18n = function (text) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        return (0, helpers_1.i18n)(text, params, this.options);
    };
    View.prototype.toggleFullSize = function (isFullSize) {
        if (isFullSize === undefined) {
            isFullSize = !this.__isFullSize;
        }
        if (isFullSize === this.__isFullSize) {
            return;
        }
        this.__isFullSize = isFullSize;
        this.e.fire('toggleFullSize', isFullSize);
    };
    Object.defineProperty(View.prototype, "isLocked", {
        get: function () {
            return this.__whoLocked !== '';
        },
        enumerable: false,
        configurable: true
    });
    View.prototype.lock = function (name) {
        if (name === void 0) { name = 'any'; }
        if (!this.isLocked) {
            this.__whoLocked = name;
            return true;
        }
        return false;
    };
    View.prototype.unlock = function () {
        if (this.isLocked) {
            this.__whoLocked = '';
            return true;
        }
        return false;
    };
    Object.defineProperty(View.prototype, "isFullSize", {
        get: function () {
            return this.__isFullSize;
        },
        enumerable: false,
        configurable: true
    });
    View.prototype.getVersion = function () {
        return "3.24.9";
    };
    View.getVersion = function () {
        return "3.24.9";
    };
    View.prototype.initOptions = function (options) {
        this.options = (0, helpers_1.ConfigProto)(options || {}, (0, helpers_1.ConfigProto)(this.options || {}, View_1.defaultOptions));
    };
    View.prototype.initOwners = function () {
        var _a;
        this.ownerWindow = (_a = this.o.ownerWindow) !== null && _a !== void 0 ? _a : window;
    };
    View.prototype.attachEvents = function (options) {
        var _this = this;
        if (!options) {
            return;
        }
        var e = options === null || options === void 0 ? void 0 : options.events;
        e && Object.keys(e).forEach(function (key) { return _this.e.on(key, e[key]); });
    };
    View.prototype.getInstance = function (moduleName, options) {
        var instance = this.e.fire((0, helpers_1.camelCase)('getInstance_' + moduleName), options);
        if (instance) {
            return instance;
        }
        var module = global_1.modules[moduleName], mi = this.__modulesInstances;
        if (!(0, helpers_1.isFunction)(module)) {
            throw (0, helpers_1.error)('Need real module name');
        }
        if (!mi.has(moduleName)) {
            var instance_1 = module.prototype instanceof modules_1.ViewComponent
                ? new module(this, options)
                : new module(options);
            this.components.add(instance_1);
            mi.set(moduleName, instance_1);
        }
        return mi.get(moduleName);
    };
    View.prototype.addDisclaimer = function (elm) {
        this.container.appendChild(elm);
    };
    View.prototype.beforeDestruct = function () {
        this.e.fire(modules_1.STATUSES.beforeDestruct, this);
        this.components.forEach(function (component) {
            if ((0, helpers_1.isDestructable)(component) && !component.isInDestruct) {
                component.destruct();
            }
        });
        this.components.clear();
    };
    View.prototype.destruct = function () {
        if (this.isDestructed) {
            return;
        }
        this.progressbar.destruct();
        this.message.destruct();
        if (this.async) {
            this.async.destruct();
        }
        if (this.events) {
            this.e.destruct();
        }
        if (this.buffer) {
            this.buffer.clear();
        }
        modules_1.Dom.safeRemove(this.container);
        _super.prototype.destruct.call(this);
    };
    var View_1;
    View.esNext = false;
    tslib_1.__decorate([
        (0, decorators_1.hook)(modules_1.STATUSES.beforeDestruct)
    ], View.prototype, "beforeDestruct", null);
    View = View_1 = tslib_1.__decorate([
        (0, decorators_1.derive)(traits_1.Mods, traits_1.Elms)
    ], View);
    return View;
}(modules_1.Component));
exports.View = View;
View.defaultOptions = {
    extraButtons: [],
    textIcons: false,
    namespace: '',
    removeButtons: [],
    zIndex: 100002,
    defaultTimeout: 100,
    fullsize: false,
    showTooltip: true,
    useNativeTooltip: false,
    buttons: [],
    globalFullSize: true,
    language: 'auto'
};


/***/ }),

/***/ 37920:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Jodit = void 0;
var tslib_1 = __webpack_require__(20255);
var config_1 = __webpack_require__(93166);
var constants = __webpack_require__(86893);
var modules_1 = __webpack_require__(87837);
var helpers_1 = __webpack_require__(40332);
var storage_1 = __webpack_require__(77462);
var constants_1 = __webpack_require__(86893);
var global_1 = __webpack_require__(17332);
var decorators_1 = __webpack_require__(43441);
var traits_1 = __webpack_require__(59829);
var request_1 = __webpack_require__(30056);
var __defaultStyleDisplayKey = 'data-jodit-default-style-display';
var __defaultClassesKey = 'data-jodit-default-classes';
var Jodit = (function (_super) {
    tslib_1.__extends(Jodit, _super);
    function Jodit(element, options) {
        var _this = _super.call(this, options, true) || this;
        _this.isJodit = true;
        _this.commands = new Map();
        _this.__selectionLocked = null;
        _this.__wasReadOnly = false;
        _this.createInside = new modules_1.Create(function () { return _this.ed; }, _this.o.createAttributes);
        _this.editorIsActive = false;
        _this.__mode = constants.MODE_WYSIWYG;
        _this.__callChangeCount = 0;
        _this.__isSilentChange = false;
        _this.__elementToPlace = new Map();
        try {
            var elementSource = (0, helpers_1.resolveElement)(element, _this.o.shadowRoot || _this.od);
            if (Jodit_1.isJoditAssigned(elementSource)) {
                return elementSource.component;
            }
        }
        catch (e) {
            _this.destruct();
            throw e;
        }
        _this.setStatus(modules_1.STATUSES.beforeInit);
        _this.id =
            (0, helpers_1.attr)((0, helpers_1.resolveElement)(element, _this.o.shadowRoot || _this.od), 'id') ||
                new Date().getTime().toString();
        global_1.instances[_this.id] = _this;
        _this.storage = storage_1.Storage.makeStorage(true, _this.id);
        _this.attachEvents(options);
        _this.e.on(_this.ow, 'resize', function () {
            if (_this.e) {
                _this.e.fire('resize');
            }
        });
        _this.e.on('prepareWYSIWYGEditor', _this.__prepareWYSIWYGEditor);
        _this.selection = new modules_1.Select(_this);
        var beforeInitHookResult = _this.beforeInitHook();
        (0, helpers_1.callPromise)(beforeInitHookResult, function () {
            _this.e.fire('beforeInit', _this);
            global_1.pluginSystem.__init(_this);
            _this.e.fire('afterPluginSystemInit', _this);
            _this.e.on('changePlace', function () {
                _this.setReadOnly(_this.o.readonly);
                _this.setDisabled(_this.o.disabled);
            });
            _this.places.length = 0;
            var addPlaceResult = _this.addPlace(element, options);
            global_1.instances[_this.id] = _this;
            var init = function () {
                if (_this.e) {
                    _this.e.fire('afterInit', _this);
                }
                _this.afterInitHook();
                _this.setStatus(modules_1.STATUSES.ready);
                _this.e.fire('afterConstructor', _this);
            };
            (0, helpers_1.callPromise)(addPlaceResult, init);
        });
        return _this;
    }
    Jodit_1 = Jodit;
    Jodit.prototype.className = function () {
        return 'Jodit';
    };
    Jodit.prototype.waitForReady = function () {
        var _this = this;
        if (this.isReady) {
            return Promise.resolve(this);
        }
        return this.async.promise(function (resolve) {
            _this.hookStatus('ready', function () { return resolve(_this); });
        });
    };
    Object.defineProperty(Jodit, "ready", {
        get: function () {
            return new Promise(function (resolve) {
                global_1.eventEmitter.on('oditready', resolve);
            });
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "text", {
        get: function () {
            if (this.editor) {
                return this.editor.innerText || '';
            }
            var div = this.createInside.div();
            div.innerHTML = this.getElementValue();
            return div.innerText || '';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "defaultTimeout", {
        get: function () {
            return (0, helpers_1.isNumber)(this.o.defaultTimeout)
                ? this.o.defaultTimeout
                : config_1.Config.defaultOptions.defaultTimeout;
        },
        enumerable: false,
        configurable: true
    });
    Jodit.atom = function (object) {
        return (0, helpers_1.markAsAtomic)(object);
    };
    Jodit.make = function (element, options) {
        return new this(element, options);
    };
    Jodit.isJoditAssigned = function (element) {
        return (element &&
            (0, helpers_1.isJoditObject)(element.component) &&
            !element.component.isInDestruct);
    };
    Object.defineProperty(Jodit, "defaultOptions", {
        get: function () {
            return config_1.Config.defaultOptions;
        },
        enumerable: false,
        configurable: true
    });
    Jodit.prototype.__setPlaceField = function (field, value) {
        if (!this.currentPlace) {
            this.currentPlace = {};
            this.places = [this.currentPlace];
        }
        this.currentPlace[field] = value;
    };
    Object.defineProperty(Jodit.prototype, "element", {
        get: function () {
            return this.currentPlace.element;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "editor", {
        get: function () {
            return this.currentPlace.editor;
        },
        set: function (editor) {
            this.__setPlaceField('editor', editor);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "container", {
        get: function () {
            return this.currentPlace.container;
        },
        set: function (container) {
            this.__setPlaceField('container', container);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "workplace", {
        get: function () {
            return this.currentPlace.workplace;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "statusbar", {
        get: function () {
            return this.currentPlace.statusbar;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "iframe", {
        get: function () {
            return this.currentPlace.iframe;
        },
        set: function (iframe) {
            this.__setPlaceField('iframe', iframe);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "history", {
        get: function () {
            return this.currentPlace.history;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "observer", {
        get: function () {
            return this.history;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "editorWindow", {
        get: function () {
            return this.currentPlace.editorWindow;
        },
        set: function (win) {
            this.__setPlaceField('editorWindow', win);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "ew", {
        get: function () {
            return this.editorWindow;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "editorDocument", {
        get: function () {
            return this.currentPlace.editorWindow.document;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "ed", {
        get: function () {
            return this.editorDocument;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "options", {
        get: function () {
            return this.currentPlace.options;
        },
        set: function (opt) {
            this.__setPlaceField('options', opt);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "s", {
        get: function () {
            return this.selection;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "uploader", {
        get: function () {
            return this.getInstance('Uploader', this.o.uploader);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "filebrowser", {
        get: function () {
            var jodit = this;
            var options = (0, helpers_1.ConfigProto)({
                defaultTimeout: jodit.defaultTimeout,
                uploader: jodit.o.uploader,
                language: jodit.o.language,
                license: jodit.o.license,
                theme: jodit.o.theme,
                shadowRoot: jodit.o.shadowRoot,
                defaultCallback: function (data) {
                    if (data.files && data.files.length) {
                        data.files.forEach(function (file, i) {
                            var url = data.baseurl + file;
                            var isImage = data.isImages
                                ? data.isImages[i]
                                : false;
                            if (isImage) {
                                jodit.s.insertImage(url, null, jodit.o.imageDefaultWidth);
                            }
                            else {
                                jodit.s.insertNode(jodit.createInside.fromHTML("<a href='".concat(url, "' title='").concat(url, "'>").concat(url, "</a>")));
                            }
                        });
                    }
                }
            }, this.o.filebrowser);
            return jodit.getInstance('FileBrowser', options);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Jodit.prototype, "mode", {
        get: function () {
            return this.__mode;
        },
        set: function (mode) {
            this.setMode(mode);
        },
        enumerable: false,
        configurable: true
    });
    Jodit.prototype.getNativeEditorValue = function () {
        var value = this.e.fire('beforeGetNativeEditorValue');
        if ((0, helpers_1.isString)(value)) {
            return value;
        }
        if (this.editor) {
            return this.editor.innerHTML;
        }
        return this.getElementValue();
    };
    Jodit.prototype.setNativeEditorValue = function (value) {
        var data = {
            value: value
        };
        if (this.e.fire('beforeSetNativeEditorValue', data)) {
            return;
        }
        if (this.editor) {
            this.editor.innerHTML = data.value;
        }
    };
    Object.defineProperty(Jodit.prototype, "value", {
        get: function () {
            return this.getEditorValue();
        },
        set: function (html) {
            this.setEditorValue(html);
            this.history.__processChanges();
        },
        enumerable: false,
        configurable: true
    });
    Jodit.prototype.synchronizeValues = function () {
        this.__imdSynchronizeValues();
    };
    Jodit.prototype.__imdSynchronizeValues = function () {
        this.setEditorValue();
    };
    Jodit.prototype.getEditorValue = function (removeSelectionMarkers, consumer) {
        if (removeSelectionMarkers === void 0) { removeSelectionMarkers = true; }
        var value;
        value = this.e.fire('beforeGetValueFromEditor', consumer);
        if (value !== undefined) {
            return value;
        }
        value = this.getNativeEditorValue().replace(constants.INVISIBLE_SPACE_REG_EXP(), '');
        if (removeSelectionMarkers) {
            value = value.replace(/<span[^>]+id="jodit-selection_marker_[^>]+><\/span>/g, '');
        }
        if (value === '<br>') {
            value = '';
        }
        var new_value = { value: value };
        this.e.fire('afterGetValueFromEditor', new_value, consumer);
        return new_value.value;
    };
    Jodit.prototype.setEditorValue = function (value) {
        var newValue = this.e.fire('beforeSetValueToEditor', value);
        if (newValue === false) {
            return;
        }
        if ((0, helpers_1.isString)(newValue)) {
            value = newValue;
        }
        if (!this.editor) {
            if (value !== undefined) {
                this.__setElementValue(value);
            }
            return;
        }
        if (!(0, helpers_1.isString)(value) && !(0, helpers_1.isVoid)(value)) {
            throw (0, helpers_1.error)('value must be string');
        }
        if (!(0, helpers_1.isVoid)(value) && this.getNativeEditorValue() !== value) {
            this.setNativeEditorValue(value);
        }
        this.e.fire('postProcessSetEditorValue');
        var old_value = this.getElementValue(), new_value = this.getEditorValue();
        if (!this.__isSilentChange &&
            old_value !== new_value &&
            this.__callChangeCount < constants.SAFE_COUNT_CHANGE_CALL) {
            this.__setElementValue(new_value);
            this.__callChangeCount += 1;
            if (false) {}
            try {
                this.history.__upTick();
                this.e.fire('change', new_value, old_value);
                this.e.fire(this.history, 'change', new_value, old_value);
            }
            finally {
                this.__callChangeCount = 0;
            }
        }
    };
    Jodit.prototype.updateElementValue = function () {
        this.__setElementValue(this.getEditorValue());
    };
    Jodit.prototype.getElementValue = function () {
        return this.element.value !== undefined
            ? this.element.value
            : this.element.innerHTML;
    };
    Jodit.prototype.setElementValue = function (value) {
        var oldValue = this.getElementValue();
        if (value === undefined || ((0, helpers_1.isString)(value) && value !== oldValue)) {
            value !== null && value !== void 0 ? value : (value = oldValue);
            if (value !== this.getEditorValue()) {
                this.setEditorValue(value);
            }
        }
        return this.__setElementValue(value);
    };
    Jodit.prototype.__setElementValue = function (value) {
        var _this = this;
        if (!(0, helpers_1.isString)(value)) {
            throw (0, helpers_1.error)('value must be string');
        }
        if (this.element !== this.container &&
            value !== this.getElementValue()) {
            var data_1 = { value: value };
            var res = this.e.fire('beforeSetElementValue', data_1);
            (0, helpers_1.callPromise)(res, function () {
                if (_this.element.value !== undefined) {
                    _this.element.value = data_1.value;
                }
                else {
                    _this.element.innerHTML = data_1.value;
                }
                _this.e.fire('afterSetElementValue', data_1);
            });
        }
    };
    Jodit.prototype.registerCommand = function (commandNameOriginal, command, options) {
        var commandName = commandNameOriginal.toLowerCase();
        var commands = this.commands.get(commandName);
        if (commands === undefined) {
            commands = [];
            this.commands.set(commandName, commands);
        }
        commands.push(command);
        if (!(0, helpers_1.isFunction)(command)) {
            var hotkeys = this.o.commandToHotkeys[commandName] ||
                this.o.commandToHotkeys[commandNameOriginal] ||
                command.hotkeys;
            if (hotkeys) {
                this.registerHotkeyToCommand(hotkeys, commandName, options === null || options === void 0 ? void 0 : options.stopPropagation);
            }
        }
        return this;
    };
    Jodit.prototype.registerHotkeyToCommand = function (hotkeys, commandName, shouldStop) {
        var _this = this;
        if (shouldStop === void 0) { shouldStop = true; }
        var shortcuts = (0, helpers_1.asArray)(hotkeys)
            .map(helpers_1.normalizeKeyAliases)
            .map(function (hotkey) { return hotkey + '.hotkey'; })
            .join(' ');
        this.e
            .off(shortcuts)
            .on(shortcuts, function (type, stop) {
            if (stop) {
                stop.shouldStop = shouldStop !== null && shouldStop !== void 0 ? shouldStop : true;
            }
            return _this.execCommand(commandName);
        });
    };
    Jodit.prototype.execCommand = function (command, showUI, value) {
        var _a;
        var args = [];
        for (var _i = 3; _i < arguments.length; _i++) {
            args[_i - 3] = arguments[_i];
        }
        if (!this.s.isFocused()) {
            this.s.focus();
        }
        if (this.o.readonly &&
            !this.o.allowCommandsInReadOnly.includes(command)) {
            return;
        }
        var result;
        command = command.toLowerCase();
        result = (_a = this.e).fire.apply(_a, tslib_1.__spreadArray(['beforeCommand', command, showUI, value], tslib_1.__read(args), false));
        if (result !== false) {
            result = this.__execCustomCommands.apply(this, tslib_1.__spreadArray([command, showUI, value], tslib_1.__read(args), false));
        }
        if (result !== false) {
            this.s.focus();
            if (command === 'selectall') {
                this.s.select(this.editor, true);
                this.s.expandSelection();
            }
            else {
                try {
                    result = this.nativeExecCommand(command, showUI, value);
                }
                catch (e) {
                    if (false) {}
                }
            }
        }
        this.e.fire('afterCommand', command, showUI, value);
        this.setEditorValue();
        return result;
    };
    Jodit.prototype.nativeExecCommand = function (command, showUI, value) {
        this.__isSilentChange = true;
        try {
            return this.ed.execCommand(command, showUI, value);
        }
        finally {
            this.__isSilentChange = false;
        }
    };
    Jodit.prototype.__execCustomCommands = function (commandName, second, third) {
        var _this = this;
        var args = [];
        for (var _i = 3; _i < arguments.length; _i++) {
            args[_i - 3] = arguments[_i];
        }
        commandName = commandName.toLowerCase();
        var commands = this.commands.get(commandName);
        if (commands !== undefined) {
            var result_1;
            commands.forEach(function (command) {
                var callback;
                if ((0, helpers_1.isFunction)(command)) {
                    callback = command;
                }
                else {
                    callback = command.exec;
                }
                var resultCurrent = callback.call.apply(callback, tslib_1.__spreadArray([_this,
                    commandName,
                    second,
                    third], tslib_1.__read(args), false));
                if (resultCurrent !== undefined) {
                    result_1 = resultCurrent;
                }
            });
            return result_1;
        }
    };
    Jodit.prototype.lock = function (name) {
        if (name === void 0) { name = 'any'; }
        if (_super.prototype.lock.call(this, name)) {
            this.__selectionLocked = this.s.save();
            this.s.clear();
            this.editor.classList.add('jodit_lock');
            this.e.fire('lock', true);
            return true;
        }
        return false;
    };
    Jodit.prototype.unlock = function () {
        if (_super.prototype.unlock.call(this)) {
            this.editor.classList.remove('jodit_lock');
            if (this.__selectionLocked) {
                this.s.restore();
            }
            this.e.fire('lock', false);
            return true;
        }
        return false;
    };
    Jodit.prototype.getMode = function () {
        return this.mode;
    };
    Jodit.prototype.isEditorMode = function () {
        return this.getRealMode() === constants.MODE_WYSIWYG;
    };
    Jodit.prototype.getRealMode = function () {
        if (this.getMode() !== constants.MODE_SPLIT) {
            return this.getMode();
        }
        var active = this.od.activeElement;
        if (active &&
            (active === this.iframe ||
                modules_1.Dom.isOrContains(this.editor, active) ||
                modules_1.Dom.isOrContains(this.toolbar.container, active))) {
            return constants.MODE_WYSIWYG;
        }
        return constants.MODE_SOURCE;
    };
    Jodit.prototype.setMode = function (mode) {
        var _this = this;
        var oldMode = this.getMode();
        var data = {
            mode: parseInt(mode.toString(), 10)
        }, modeClasses = [
            'jodit-wysiwyg_mode',
            'jodit-source__mode',
            'jodit_split_mode'
        ];
        if (this.e.fire('beforeSetMode', data) === false) {
            return;
        }
        this.__mode = [
            constants.MODE_SOURCE,
            constants.MODE_WYSIWYG,
            constants.MODE_SPLIT
        ].includes(data.mode)
            ? data.mode
            : constants.MODE_WYSIWYG;
        if (this.o.saveModeInStorage) {
            this.storage.set('jodit_default_mode', this.mode);
        }
        modeClasses.forEach(function (className) {
            _this.container.classList.remove(className);
        });
        this.container.classList.add(modeClasses[this.mode - 1]);
        if (oldMode !== this.getMode()) {
            this.e.fire('afterSetMode');
        }
    };
    Jodit.prototype.toggleMode = function () {
        var mode = this.getMode();
        if ([
            constants.MODE_SOURCE,
            constants.MODE_WYSIWYG,
            this.o.useSplitMode ? constants.MODE_SPLIT : 9
        ].includes(mode + 1)) {
            mode += 1;
        }
        else {
            mode = constants.MODE_WYSIWYG;
        }
        this.setMode(mode);
    };
    Jodit.prototype.setDisabled = function (isDisabled) {
        this.o.disabled = isDisabled;
        var readOnly = this.__wasReadOnly;
        this.setReadOnly(isDisabled || readOnly);
        this.__wasReadOnly = readOnly;
        if (this.editor) {
            this.editor.setAttribute('aria-disabled', isDisabled.toString());
            this.container.classList.toggle('jodit_disabled', isDisabled);
            this.e.fire('disabled', isDisabled);
        }
    };
    Jodit.prototype.getDisabled = function () {
        return this.o.disabled;
    };
    Jodit.prototype.setReadOnly = function (isReadOnly) {
        if (this.__wasReadOnly === isReadOnly) {
            return;
        }
        this.__wasReadOnly = isReadOnly;
        this.o.readonly = isReadOnly;
        if (isReadOnly) {
            this.editor && this.editor.removeAttribute('contenteditable');
        }
        else {
            this.editor && this.editor.setAttribute('contenteditable', 'true');
        }
        this.e && this.e.fire('readonly', isReadOnly);
    };
    Jodit.prototype.getReadOnly = function () {
        return this.o.readonly;
    };
    Jodit.prototype.focus = function () {
        if (this.getMode() !== constants.MODE_SOURCE) {
            this.s.focus();
        }
    };
    Object.defineProperty(Jodit.prototype, "isFocused", {
        get: function () {
            return this.s.isFocused();
        },
        enumerable: false,
        configurable: true
    });
    Jodit.prototype.beforeInitHook = function () {
    };
    Jodit.prototype.afterInitHook = function () {
    };
    Jodit.prototype.initOptions = function (options) {
        this.options = ((0, helpers_1.ConfigProto)(options || {}, config_1.Config.defaultOptions));
    };
    Jodit.prototype.initOwners = function () {
        this.editorWindow = this.o.ownerWindow;
        this.ownerWindow = this.o.ownerWindow;
    };
    Jodit.prototype.addPlace = function (source, options) {
        var _this = this;
        var element = (0, helpers_1.resolveElement)(source, this.o.shadowRoot || this.od);
        this.attachEvents(options);
        if (element.attributes) {
            (0, helpers_1.toArray)(element.attributes).forEach(function (attr) {
                var name = attr.name;
                var value = attr.value;
                if (config_1.Config.defaultOptions[name] !== undefined &&
                    (!options || options[name] === undefined)) {
                    if (['readonly', 'disabled'].indexOf(name) !== -1) {
                        value = value === '' || value === 'true';
                    }
                    if (/^[0-9]+(\.)?([0-9]+)?$/.test(value.toString())) {
                        value = Number(value);
                    }
                    _this.options[name] = value;
                }
            });
        }
        var container = this.c.div('jodit-container');
        container.classList.add('jodit');
        container.classList.add('jodit-container');
        container.classList.add("jodit_theme_".concat(this.o.theme || 'default'));
        addClassNames(this.o.className, container);
        if (this.o.containerStyle) {
            (0, helpers_1.css)(container, this.o.containerStyle);
        }
        var styleValues = this.o.styleValues;
        Object.keys(styleValues).forEach(function (key) {
            var property = (0, helpers_1.kebabCase)(key);
            container.style.setProperty("--jd-".concat(property), styleValues[key]);
        });
        container.setAttribute('contenteditable', 'false');
        var buffer = null;
        if (this.o.inline) {
            if (['TEXTAREA', 'INPUT'].indexOf(element.nodeName) === -1) {
                container = element;
                element.setAttribute(__defaultClassesKey, element.className.toString());
                buffer = container.innerHTML;
                container.innerHTML = '';
            }
            container.classList.add('jodit_inline');
            container.classList.add('jodit-container');
        }
        if (element !== container) {
            if (element.style.display) {
                element.setAttribute(__defaultStyleDisplayKey, element.style.display);
            }
            element.style.display = 'none';
        }
        var workplace = this.c.div('jodit-workplace', {
            contenteditable: false
        });
        container.appendChild(workplace);
        this.message.destruct();
        this.message = new modules_1.UIMessages(this, workplace);
        if (element.parentNode && element !== container) {
            element.parentNode.insertBefore(container, element);
        }
        Object.defineProperty(element, 'component', {
            enumerable: false,
            configurable: true,
            value: this
        });
        var editor = this.c.div('jodit-wysiwyg', {
            contenteditable: true,
            'aria-disabled': false,
            tabindex: this.o.tabIndex
        });
        workplace.appendChild(editor);
        var currentPlace = {
            editor: editor,
            element: element,
            container: container,
            workplace: workplace,
            statusbar: new modules_1.StatusBar(this, container),
            options: this.isReady
                ? (0, helpers_1.ConfigProto)(options || {}, config_1.Config.defaultOptions)
                : this.options,
            history: new modules_1.History(this),
            editorWindow: this.ow
        };
        this.__elementToPlace.set(editor, currentPlace);
        this.setCurrentPlace(currentPlace);
        this.places.push(currentPlace);
        this.setNativeEditorValue(this.getElementValue());
        var initResult = this.__initEditor(buffer);
        var opt = this.options;
        var init = function () {
            if (opt.enableDragAndDropFileToEditor &&
                opt.uploader &&
                (opt.uploader.url || opt.uploader.insertImageAsBase64URI)) {
                _this.uploader.bind(_this.editor);
            }
            if (!_this.__elementToPlace.get(_this.editor)) {
                _this.__elementToPlace.set(_this.editor, currentPlace);
            }
            _this.e.fire('afterAddPlace', currentPlace);
        };
        return (0, helpers_1.callPromise)(initResult, init);
    };
    Jodit.prototype.addDisclaimer = function (elm) {
        this.workplace.appendChild(elm);
    };
    Jodit.prototype.setCurrentPlace = function (place) {
        if (this.currentPlace === place) {
            return;
        }
        if (!this.isEditorMode()) {
            this.setMode(constants.MODE_WYSIWYG);
        }
        this.currentPlace = place;
        this.buildToolbar();
        if (this.isReady) {
            this.e.fire('changePlace', place);
        }
    };
    Jodit.prototype.__initEditor = function (buffer) {
        var _this = this;
        var result = this.__createEditor();
        return (0, helpers_1.callPromise)(result, function () {
            if (_this.isInDestruct) {
                return;
            }
            if (_this.element !== _this.container) {
                var value = _this.getElementValue();
                if (value !== _this.getEditorValue()) {
                    _this.setEditorValue(value);
                }
            }
            else {
                buffer != null && _this.setEditorValue(buffer);
            }
            var mode = _this.o.defaultMode;
            if (_this.o.saveModeInStorage) {
                var localMode = _this.storage.get('jodit_default_mode');
                if (typeof localMode === 'string') {
                    mode = parseInt(localMode, 10);
                }
            }
            _this.setMode(mode);
            if (_this.o.readonly) {
                _this.__wasReadOnly = false;
                _this.setReadOnly(true);
            }
            if (_this.o.disabled) {
                _this.setDisabled(true);
            }
            try {
                _this.ed.execCommand('defaultParagraphSeparator', false, _this.o.enter.toLowerCase());
            }
            catch (_a) { }
            try {
                _this.ed.execCommand('enableObjectResizing', false, 'false');
            }
            catch (_b) { }
            try {
                _this.ed.execCommand('enableInlineTableEditing', false, 'false');
            }
            catch (_c) { }
        });
    };
    Jodit.prototype.__createEditor = function () {
        var _this = this;
        var defaultEditorArea = this.editor;
        var stayDefault = this.e.fire('createEditor', this);
        return (0, helpers_1.callPromise)(stayDefault, function () {
            if (_this.isInDestruct) {
                return;
            }
            if (stayDefault === false || (0, helpers_1.isPromise)(stayDefault)) {
                modules_1.Dom.safeRemove(defaultEditorArea);
            }
            addClassNames(_this.o.editorClassName || _this.o.editorCssClass, _this.editor);
            if (_this.o.editorCssClass) {
                _this.editor.classList.add(_this.o.editorCssClass);
            }
            if (_this.o.style) {
                (0, helpers_1.css)(_this.editor, _this.o.style);
            }
            _this.e
                .on('synchro', function () {
                _this.setEditorValue();
            })
                .on('focus', function () {
                _this.editorIsActive = true;
            })
                .on('blur', function () { return (_this.editorIsActive = false); });
            _this.__prepareWYSIWYGEditor();
            if (_this.o.direction) {
                var direction = _this.o.direction.toLowerCase() === 'rtl' ? 'rtl' : 'ltr';
                _this.container.style.direction = direction;
                _this.container.setAttribute('dir', direction);
                _this.toolbar.setDirection(direction);
            }
            if (_this.o.triggerChangeEvent) {
                _this.e.on('change', _this.async.debounce(function () {
                    _this.e && _this.e.fire(_this.element, 'change');
                }, _this.defaultTimeout));
            }
        });
    };
    Jodit.prototype.__prepareWYSIWYGEditor = function () {
        var _this = this;
        var editor = this.editor;
        if (this.o.direction) {
            var direction = this.o.direction.toLowerCase() === 'rtl' ? 'rtl' : 'ltr';
            this.editor.style.direction = direction;
            this.editor.setAttribute('dir', direction);
        }
        this.e
            .on(editor, 'mousedown touchstart focus', function () {
            var place = _this.__elementToPlace.get(editor);
            if (place) {
                _this.setCurrentPlace(place);
            }
        })
            .on(editor, 'compositionend', this.synchronizeValues)
            .on(editor, 'selectionchange selectionstart keydown keyup input keypress dblclick mousedown mouseup ' +
            'click copy cut dragstart drop dragover paste resize touchstart touchend focus blur', function (event) {
            if (_this.o.readonly || _this.__isSilentChange) {
                return;
            }
            var w = _this.ew;
            if (event instanceof w.KeyboardEvent &&
                event.isComposing) {
                return;
            }
            if (_this.e && _this.e.fire) {
                if (_this.e.fire(event.type, event) === false) {
                    return false;
                }
                _this.synchronizeValues();
            }
        });
    };
    Jodit.prototype.fetch = function (url, options) {
        var _this = this;
        var ajax = new request_1.Ajax(tslib_1.__assign({ url: url }, options), this.o.defaultAjaxOptions);
        var destroy = function () {
            _this.e.off('beforeDestruct', destroy);
            _this.progressbar.progress(100).hide();
            ajax.destruct();
        };
        this.e.one('beforeDestruct', destroy);
        this.progressbar.show().progress(30);
        var promise = ajax.send();
        promise.finally(destroy).catch(function () { return null; });
        return promise;
    };
    Jodit.prototype.destruct = function () {
        var _this = this;
        if (this.isInDestruct) {
            return;
        }
        this.setStatus(modules_1.STATUSES.beforeDestruct);
        this.__elementToPlace.clear();
        if (!this.editor) {
            return;
        }
        var buffer = this.getEditorValue();
        this.storage.clear();
        this.buffer.clear();
        this.commands.clear();
        this.__selectionLocked = null;
        this.e.off(this.ow, 'resize');
        this.e.off(this.ow);
        this.e.off(this.od);
        this.e.off(this.od.body);
        this.places.forEach(function (_a) {
            var container = _a.container, workplace = _a.workplace, statusbar = _a.statusbar, element = _a.element, iframe = _a.iframe, editor = _a.editor, history = _a.history;
            if (element !== container) {
                if (element.hasAttribute(__defaultStyleDisplayKey)) {
                    var display = (0, helpers_1.attr)(element, __defaultStyleDisplayKey);
                    if (display) {
                        element.style.display = display;
                        element.removeAttribute(__defaultStyleDisplayKey);
                    }
                }
                else {
                    element.style.display = '';
                }
            }
            else {
                if (element.hasAttribute(__defaultClassesKey)) {
                    element.className =
                        (0, helpers_1.attr)(element, __defaultClassesKey) || '';
                    element.removeAttribute(__defaultClassesKey);
                }
            }
            if (element.hasAttribute('style') && !(0, helpers_1.attr)(element, 'style')) {
                element.removeAttribute('style');
            }
            statusbar.destruct();
            _this.e.off(container);
            _this.e.off(element);
            _this.e.off(editor);
            modules_1.Dom.safeRemove(workplace);
            modules_1.Dom.safeRemove(editor);
            if (container !== element) {
                modules_1.Dom.safeRemove(container);
            }
            Object.defineProperty(element, 'component', {
                enumerable: false,
                configurable: true,
                value: null
            });
            modules_1.Dom.safeRemove(iframe);
            if (container === element) {
                element.innerHTML = buffer;
            }
            history.destruct();
        });
        this.places.length = 0;
        this.currentPlace = {};
        delete global_1.instances[this.id];
        _super.prototype.destruct.call(this);
    };
    var Jodit_1;
    Jodit.fatMode = false;
    Jodit.plugins = global_1.pluginSystem;
    Jodit.modules = global_1.modules;
    Jodit.ns = global_1.modules;
    Jodit.decorators = {};
    Jodit.constants = constants;
    Jodit.instances = global_1.instances;
    Jodit.lang = constants_1.lang;
    Jodit.core = {
        Plugin: modules_1.Plugin
    };
    tslib_1.__decorate([
        decorators_1.cache
    ], Jodit.prototype, "uploader", null);
    tslib_1.__decorate([
        decorators_1.cache
    ], Jodit.prototype, "filebrowser", null);
    tslib_1.__decorate([
        (0, decorators_1.throttle)()
    ], Jodit.prototype, "synchronizeValues", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':internalChange')
    ], Jodit.prototype, "updateElementValue", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Jodit.prototype, "__prepareWYSIWYGEditor", null);
    Jodit = Jodit_1 = tslib_1.__decorate([
        (0, decorators_1.derive)(traits_1.Dlgs)
    ], Jodit);
    return Jodit;
}(modules_1.ViewWithToolbar));
exports.Jodit = Jodit;
function addClassNames(className, elm) {
    if (className) {
        className.split(/\s+/).forEach(function (cn) { return elm.classList.add(cn); });
    }
}


/***/ }),

/***/ 26435:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var checker_1 = __webpack_require__(10172);
var exp = {};
if (true) {
    var ar = __webpack_require__(90643);
    var cs_cz = __webpack_require__(52532);
    var de = __webpack_require__(75178);
    var en = __webpack_require__(51048);
    var es = __webpack_require__(22999);
    var fr = __webpack_require__(34145);
    var he = __webpack_require__(40272);
    var hu = __webpack_require__(2978);
    var id = __webpack_require__(99113);
    var it = __webpack_require__(51923);
    var ja = __webpack_require__(21268);
    var ko = __webpack_require__(37289);
    var mn = __webpack_require__(26501);
    var nl = __webpack_require__(17084);
    var pl = __webpack_require__(96891);
    var pt_br = __webpack_require__(31211);
    var ru = __webpack_require__(31109);
    var tr = __webpack_require__(79375);
    var zh_cn = __webpack_require__(21042);
    var zh_tw = __webpack_require__(73895);
    exp = {
        ar: ar,
        cs_cz: cs_cz,
        de: de,
        en: en,
        es: es,
        fr: fr,
        he: he,
        hu: hu,
        id: id,
        it: it,
        ja: ja,
        ko: ko,
        mn: mn,
        nl: nl,
        pl: pl,
        pt_br: pt_br,
        ru: ru,
        tr: tr,
        zh_cn: zh_cn,
        zh_tw: zh_tw
    };
}
var keys = __webpack_require__(11399);
var get = function (value) {
    return value ? value.default || value : {};
}, hashLang = {};
if ((0, checker_1.isArray)(get(keys))) {
    get(keys).forEach(function (key, index) {
        hashLang[index] = key;
    });
}
Object.keys(exp).forEach(function (lang) {
    var list = get(exp[lang]);
    if ((0, checker_1.isArray)(list)) {
        exp[lang] = {};
        list.forEach(function (value, index) {
            exp[lang][hashLang[index]] = value;
        });
    }
    else {
        exp[lang] = list;
    }
});
exports["default"] = exp;


/***/ }),

/***/ 60403:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ContextMenu = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(47086);
var popup_1 = __webpack_require__(35799);
var button_1 = __webpack_require__(96516);
var checker_1 = __webpack_require__(10172);
var component_1 = __webpack_require__(11441);
var ContextMenu = (function (_super) {
    tslib_1.__extends(ContextMenu, _super);
    function ContextMenu() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ContextMenu.prototype.className = function () {
        return 'ContextMenu';
    };
    ContextMenu.prototype.show = function (x, y, actions) {
        var _this = this;
        var self = this, content = this.j.c.div(this.getFullElName('actions'));
        if (!(0, checker_1.isArray)(actions)) {
            return;
        }
        actions.forEach(function (item) {
            if (!item) {
                return;
            }
            var action = (0, button_1.Button)(_this.jodit, item.icon || 'empty', item.title);
            _this.jodit && action.setParentView(_this.jodit);
            action.setMod('context', 'menu');
            action.onAction(function (e) {
                var _a;
                (_a = item.exec) === null || _a === void 0 ? void 0 : _a.call(self, e);
                self.close();
                return false;
            });
            content.appendChild(action.container);
        });
        this.setContent(content).open(function () { return ({ left: x, top: y, width: 0, height: 0 }); }, true);
    };
    ContextMenu = tslib_1.__decorate([
        component_1.component
    ], ContextMenu);
    return ContextMenu;
}(popup_1.Popup));
exports.ContextMenu = ContextMenu;


/***/ }),

/***/ 97528:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Alert = void 0;
var dialog_1 = __webpack_require__(6690);
var helpers_1 = __webpack_require__(40332);
var dom_1 = __webpack_require__(64968);
var ui_1 = __webpack_require__(2074);
function Alert(msg, title, callback, className) {
    if (className === void 0) { className = 'jodit-dialog_alert'; }
    if ((0, helpers_1.isFunction)(title)) {
        callback = title;
        title = undefined;
    }
    var dialog = this instanceof dialog_1.Dialog ? this : new dialog_1.Dialog(), container = dialog.c.div(className), okButton = (0, ui_1.Button)(dialog, 'ok', 'Ok');
    (0, helpers_1.asArray)(msg).forEach(function (oneMessage) {
        container.appendChild(dom_1.Dom.isNode(oneMessage) ? oneMessage : dialog.c.fromHTML(oneMessage));
    });
    okButton.onAction(function () {
        if (!callback || !(0, helpers_1.isFunction)(callback) || callback(dialog) !== false) {
            dialog.close();
        }
    });
    dialog.setFooter([okButton]);
    dialog.open(container, title || '&nbsp;', true, true);
    okButton.focus();
    return dialog;
}
exports.Alert = Alert;


/***/ }),

/***/ 47360:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Confirm = void 0;
var dialog_1 = __webpack_require__(6690);
var is_function_1 = __webpack_require__(42096);
var button_1 = __webpack_require__(96031);
function Confirm(msg, title, callback) {
    var dialog = this instanceof dialog_1.Dialog ? this : new dialog_1.Dialog(), $div = dialog.c.fromHTML('<form class="jodit-dialog_prompt"></form>'), $label = dialog.c.element('label');
    if ((0, is_function_1.isFunction)(title)) {
        callback = title;
        title = undefined;
    }
    $label.appendChild(dialog.c.fromHTML(msg));
    $div.appendChild($label);
    var action = function (yes) { return function () {
        if (!callback || callback(yes) !== false) {
            dialog.close();
        }
    }; };
    var $cancel = (0, button_1.Button)(dialog, 'cancel', 'Cancel');
    var $ok = (0, button_1.Button)(dialog, 'ok', 'Yes');
    $cancel.onAction(action(false));
    $ok.onAction(action(true));
    dialog.e.on($div, 'submit', function () {
        action(true)();
        return false;
    });
    dialog.setFooter([$ok, $cancel]);
    dialog.open($div, title || '&nbsp;', true, true);
    $ok.focus();
    return dialog;
}
exports.Confirm = Confirm;


/***/ }),

/***/ 6690:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Dialog = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(16462);
var config_1 = __webpack_require__(93166);
var constants_1 = __webpack_require__(86893);
var helpers_1 = __webpack_require__(40332);
var assert_1 = __webpack_require__(52378);
var view_with_toolbar_1 = __webpack_require__(43608);
var dom_1 = __webpack_require__(64968);
var component_1 = __webpack_require__(56562);
var global_1 = __webpack_require__(17332);
var decorators_1 = __webpack_require__(43441);
var view_1 = __webpack_require__(75902);
var ui_1 = __webpack_require__(2074);
var messages_1 = __webpack_require__(71014);
config_1.Config.prototype.dialog = {
    namespace: '',
    extraButtons: [],
    resizable: true,
    draggable: true,
    buttons: ['dialog.close'],
    removeButtons: [],
    toolbarButtonSize: 'middle',
    zIndex: 'inherit'
};
config_1.Config.prototype.controls.dialog = {
    close: {
        icon: 'cancel',
        exec: function (dialog) {
            dialog.close();
        }
    }
};
var Dialog = (function (_super) {
    tslib_1.__extends(Dialog, _super);
    function Dialog(options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, options) || this;
        _this.destroyAfterClose = false;
        _this.moved = false;
        _this.resizable = false;
        _this.draggable = false;
        _this.startX = 0;
        _this.startY = 0;
        _this.startPoint = { x: 0, y: 0, w: 0, h: 0 };
        _this.lockSelect = function () {
            _this.setMod('moved', true);
        };
        _this.unlockSelect = function () {
            _this.setMod('moved', false);
        };
        _this.onResize = function () {
            if (_this.options &&
                _this.o.resizable &&
                !_this.moved &&
                _this.isOpened &&
                !_this.offsetX &&
                !_this.offsetY) {
                _this.setPosition();
            }
        };
        _this.isModal = false;
        _this.isOpened = false;
        var self = _this;
        self.options = (0, helpers_1.ConfigProto)(options, (0, helpers_1.ConfigProto)(config_1.Config.prototype.dialog, view_1.View.defaultOptions));
        dom_1.Dom.safeRemove(self.container);
        var n = _this.getFullElName.bind(_this);
        self.container = _this.c.fromHTML("<div class=\"jodit jodit-dialog ".concat(_this.componentName, "\">\n\t\t\t\t<div class=\"").concat(n('overlay'), "\"></div>\n\t\t\t\t<div class=\"").concat(_this.getFullElName('panel'), "\">\n\t\t\t\t\t<div class=\"").concat(n('header'), "\">\n\t\t\t\t\t\t<div class=\"").concat(n('header-title'), "\"></div>\n\t\t\t\t\t\t<div class=\"").concat(n('header-toolbar'), "\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"").concat(n('content'), "\"></div>\n\t\t\t\t\t<div class=\"").concat(n('footer'), "\"></div>\n\t\t\t\t\t<div class=\"").concat(n('resizer'), "\">").concat(ui_1.Icon.get('resize_handler'), "</div>\n\t\t\t\t</div>\n\t\t\t</div>"));
        if (_this.o.zIndex) {
            _this.container.style.zIndex = _this.o.zIndex.toString();
        }
        (0, helpers_1.attr)(self.container, 'role', 'dialog');
        Object.defineProperty(self.container, 'component', {
            value: _this
        });
        self.setMod('theme', self.o.theme || 'default').setMod('resizable', Boolean(self.o.resizable));
        var dialog = self.getElm('panel');
        void 0;
        var resizer = self.getElm('resizer');
        void 0;
        var dialogbox_header = self.getElm('header-title');
        void 0;
        var dialogbox_content = self.getElm('content');
        void 0;
        var dialogbox_footer = self.getElm('footer');
        void 0;
        var dialogbox_toolbar = self.getElm('header-toolbar');
        void 0;
        _this.message.destruct();
        _this.message = new messages_1.UIMessages(_this, dialog);
        _this.dialog = dialog;
        _this.resizer = resizer;
        _this.dialogbox_header = dialogbox_header;
        _this.dialogbox_content = dialogbox_content;
        _this.dialogbox_footer = dialogbox_footer;
        _this.dialogbox_toolbar = dialogbox_toolbar;
        (0, helpers_1.css)(self.dialog, {
            maxWidth: self.options.maxWidth,
            minHeight: self.options.minHeight,
            minWidth: self.options.minWidth
        });
        var headerBox = self.getElm('header');
        headerBox &&
            self.e.on(headerBox, 'pointerdown touchstart', self.onHeaderMouseDown);
        self.e.on(self.resizer, 'mousedown touchstart', self.onResizerMouseDown);
        var fullSize = global_1.pluginSystem.get('fullsize');
        (0, helpers_1.isFunction)(fullSize) && fullSize(self);
        _this.e
            .on(self.container, 'close_dialog', self.close)
            .on(_this.ow, 'keydown', _this.onEsc)
            .on(_this.ow, 'resize', _this.onResize);
        return _this;
    }
    Dialog.prototype.className = function () {
        return 'Dialog';
    };
    Object.defineProperty(Dialog.prototype, "destination", {
        get: function () {
            var _a;
            return ((_a = this.o.shadowRoot) !== null && _a !== void 0 ? _a : this.od.body);
        },
        enumerable: false,
        configurable: true
    });
    Dialog.prototype.setElements = function (root, elements) {
        var _this = this;
        var elements_list = [];
        (0, helpers_1.asArray)(elements).forEach(function (elm) {
            if ((0, helpers_1.isArray)(elm)) {
                var div = _this.c.div(_this.getFullElName('column'));
                elements_list.push(div);
                root.appendChild(div);
                return _this.setElements(div, elm);
            }
            var element;
            if ((0, helpers_1.isString)(elm)) {
                element = _this.c.fromHTML(elm);
            }
            else {
                element = (0, helpers_1.hasContainer)(elm) ? elm.container : elm;
            }
            elements_list.push(element);
            if (element.parentNode !== root) {
                root.appendChild(element);
            }
        });
        (0, helpers_1.toArray)(root.childNodes).forEach(function (elm) {
            if (elements_list.indexOf(elm) === -1) {
                root.removeChild(elm);
            }
        });
    };
    Dialog.prototype.onMouseUp = function () {
        if (this.draggable || this.resizable) {
            this.removeGlobalResizeListeners();
            this.draggable = false;
            this.resizable = false;
            this.unlockSelect();
            if (this.e) {
                this.removeGlobalResizeListeners();
                this.e.fire(this, 'endResize endMove');
            }
        }
    };
    Dialog.prototype.onHeaderMouseDown = function (e) {
        var target = e.target;
        if (!this.o.draggable ||
            (target && target.nodeName.match(/^(INPUT|SELECT)$/))) {
            return;
        }
        this.draggable = true;
        this.startX = e.clientX;
        this.startY = e.clientY;
        this.startPoint.x = (0, helpers_1.css)(this.dialog, 'left');
        this.startPoint.y = (0, helpers_1.css)(this.dialog, 'top');
        this.setMaxZIndex();
        if (e.cancelable) {
            e.preventDefault();
        }
        this.lockSelect();
        this.addGlobalResizeListeners();
        if (this.e) {
            this.e.fire(this, 'startMove');
        }
    };
    Dialog.prototype.onMouseMove = function (e) {
        if (this.draggable && this.o.draggable) {
            this.setPosition(this.startPoint.x + e.clientX - this.startX, this.startPoint.y + e.clientY - this.startY);
            if (this.e) {
                this.e.fire(this, 'move', e.clientX - this.startX, e.clientY - this.startY);
            }
            e.stopImmediatePropagation();
        }
        if (this.resizable && this.o.resizable) {
            this.setSize(this.startPoint.w + e.clientX - this.startX, this.startPoint.h + e.clientY - this.startY);
            if (this.e) {
                this.e.fire(this, 'resizeDialog', e.clientX - this.startX, e.clientY - this.startY);
            }
        }
    };
    Dialog.prototype.onEsc = function (e) {
        if (this.isOpened &&
            e.key === constants_1.KEY_ESC &&
            this.getMod('static') !== true) {
            var me = this.getMaxZIndexDialog();
            if (me) {
                me.close();
            }
            else {
                this.close();
            }
            e.stopImmediatePropagation();
        }
    };
    Dialog.prototype.onResizerMouseDown = function (e) {
        this.resizable = true;
        this.startX = e.clientX;
        this.startY = e.clientY;
        this.startPoint.w = this.dialog.offsetWidth;
        this.startPoint.h = this.dialog.offsetHeight;
        this.lockSelect();
        this.addGlobalResizeListeners();
        if (this.e) {
            this.e.fire(this, 'startResize');
        }
    };
    Dialog.prototype.addGlobalResizeListeners = function () {
        var self = this;
        self.e
            .on(self.ow, 'pointermove touchmove', self.onMouseMove)
            .on(self.ow, 'pointerup touchend', self.onMouseUp);
    };
    Dialog.prototype.removeGlobalResizeListeners = function () {
        var self = this;
        self.e
            .off(self.ow, 'mousemove pointermove', self.onMouseMove)
            .off(self.ow, 'mouseup pointerup', self.onMouseUp);
    };
    Dialog.prototype.setSize = function (w, h) {
        if (w == null) {
            w = this.dialog.offsetWidth;
        }
        if (h == null) {
            h = this.dialog.offsetHeight;
        }
        (0, helpers_1.css)(this.dialog, {
            width: w,
            height: h
        });
        return this;
    };
    Dialog.prototype.calcAutoSize = function () {
        this.setSize('auto', 'auto');
        this.setSize();
        return this;
    };
    Dialog.prototype.setPosition = function (x, y) {
        var w = this.ow.innerWidth, h = this.ow.innerHeight;
        var left = w / 2 - this.dialog.offsetWidth / 2, top = h / 2 - this.dialog.offsetHeight / 2;
        if (left < 0) {
            left = 0;
        }
        if (top < 0) {
            top = 0;
        }
        if (x !== undefined && y !== undefined) {
            this.offsetX = x;
            this.offsetY = y;
            this.moved = Math.abs(x - left) > 100 || Math.abs(y - top) > 100;
        }
        this.dialog.style.left = (x || left) + 'px';
        this.dialog.style.top = (y || top) + 'px';
        return this;
    };
    Dialog.prototype.setHeader = function (content) {
        this.setElements(this.dialogbox_header, content);
        return this;
    };
    Dialog.prototype.setContent = function (content) {
        this.setElements(this.dialogbox_content, content);
        return this;
    };
    Dialog.prototype.setFooter = function (content) {
        this.setElements(this.dialogbox_footer, content);
        this.setMod('footer', Boolean(content));
        return this;
    };
    Dialog.prototype.getZIndex = function () {
        return parseInt((0, helpers_1.css)(this.container, 'zIndex'), 10) || 0;
    };
    Dialog.prototype.getMaxZIndexDialog = function () {
        var maxZi = 0, dlg, zIndex, res = this;
        (0, helpers_1.$$)('.jodit-dialog', this.destination).forEach(function (dialog) {
            dlg = dialog.component;
            zIndex = parseInt((0, helpers_1.css)(dialog, 'zIndex'), 10);
            if (dlg.isOpened && !isNaN(zIndex) && zIndex > maxZi) {
                res = dlg;
                maxZi = zIndex;
            }
        });
        return res;
    };
    Dialog.prototype.setMaxZIndex = function () {
        if (this.getMod('static'))
            return;
        var maxZIndex = 20000004, zIndex = 0;
        (0, helpers_1.$$)('.jodit-dialog', this.destination).forEach(function (dialog) {
            zIndex = parseInt((0, helpers_1.css)(dialog, 'zIndex'), 10);
            maxZIndex = Math.max(isNaN(zIndex) ? 0 : zIndex, maxZIndex);
        });
        this.container.style.zIndex = (maxZIndex + 1).toString();
    };
    Dialog.prototype.toggleFullSize = function (isFullSize) {
        if ((0, helpers_1.isVoid)(isFullSize)) {
            isFullSize = !this.getMod('fullsize');
        }
        this.setMod('fullsize', isFullSize);
        _super.prototype.toggleFullSize.call(this, isFullSize);
    };
    Dialog.prototype.open = function (contentOrClose, titleOrModal, destroyAfterClose, modal) {
        global_1.eventEmitter.fire('closeAllPopups hideHelpers');
        if (this.e.fire(this, 'beforeOpen') === false) {
            return this;
        }
        if ((0, helpers_1.isBoolean)(contentOrClose)) {
            destroyAfterClose = contentOrClose;
        }
        if ((0, helpers_1.isBoolean)(titleOrModal)) {
            modal = titleOrModal;
        }
        this.destroyAfterClose = destroyAfterClose === true;
        var content = (0, helpers_1.isBoolean)(contentOrClose) ? undefined : contentOrClose;
        var title = (0, helpers_1.isBoolean)(titleOrModal) ? undefined : titleOrModal;
        if (title !== undefined) {
            this.setHeader(title);
        }
        if (content) {
            this.setContent(content);
        }
        this.setMod('active', true);
        this.isOpened = true;
        this.setModal(modal);
        this.destination.appendChild(this.container);
        if (this.getMod('static') !== true) {
            this.setPosition(this.offsetX, this.offsetY);
            this.setMaxZIndex();
        }
        else {
            this.container.style.removeProperty('z-index');
        }
        if (this.o.fullsize) {
            this.toggleFullSize(true);
        }
        this.e.fire('afterOpen', this);
        return this;
    };
    Dialog.prototype.setModal = function (modal) {
        this.isModal = Boolean(modal);
        this.setMod('modal', this.isModal);
        return this;
    };
    Dialog.prototype.close = function () {
        if (this.isDestructed ||
            !this.isOpened ||
            this.getMod('static') === true) {
            return this;
        }
        if (this.e.fire('beforeClose', this) === false) {
            return this;
        }
        this.setMod('active', false);
        this.isOpened = false;
        if (this.isFullSize) {
            this.toggleFullSize(false);
        }
        dom_1.Dom.safeRemove(this.container);
        this.removeGlobalResizeListeners();
        if (this.destroyAfterClose) {
            this.destruct();
        }
        this.e.fire(this, 'afterClose');
        this.e.fire(this.ow, 'joditCloseDialog');
        return this;
    };
    Dialog.prototype.buildToolbar = function () {
        this.o.buttons &&
            this.toolbar
                .build((0, helpers_1.splitArray)(this.o.buttons))
                .setMod('mode', 'header')
                .appendTo(this.dialogbox_toolbar);
    };
    Dialog.prototype.destruct = function () {
        if (this.isInDestruct) {
            return;
        }
        this.setStatus(component_1.STATUSES.beforeDestruct);
        if (this.isOpened) {
            this.close();
        }
        if (this.events) {
            this.removeGlobalResizeListeners();
            this.events
                .off(this.container, 'close_dialog', self.close)
                .off(this.ow, 'keydown', this.onEsc)
                .off(this.ow, 'resize', this.onResize);
        }
        _super.prototype.destruct.call(this);
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], Dialog.prototype, "onMouseUp", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Dialog.prototype, "onHeaderMouseDown", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Dialog.prototype, "onMouseMove", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Dialog.prototype, "onEsc", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Dialog.prototype, "onResizerMouseDown", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], Dialog.prototype, "close", null);
    tslib_1.__decorate([
        (0, decorators_1.hook)('ready')
    ], Dialog.prototype, "buildToolbar", null);
    Dialog = tslib_1.__decorate([
        decorators_1.component
    ], Dialog);
    return Dialog;
}(view_with_toolbar_1.ViewWithToolbar));
exports.Dialog = Dialog;


/***/ }),

/***/ 92080:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Confirm = exports.Prompt = exports.Alert = exports.Dialog = void 0;
var dialog_1 = __webpack_require__(6690);
Object.defineProperty(exports, "Dialog", ({ enumerable: true, get: function () { return dialog_1.Dialog; } }));
var alert_1 = __webpack_require__(97528);
Object.defineProperty(exports, "Alert", ({ enumerable: true, get: function () { return alert_1.Alert; } }));
var prompt_1 = __webpack_require__(35789);
Object.defineProperty(exports, "Prompt", ({ enumerable: true, get: function () { return prompt_1.Prompt; } }));
var confirm_1 = __webpack_require__(47360);
Object.defineProperty(exports, "Confirm", ({ enumerable: true, get: function () { return confirm_1.Confirm; } }));


/***/ }),

/***/ 35789:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Prompt = void 0;
var dialog_1 = __webpack_require__(92080);
var ui_1 = __webpack_require__(2074);
var helpers_1 = __webpack_require__(40332);
function Prompt(msg, title, callback, placeholder, defaultValue) {
    var dialog = this instanceof dialog_1.Dialog ? this : new dialog_1.Dialog(), cancelButton = (0, ui_1.Button)(dialog, 'cancel', 'Cancel'), okButton = (0, ui_1.Button)(dialog, 'ok', 'Ok'), form = dialog.c.element('form', {
        class: 'jodit-dialog_prompt'
    }), inputElement = dialog.c.element('input', {
        autofocus: true,
        class: 'jodit-input'
    }), labelElement = dialog.c.element('label');
    if ((0, helpers_1.isFunction)(title)) {
        callback = title;
        title = undefined;
    }
    if (placeholder) {
        (0, helpers_1.attr)(inputElement, 'placeholder', placeholder);
    }
    labelElement.appendChild(dialog.c.text(msg));
    form.appendChild(labelElement);
    form.appendChild(inputElement);
    cancelButton.onAction(dialog.close);
    var onclick = function () {
        if (!callback ||
            !(0, helpers_1.isFunction)(callback) ||
            callback(inputElement.value) !== false) {
            dialog.close();
        }
    };
    okButton.onAction(onclick);
    dialog.e.on(form, 'submit', function () {
        onclick();
        return false;
    });
    dialog.setFooter([okButton, cancelButton]);
    dialog.open(form, title || '&nbsp;', true, true);
    inputElement.focus();
    if (defaultValue !== undefined && defaultValue.length) {
        inputElement.value = defaultValue;
        inputElement.select();
    }
    return dialog;
}
exports.Prompt = Prompt;


/***/ }),

/***/ 34468:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var factories_1 = __webpack_require__(46341);
var ui_1 = __webpack_require__(2074);
var native_listeners_1 = __webpack_require__(21347);
var image_editor_1 = __webpack_require__(35503);
var elements_map_1 = __webpack_require__(66267);
var load_tree_1 = __webpack_require__(36303);
var delete_file_1 = __webpack_require__(48096);
var CLASS_PREVIEW = 'jodit-filebrowser-preview', preview_tpl_next = function (next, right) {
    if (next === void 0) { next = 'next'; }
    if (right === void 0) { right = 'right'; }
    return "<div class=\"".concat(CLASS_PREVIEW, "__navigation ").concat(CLASS_PREVIEW, "__navigation_arrow_").concat(next, "\">") +
        '' +
        ui_1.Icon.get('angle-' + right) +
        '</a>';
};
exports["default"] = (function (self) {
    if (!self.o.contextMenu) {
        return function () { };
    }
    var contextmenu = (0, factories_1.makeContextMenu)(self);
    return function (e) {
        var a = (0, native_listeners_1.getItem)(e.target, self.container);
        if (!a) {
            return;
        }
        var item = a;
        var opt = self.options, ga = function (key) { return (0, helpers_1.attr)(item, key) || ''; };
        self.async.setTimeout(function () {
            var selectedItem = (0, native_listeners_1.elementToItem)(a, (0, elements_map_1.elementsMap)(self));
            if (!selectedItem) {
                return;
            }
            self.state.activeElements = [selectedItem];
            contextmenu.show(e.clientX, e.clientY, [
                ga('data-is-file') !== '1' &&
                    opt.editImage &&
                    (self.dataProvider.canI('ImageResize') ||
                        self.dataProvider.canI('ImageCrop'))
                    ? {
                        icon: 'pencil',
                        title: 'Edit',
                        exec: function () {
                            return image_editor_1.openImageEditor.call(self, ga('href'), ga('data-name'), ga('data-path'), ga('data-source'));
                        }
                    }
                    : false,
                self.dataProvider.canI('FileRename')
                    ? {
                        icon: 'italic',
                        title: 'Rename',
                        exec: function () {
                            self.e.fire('fileRename.filebrowser', ga('data-name'), ga('data-path'), ga('data-source'));
                        }
                    }
                    : false,
                self.dataProvider.canI('FileRemove')
                    ? {
                        icon: 'bin',
                        title: 'Delete',
                        exec: function () { return tslib_1.__awaiter(void 0, void 0, Promise, function () {
                            var e_1;
                            return tslib_1.__generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        _a.trys.push([0, 2, , 3]);
                                        return [4, (0, delete_file_1.deleteFile)(self, ga('data-name'), ga('data-source'))];
                                    case 1:
                                        _a.sent();
                                        return [3, 3];
                                    case 2:
                                        e_1 = _a.sent();
                                        return [2, self.status(e_1)];
                                    case 3:
                                        self.state.activeElements = [];
                                        return [2, (0, load_tree_1.loadTree)(self).catch(self.status)];
                                }
                            });
                        }); }
                    }
                    : false,
                opt.preview
                    ? {
                        icon: 'eye',
                        title: 'Preview',
                        exec: function () {
                            var preview = self.dlg({
                                buttons: ['fullsize', 'dialog.close']
                            }), temp_content = self.c.div(CLASS_PREVIEW, '<div class="jodit-icon_loader"></div>'), preview_box = self.c.div(CLASS_PREVIEW + '__box'), next = self.c.fromHTML(preview_tpl_next()), prev = self.c.fromHTML(preview_tpl_next('prev', 'left')), addLoadHandler = function (src) {
                                var image = self.c.element('img');
                                image.setAttribute('src', src);
                                var onload = function () {
                                    var _a;
                                    if (self.isInDestruct) {
                                        return;
                                    }
                                    self.e.off(image, 'load');
                                    dom_1.Dom.detach(temp_content);
                                    if (opt.showPreviewNavigation) {
                                        if (dom_1.Dom.prevWithClass(item, self.files.getFullElName('item'))) {
                                            temp_content.appendChild(prev);
                                        }
                                        if (dom_1.Dom.nextWithClass(item, self.files.getFullElName('item'))) {
                                            temp_content.appendChild(next);
                                        }
                                    }
                                    temp_content.appendChild(preview_box);
                                    preview_box.appendChild(image);
                                    preview.setPosition();
                                    (_a = self === null || self === void 0 ? void 0 : self.events) === null || _a === void 0 ? void 0 : _a.fire('previewOpenedAndLoaded');
                                };
                                self.e.on(image, 'load', onload);
                                if (image.complete) {
                                    onload();
                                }
                            };
                            self.e.on([next, prev], 'click', function () {
                                if (this === next) {
                                    item = dom_1.Dom.nextWithClass(item, self.files.getFullElName('item'));
                                }
                                else {
                                    item = dom_1.Dom.prevWithClass(item, self.files.getFullElName('item'));
                                }
                                if (!item) {
                                    throw (0, helpers_1.error)('Need element');
                                }
                                dom_1.Dom.detach(temp_content);
                                dom_1.Dom.detach(preview_box);
                                temp_content.innerHTML =
                                    '<div class="jodit-icon_loader"></div>';
                                addLoadHandler(ga('href'));
                            });
                            self.e.on('beforeDestruct', function () {
                                preview.destruct();
                            });
                            preview.container.classList.add(CLASS_PREVIEW + '__dialog');
                            preview.setContent(temp_content);
                            preview.setPosition();
                            preview.open();
                            addLoadHandler(ga('href'));
                            self.events
                                .on('beforeDestruct', function () {
                                preview.destruct();
                            })
                                .fire('previewOpened');
                        }
                    }
                    : false,
                {
                    icon: 'upload',
                    title: 'Download',
                    exec: function () {
                        var url = ga('href');
                        if (url) {
                            self.ow.open(url);
                        }
                    }
                }
            ]);
        }, self.defaultTimeout);
        self.e
            .on('beforeClose', function () { return contextmenu.close(); })
            .on('beforeDestruct', function () { return contextmenu.destruct(); });
        e.stopPropagation();
        e.preventDefault();
        return false;
    };
});


/***/ }),

/***/ 66267:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.elementsMap = void 0;
var map = new WeakMap();
var elementsMap = function (view) {
    var result = map.get(view);
    if (!result) {
        result = {};
        map.set(view, result);
    }
    return result;
};
exports.elementsMap = elementsMap;


/***/ }),

/***/ 63511:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FileBrowserItem = void 0;
var helpers_1 = __webpack_require__(40332);
var FileBrowserItem = (function () {
    function FileBrowserItem(data) {
        var _this = this;
        this.data = data;
        Object.keys(data).forEach(function (key) {
            _this[key] = data[key];
        });
    }
    FileBrowserItem.create = function (data) {
        if (data instanceof FileBrowserItem) {
            return data;
        }
        return new FileBrowserItem(data);
    };
    Object.defineProperty(FileBrowserItem.prototype, "path", {
        get: function () {
            return (0, helpers_1.normalizePath)(this.data.source.path ? this.data.source.path + '/' : '/');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FileBrowserItem.prototype, "imageURL", {
        get: function () {
            var timestamp = this.time || new Date().getTime().toString(), _a = this.data, thumbIsAbsolute = _a.thumbIsAbsolute, source = _a.source, thumb = _a.thumb, file = _a.file, path = thumb || file;
            return thumbIsAbsolute && path
                ? path
                : (0, helpers_1.normalizeUrl)(source.baseurl, source.path, path || '') +
                    '?_tmst=' +
                    encodeURIComponent(timestamp);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FileBrowserItem.prototype, "fileURL", {
        get: function () {
            var name = this.data.name;
            var _a = this.data, file = _a.file, fileIsAbsolute = _a.fileIsAbsolute, source = _a.source;
            if (file !== undefined) {
                name = file;
            }
            return fileIsAbsolute && name
                ? name
                : (0, helpers_1.normalizeUrl)(source.baseurl, source.path, name || '');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FileBrowserItem.prototype, "time", {
        get: function () {
            var changed = this.data.changed;
            return ((changed &&
                (typeof changed === 'number'
                    ? new Date(changed).toLocaleString()
                    : changed)) ||
                '');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FileBrowserItem.prototype, "uniqueHashKey", {
        get: function () {
            var data = this.data;
            var key = [
                data.sourceName,
                data.name,
                data.file,
                this.time,
                data.thumb
            ].join('_');
            key = key.toLowerCase().replace(/[^0-9a-z\-.]/g, '-');
            return key;
        },
        enumerable: false,
        configurable: true
    });
    FileBrowserItem.prototype.toJSON = function () {
        return this.data;
    };
    return FileBrowserItem;
}());
exports.FileBrowserItem = FileBrowserItem;


/***/ }),

/***/ 38097:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
var config_1 = __webpack_require__(93166);
var checker_1 = __webpack_require__(10172);
var file_1 = __webpack_require__(41374);
var human_size_to_bytes_1 = __webpack_require__(6102);
config_1.Config.prototype.filebrowser = {
    namespace: '',
    extraButtons: [],
    filter: function (item, search) {
        search = search.toLowerCase();
        if ((0, checker_1.isString)(item)) {
            return item.toLowerCase().indexOf(search) !== -1;
        }
        if ((0, checker_1.isString)(item.name)) {
            return item.name.toLowerCase().indexOf(search) !== -1;
        }
        if ((0, checker_1.isString)(item.file)) {
            return item.file.toLowerCase().indexOf(search) !== -1;
        }
        return true;
    },
    sortBy: 'changed-desc',
    sort: function (a, b, sortBy) {
        var _a = tslib_1.__read(sortBy.toLowerCase().split('-'), 2), sortAttr = _a[0], arrow = _a[1], asc = arrow === 'asc';
        var compareStr = function (f, s) {
            if (f < s) {
                return asc ? -1 : 1;
            }
            if (f > s) {
                return asc ? 1 : -1;
            }
            return 0;
        };
        if ((0, checker_1.isString)(a)) {
            return compareStr(a.toLowerCase(), b.toLowerCase());
        }
        if (a[sortAttr] === undefined || sortAttr === 'name') {
            if ((0, checker_1.isString)(a.name)) {
                return compareStr(a.name.toLowerCase(), b.name.toLowerCase());
            }
            if ((0, checker_1.isString)(a.file)) {
                return compareStr(a.file.toLowerCase(), b.file.toLowerCase());
            }
            return 0;
        }
        switch (sortAttr) {
            case 'changed': {
                var f = new Date(a.changed).getTime(), s = new Date(b.changed).getTime();
                return asc ? f - s : s - f;
            }
            case 'size': {
                var f = (0, human_size_to_bytes_1.humanSizeToBytes)(a.size), s = (0, human_size_to_bytes_1.humanSizeToBytes)(b.size);
                return asc ? f - s : s - f;
            }
        }
        return 0;
    },
    editImage: true,
    preview: true,
    showPreviewNavigation: true,
    showSelectButtonInPreview: true,
    contextMenu: true,
    howLongShowMsg: 3000,
    createNewFolder: true,
    deleteFolder: true,
    renameFolder: true,
    moveFolder: true,
    moveFile: true,
    permissionsPresets: {
        allowFileDownload: undefined,
        allowFileMove: undefined,
        allowFileRemove: undefined,
        allowFileRename: undefined,
        allowFileUpload: undefined,
        allowFileUploadRemote: undefined,
        allowFiles: undefined,
        allowFolderCreate: undefined,
        allowFolderMove: undefined,
        allowFolderRemove: undefined,
        allowFolderRename: undefined,
        allowFolderTree: undefined,
        allowFolders: undefined,
        allowGeneratePdf: undefined,
        allowImageCrop: undefined,
        allowImageResize: undefined
    },
    showFoldersPanel: true,
    storeLastOpenedFolder: true,
    width: 859,
    height: 400,
    buttons: [
        'filebrowser.upload',
        'filebrowser.remove',
        'filebrowser.update',
        'filebrowser.select',
        'filebrowser.edit',
        '|',
        'filebrowser.tiles',
        'filebrowser.list',
        '|',
        'filebrowser.filter',
        '|',
        'filebrowser.sort'
    ],
    removeButtons: [],
    fullsize: false,
    showTooltip: true,
    view: null,
    isSuccess: function (resp) {
        return resp.success;
    },
    getMessage: function (resp) {
        return resp.data.messages !== undefined && (0, checker_1.isArray)(resp.data.messages)
            ? resp.data.messages.join(' ')
            : '';
    },
    showFileName: true,
    showFileSize: true,
    showFileChangeTime: true,
    saveStateInStorage: {
        storeLastOpenedFolder: true,
        storeView: true,
        storeSortBy: true
    },
    pixelOffsetLoadNewChunk: 200,
    getThumbTemplate: function (item, source, source_name) {
        var opt = this.options, IC = this.files.getFullElName('item'), showName = opt.showFileName, showSize = opt.showFileSize && item.size, showTime = opt.showFileChangeTime && item.time;
        var name = '';
        if (item.file !== undefined) {
            name = item.file;
        }
        var info = "<div class=\"".concat(IC, "-info\">").concat(showName ? "<span class=\"".concat(IC, "-info-filename\">").concat(name, "</span>") : '').concat(showSize
            ? "<span class=\"".concat(IC, "-info-filesize\">").concat(item.size, "</span>")
            : '').concat(showTime
            ? "<span class=\"".concat(IC, "-info-filechanged\">").concat(showTime, "</span>")
            : '', "</div>");
        return "<a\n\t\t\tdata-jodit-filebrowser-item=\"true\"\n\t\t\tdata-is-file=\"".concat(item.isImage ? 0 : 1, "\"\n\t\t\tdraggable=\"true\"\n\t\t\tclass=\"").concat(IC, "\"\n\t\t\thref=\"").concat(item.fileURL, "\"\n\t\t\tdata-source=\"").concat(source_name, "\"\n\t\t\tdata-path=\"").concat(item.path, "\"\n\t\t\tdata-name=\"").concat(name, "\"\n\t\t\ttitle=\"").concat(name, "\"\n\t\t\tdata-url=\"").concat(item.fileURL, "\">\n\t\t\t\t<img\n\t\t\t\t\tdata-is-file=\"").concat(item.isImage ? 0 : 1, "\"\n\t\t\t\t\tdata-src=\"").concat(item.fileURL, "\"\n\t\t\t\t\tsrc=\"").concat(item.imageURL, "\"\n\t\t\t\t\talt=\"").concat(name, "\"\n\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t/>\n\t\t\t\t").concat(showName || showSize || showTime ? info : '', "\n\t\t\t</a>");
    },
    ajax: tslib_1.__assign(tslib_1.__assign({}, config_1.Config.prototype.defaultAjaxOptions), { url: '', data: {}, cache: true, contentType: 'application/x-www-form-urlencoded; charset=UTF-8', method: 'POST', processData: true, headers: {}, prepareData: function (data) {
            return data;
        }, process: function (resp) {
            return resp;
        } }),
    create: {
        data: { action: 'folderCreate' }
    },
    getLocalFileByUrl: {
        data: { action: 'getLocalFileByUrl' }
    },
    resize: {
        data: { action: 'imageResize' }
    },
    crop: {
        data: { action: 'imageCrop' }
    },
    fileMove: {
        data: { action: 'fileMove' }
    },
    folderMove: {
        data: { action: 'folderMove' }
    },
    fileRename: {
        data: { action: 'fileRename' }
    },
    folderRename: {
        data: { action: 'folderRename' }
    },
    fileRemove: {
        data: { action: 'fileRemove' }
    },
    folderRemove: {
        data: { action: 'folderRemove' }
    },
    items: {
        data: { action: 'files' }
    },
    folder: {
        data: { action: 'folders' }
    },
    permissions: {
        data: { action: 'permissions' }
    }
};
config_1.Config.prototype.controls.filebrowser = {
    upload: {
        icon: 'plus',
        isInput: true,
        isDisabled: function (browser) {
            return !browser.dataProvider.canI('FileUpload');
        },
        getContent: function (filebrowser) {
            var btn = new file_1.UIFileInput(filebrowser, {
                onlyImages: filebrowser.state.onlyImages
            });
            filebrowser.e.fire('bindUploader.filebrowser', btn.container);
            return btn.container;
        }
    },
    remove: {
        icon: 'bin',
        isDisabled: function (browser) {
            return (!browser.state.activeElements.length ||
                !browser.dataProvider.canI('FileRemove'));
        },
        exec: function (editor) {
            editor.e.fire('fileRemove.filebrowser');
        }
    },
    update: {
        exec: function (editor) {
            editor.e.fire('update.filebrowser');
        }
    },
    select: {
        icon: 'check',
        isDisabled: function (browser) {
            return !browser.state.activeElements.length;
        },
        exec: function (editor) {
            editor.e.fire('select.filebrowser');
        }
    },
    edit: {
        icon: 'pencil',
        isDisabled: function (browser) {
            var selected = browser.state.activeElements;
            return (selected.length !== 1 ||
                !selected[0].isImage ||
                !(browser.dataProvider.canI('ImageCrop') ||
                    browser.dataProvider.canI('ImageResize')));
        },
        exec: function (editor) {
            editor.e.fire('edit.filebrowser');
        }
    },
    tiles: {
        icon: 'th',
        isActive: function (filebrowser) {
            return filebrowser.state.view === 'tiles';
        },
        exec: function (filebrowser) {
            filebrowser.e.fire('view.filebrowser', 'tiles');
        }
    },
    list: {
        icon: 'th-list',
        isActive: function (filebrowser) {
            return filebrowser.state.view === 'list';
        },
        exec: function (filebrowser) {
            filebrowser.e.fire('view.filebrowser', 'list');
        }
    },
    filter: {
        isInput: true,
        getContent: function (filebrowser, _, b) {
            var oldInput = b.container.querySelector('.jodit-input');
            if (oldInput) {
                return oldInput;
            }
            var input = filebrowser.c.element('input', {
                class: 'jodit-input',
                placeholder: filebrowser.i18n('Filter')
            });
            input.value = filebrowser.state.filterWord;
            filebrowser.e.on(input, 'keydown mousedown', filebrowser.async.debounce(function () {
                filebrowser.e.fire('filter.filebrowser', input.value);
            }, filebrowser.defaultTimeout));
            return input;
        }
    },
    sort: {
        isInput: true,
        getContent: function (fb) {
            var select = fb.c.fromHTML('<select class="jodit-input jodit-select">' +
                "<option value=\"changed-asc\">".concat(fb.i18n('Sort by changed'), " (\u2B06)</option>") +
                "<option value=\"changed-desc\">".concat(fb.i18n('Sort by changed'), " (\u2B07)</option>") +
                "<option value=\"name-asc\">".concat(fb.i18n('Sort by name'), " (\u2B06)</option>") +
                "<option value=\"name-desc\">".concat(fb.i18n('Sort by name'), " (\u2B07)</option>") +
                "<option value=\"size-asc\">".concat(fb.i18n('Sort by size'), " (\u2B06)</option>") +
                "<option value=\"size-desc\">".concat(fb.i18n('Sort by size'), " (\u2B07)</option>") +
                '</select>');
            select.value = fb.state.sortBy;
            fb.e
                .on('sort.filebrowser', function (value) {
                if (select.value !== value) {
                    select.value = value;
                }
            })
                .on(select, 'change', function () {
                fb.e.fire('sort.filebrowser', select.value);
            });
            return select;
        }
    }
};


/***/ }),

/***/ 82530:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DEFAULT_SOURCE_NAME = void 0;
var tslib_1 = __webpack_require__(20255);
var helpers_1 = __webpack_require__(40332);
var request_1 = __webpack_require__(30056);
var decorators_1 = __webpack_require__(43441);
var item_1 = __webpack_require__(63511);
exports.DEFAULT_SOURCE_NAME = 'default';
var possibleRules = (/* unused pure expression or super */ null && ([
    'allowFiles',
    'allowFileMove',
    'allowFileUpload',
    'allowFileUploadRemote',
    'allowFileRemove',
    'allowFileRename',
    'allowFolders',
    'allowFolderMove',
    'allowFolderCreate',
    'allowFolderRemove',
    'allowFolderRename',
    'allowImageResize',
    'allowImageCrop'
]));
var DataProvider = (function () {
    function DataProvider(parent, options) {
        this.parent = parent;
        this.options = options;
        this.__currentPermissions = null;
        this.ajaxInstances = new Map();
        this.progressHandler = function (ignore) { };
    }
    Object.defineProperty(DataProvider.prototype, "o", {
        get: function () {
            return this.options;
        },
        enumerable: false,
        configurable: true
    });
    DataProvider.prototype.get = function (name) {
        var _this = this;
        var ai = this.ajaxInstances;
        if (ai.has(name)) {
            var ajax_1 = ai.get(name);
            ajax_1 === null || ajax_1 === void 0 ? void 0 : ajax_1.abort();
            ai.delete(name);
        }
        var opts = (0, helpers_1.ConfigProto)(this.options[name] !== undefined
            ? this.options[name]
            : {}, (0, helpers_1.ConfigProto)({
            onProgress: this.progressHandler
        }, this.o.ajax));
        if (opts.prepareData) {
            opts.data = opts.prepareData.call(this, opts.data);
        }
        var ajax = new request_1.Ajax(opts);
        ai.set(name, ajax);
        var promise = ajax.send();
        promise
            .finally(function () {
            ajax.destruct();
            ai.delete(name);
            _this.progressHandler(100);
        })
            .catch(function () { return null; });
        return promise
            .then(function (resp) { return resp.json(); })
            .then(function (resp) {
            if (resp && !_this.isSuccess(resp)) {
                throw new Error(_this.getMessage(resp));
            }
            return resp;
        });
    };
    DataProvider.prototype.onProgress = function (callback) {
        this.progressHandler = callback;
    };
    DataProvider.prototype.permissions = function (path, source) {
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                if (!this.o.permissions) {
                    return [2, null];
                }
                this.o.permissions.data.path = path;
                this.o.permissions.data.source = source;
                if (this.o.permissions.url) {
                    return [2, this.get('permissions').then(function (resp) {
                            var process = _this.o.permissions.process;
                            if (!process) {
                                process = _this.o.ajax.process;
                            }
                            if (process) {
                                var respData = process.call(self, resp);
                                if (respData.data.permissions) {
                                    _this.__currentPermissions = respData.data.permissions;
                                }
                            }
                            return _this.__currentPermissions;
                        })];
                }
                return [2, null];
            });
        });
    };
    DataProvider.prototype.canI = function (action) {
        var rule = 'allow' + action;
        if (false) {}
        var preset = this.o.permissionsPresets[rule];
        if (preset !== undefined) {
            return preset;
        }
        return (this.__currentPermissions == null ||
            this.__currentPermissions[rule] === undefined ||
            this.__currentPermissions[rule]);
    };
    DataProvider.prototype.__items = function (path, source, mods, onResult) {
        var _this = this;
        var opt = this.options;
        if (!opt.items) {
            return Promise.reject('Set Items api options');
        }
        opt.items.data.path = path;
        opt.items.data.source = source;
        opt.items.data.mods = mods;
        return this.get('items').then(function (resp) {
            var process = _this.o.items.process;
            if (!process) {
                process = _this.o.ajax.process;
            }
            if (process) {
                resp = process.call(self, resp);
            }
            return onResult(resp);
        });
    };
    DataProvider.prototype.items = function (path, source, mods) {
        var _this = this;
        if (mods === void 0) { mods = {}; }
        return this.__items(path, source, mods, function (resp) {
            return _this.generateItemsList(resp.data.sources, mods);
        });
    };
    DataProvider.prototype.itemsEx = function (path, source, mods) {
        var _this = this;
        if (mods === void 0) { mods = {}; }
        var calcTotal = function (sources) {
            return sources.reduce(function (acc, source) { return acc + source.files.length; }, 0);
        };
        return this.__items(path, source, mods, function (resp) { return ({
            items: _this.generateItemsList(resp.data.sources, mods),
            loadedTotal: calcTotal(resp.data.sources)
        }); });
    };
    DataProvider.prototype.generateItemsList = function (sources, mods) {
        var _this = this;
        if (mods === void 0) { mods = {}; }
        var elements = [];
        var canBeFile = function (item) {
            return item.type === 'folder' ||
                !mods.onlyImages ||
                item.isImage === undefined ||
                item.isImage;
        };
        var inFilter = function (item) {
            var _a;
            return !((_a = mods.filterWord) === null || _a === void 0 ? void 0 : _a.length) ||
                _this.o.filter === undefined ||
                _this.o.filter(item, mods.filterWord);
        };
        sources.forEach(function (source) {
            if (source.files && source.files.length) {
                var sort_1 = _this.o.sort;
                if ((0, helpers_1.isFunction)(sort_1) && mods.sortBy) {
                    source.files.sort(function (a, b) { return sort_1(a, b, mods.sortBy); });
                }
                source.files.forEach(function (item) {
                    if (inFilter(item) && canBeFile(item)) {
                        elements.push(item_1.FileBrowserItem.create(tslib_1.__assign(tslib_1.__assign({}, item), { sourceName: source.name, source: source })));
                    }
                });
            }
        });
        return elements;
    };
    DataProvider.prototype.tree = function (path, source) {
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        path = (0, helpers_1.normalizeRelativePath)(path);
                        if (!this.o.folder) {
                            return [2, Promise.reject('Set Folder Api options')];
                        }
                        return [4, this.permissions(path, source)];
                    case 1:
                        _a.sent();
                        this.o.folder.data.path = path;
                        this.o.folder.data.source = source;
                        return [2, this.get('folder').then(function (resp) {
                                var process = _this.o.folder.process;
                                if (!process) {
                                    process = _this.o.ajax.process;
                                }
                                if (process) {
                                    resp = process.call(self, resp);
                                }
                                return resp.data.sources;
                            })];
                }
            });
        });
    };
    DataProvider.prototype.getPathByUrl = function (url) {
        var _this = this;
        (0, helpers_1.set)('options.getLocalFileByUrl.data.url', url, this);
        return this.get('getLocalFileByUrl').then(function (resp) {
            if (_this.isSuccess(resp)) {
                return resp.data;
            }
            throw (0, helpers_1.error)(_this.getMessage(resp));
        });
    };
    DataProvider.prototype.createFolder = function (name, path, source) {
        var _this = this;
        var create = this.o.create;
        if (!create) {
            throw (0, helpers_1.error)('Set Create api options');
        }
        create.data.source = source;
        create.data.path = path;
        create.data.name = name;
        return this.get('create').then(function (resp) {
            if (_this.isSuccess(resp)) {
                return true;
            }
            throw (0, helpers_1.error)(_this.getMessage(resp));
        });
    };
    DataProvider.prototype.move = function (filepath, path, source, isFile) {
        var _this = this;
        var mode = isFile
            ? 'fileMove'
            : 'folderMove';
        var option = this.options[mode];
        if (!option) {
            throw (0, helpers_1.error)('Set Move api options');
        }
        option.data.from = filepath;
        option.data.path = path;
        option.data.source = source;
        return this.get(mode).then(function (resp) {
            if (_this.isSuccess(resp)) {
                return true;
            }
            throw (0, helpers_1.error)(_this.getMessage(resp));
        });
    };
    DataProvider.prototype.remove = function (action, path, file, source) {
        var _this = this;
        var fr = this.o[action];
        if (!fr) {
            throw (0, helpers_1.error)("Set \"".concat(action, "\" api options"));
        }
        fr.data.path = path;
        fr.data.name = file;
        fr.data.source = source;
        return this.get(action).then(function (resp) {
            if (fr.process) {
                resp = fr.process.call(_this, resp);
            }
            return _this.getMessage(resp);
        });
    };
    DataProvider.prototype.fileRemove = function (path, file, source) {
        return this.remove('fileRemove', path, file, source);
    };
    DataProvider.prototype.folderRemove = function (path, file, source) {
        return this.remove('folderRemove', path, file, source);
    };
    DataProvider.prototype.rename = function (action, path, name, newname, source) {
        var _this = this;
        var fr = this.o[action];
        if (!fr) {
            throw (0, helpers_1.error)("Set \"".concat(action, "\" api options"));
        }
        fr.data.path = path;
        fr.data.name = name;
        fr.data.newname = newname;
        fr.data.source = source;
        return this.get(action).then(function (resp) {
            if (fr.process) {
                resp = fr.process.call(self, resp);
            }
            return _this.getMessage(resp);
        });
    };
    DataProvider.prototype.folderRename = function (path, name, newname, source) {
        return this.rename('folderRename', path, name, newname, source);
    };
    DataProvider.prototype.fileRename = function (path, name, newname, source) {
        return this.rename('fileRename', path, name, newname, source);
    };
    DataProvider.prototype.changeImage = function (type, path, source, name, newname, box) {
        if (!this.o[type]) {
            this.o[type] = {
                data: {}
            };
        }
        var query = this.o[type];
        if (query.data === undefined) {
            query.data = {
                action: type
            };
        }
        query.data.newname = newname || name;
        if (box) {
            query.data.box = box;
        }
        query.data.path = path;
        query.data.name = name;
        query.data.source = source;
        return this.get(type).then(function () {
            return true;
        });
    };
    DataProvider.prototype.crop = function (path, source, name, newname, box) {
        return this.changeImage('crop', path, source, name, newname, box);
    };
    DataProvider.prototype.resize = function (path, source, name, newname, box) {
        return this.changeImage('resize', path, source, name, newname, box);
    };
    DataProvider.prototype.getMessage = function (resp) {
        return this.options.getMessage(resp);
    };
    DataProvider.prototype.isSuccess = function (resp) {
        return this.options.isSuccess(resp);
    };
    DataProvider.prototype.destruct = function () {
        this.ajaxInstances.forEach(function (a) { return a.destruct(); });
        this.ajaxInstances.clear();
    };
    DataProvider = tslib_1.__decorate([
        decorators_1.autobind
    ], DataProvider);
    return DataProvider;
}());
exports["default"] = DataProvider;


/***/ }),

/***/ 46341:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeContextMenu = exports.makeDataProvider = void 0;
var data_provider_1 = __webpack_require__(82530);
var context_menu_1 = __webpack_require__(60403);
function makeDataProvider(parent, options) {
    return new data_provider_1.default(parent, options);
}
exports.makeDataProvider = makeDataProvider;
function makeContextMenu(parent) {
    return new context_menu_1.ContextMenu(parent);
}
exports.makeContextMenu = makeContextMenu;


/***/ }),

/***/ 48096:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deleteFile = void 0;
function deleteFile(fb, name, source) {
    return fb.dataProvider
        .fileRemove(fb.state.currentPath, name, source)
        .then(function (message) {
        fb.status(message || fb.i18n('File "%s" was deleted', name), true);
    })
        .catch(fb.status);
}
exports.deleteFile = deleteFile;


/***/ }),

/***/ 4253:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.loadItems = void 0;
function loadItems(fb) {
    fb.files.setMod('active', true);
    fb.files.setMod('loading', true);
    return fb.dataProvider
        .items(fb.state.currentPath, fb.state.currentSource, {
        sortBy: fb.state.sortBy,
        onlyImages: fb.state.onlyImages,
        filterWord: fb.state.filterWord
    })
        .then(function (resp) {
        if (resp) {
            fb.state.elements = resp;
            fb.state.activeElements = [];
        }
    })
        .catch(fb.status)
        .finally(function () { return fb.files.setMod('loading', false); });
}
exports.loadItems = loadItems;


/***/ }),

/***/ 36303:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.loadTree = void 0;
var tslib_1 = __webpack_require__(20255);
var dom_1 = __webpack_require__(64968);
var load_items_1 = __webpack_require__(4253);
function loadTree(fb) {
    return tslib_1.__awaiter(this, void 0, Promise, function () {
        var items, tree;
        return tslib_1.__generator(this, function (_a) {
            fb.tree.setMod('active', true);
            dom_1.Dom.detach(fb.tree.container);
            items = (0, load_items_1.loadItems)(fb);
            if (fb.o.showFoldersPanel) {
                fb.tree.setMod('loading', true);
                tree = fb.dataProvider
                    .tree(fb.state.currentPath, fb.state.currentSource)
                    .then(function (resp) {
                    fb.state.sources = resp;
                })
                    .catch(fb.status)
                    .finally(function () { return fb.tree.setMod('loading', false); });
                return [2, Promise.all([tree, items])];
            }
            fb.tree.setMod('active', false);
            return [2, items];
        });
    });
}
exports.loadTree = loadTree;


/***/ }),

/***/ 50885:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isFileBrowserFilesItem = exports.FileBrowser = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(40692);
var config_1 = __webpack_require__(93166);
var consts = __webpack_require__(86893);
var storage_1 = __webpack_require__(77462);
var helpers_1 = __webpack_require__(40332);
var dom_1 = __webpack_require__(64968);
var factories_1 = __webpack_require__(46341);
var state_listeners_1 = __webpack_require__(86774);
var native_listeners_1 = __webpack_require__(21347);
var self_listeners_1 = __webpack_require__(44734);
var data_provider_1 = __webpack_require__(82530);
var decorators_1 = __webpack_require__(43441);
var ui_1 = __webpack_require__(98782);
var event_emitter_1 = __webpack_require__(55395);
var load_tree_1 = __webpack_require__(36303);
var load_items_1 = __webpack_require__(4253);
var component_1 = __webpack_require__(56562);
var traits_1 = __webpack_require__(59829);
var view_with_toolbar_1 = __webpack_require__(43608);
__webpack_require__(38097);
var FileBrowser = (function (_super) {
    tslib_1.__extends(FileBrowser, _super);
    function FileBrowser(options) {
        var _this = this;
        var _a;
        _this = _super.call(this, options) || this;
        _this.browser = _this.c.div(_this.componentName);
        _this.status_line = _this.c.div(_this.getFullElName('status'));
        _this.tree = new ui_1.FileBrowserTree(_this);
        _this.files = new ui_1.FileBrowserFiles(_this);
        _this.state = (0, event_emitter_1.observable)({
            currentPath: '',
            currentSource: data_provider_1.DEFAULT_SOURCE_NAME,
            currentBaseUrl: '',
            activeElements: [],
            elements: [],
            sources: [],
            view: 'tiles',
            sortBy: 'changed-desc',
            filterWord: '',
            onlyImages: false
        });
        _this.errorHandler = function (resp) {
            if ((0, helpers_1.isAbort)(resp)) {
                return;
            }
            if (resp instanceof Error) {
                _this.status(_this.i18n(resp.message));
            }
            else {
                _this.status(_this.dataProvider.getMessage(resp));
            }
        };
        _this.close = function () {
            _this._dialog.close();
        };
        _this.attachEvents(options);
        var self = _this;
        self.options = (0, helpers_1.ConfigProto)(options || {}, config_1.Config.defaultOptions.filebrowser);
        self.storage = storage_1.Storage.makeStorage(Boolean(_this.o.saveStateInStorage), _this.componentName);
        self.dataProvider = (0, factories_1.makeDataProvider)(self, self.options);
        self._dialog = _this.dlg({
            minWidth: Math.min(700, screen.width),
            minHeight: 300,
            buttons: (_a = _this.o.headerButtons) !== null && _a !== void 0 ? _a : ['fullsize', 'dialog.close']
        });
        _this.proxyDialogEvents(self);
        self.browser.component = _this;
        self.container = self.browser;
        if (self.o.showFoldersPanel) {
            self.browser.appendChild(self.tree.container);
        }
        self.browser.appendChild(self.files.container);
        self.browser.appendChild(self.status_line);
        self_listeners_1.selfListeners.call(self);
        native_listeners_1.nativeListeners.call(self);
        state_listeners_1.stateListeners.call(self);
        self._dialog.setSize(self.o.width, self.o.height);
        var keys = [
            'getLocalFileByUrl',
            'crop',
            'resize',
            'create',
            'fileMove',
            'folderMove',
            'fileRename',
            'folderRename',
            'fileRemove',
            'folderRemove',
            'folder',
            'items',
            'permissions'
        ];
        keys.forEach(function (key) {
            if (_this.options[key] != null) {
                _this.options[key] = (0, helpers_1.ConfigProto)(_this.options[key], _this.o.ajax);
            }
        });
        var _b = _this.o
            .saveStateInStorage || {
            storeLastOpenedFolder: false,
            storeView: false,
            storeSortBy: false
        }, storeView = _b.storeView, storeSortBy = _b.storeSortBy, storeLastOpenedFolder = _b.storeLastOpenedFolder;
        var view = storeView && _this.storage.get('view');
        if (view && _this.o.view == null) {
            self.state.view = view === 'list' ? 'list' : 'tiles';
        }
        else {
            self.state.view = self.o.view === 'list' ? 'list' : 'tiles';
        }
        self.files.setMod('view', self.state.view);
        var sortBy = storeSortBy && self.storage.get('sortBy');
        if (sortBy) {
            var parts = sortBy.split('-');
            self.state.sortBy = ['changed', 'name', 'size'].includes(parts[0])
                ? sortBy
                : 'changed-desc';
        }
        else {
            self.state.sortBy = self.o.sortBy || 'changed-desc';
        }
        if (storeLastOpenedFolder) {
            var currentPath = self.storage.get('currentPath'), currentSource = self.storage.get('currentSource');
            self.state.currentPath = currentPath !== null && currentPath !== void 0 ? currentPath : '';
            self.state.currentSource = currentSource !== null && currentSource !== void 0 ? currentSource : '';
        }
        self.initUploader(self);
        self.setStatus(component_1.STATUSES.ready);
        return _this;
    }
    FileBrowser.prototype.className = function () {
        return 'Filebrowser';
    };
    FileBrowser.prototype.onSelect = function (callback) {
        var _this = this;
        return function () {
            if (_this.state.activeElements.length) {
                var files_1 = [];
                var isImages_1 = [];
                _this.state.activeElements.forEach(function (elm) {
                    var url = elm.fileURL;
                    if (url) {
                        files_1.push(url);
                        isImages_1.push(elm.isImage || false);
                    }
                });
                _this.close();
                var data = {
                    baseurl: '',
                    files: files_1,
                    isImages: isImages_1
                };
                if ((0, helpers_1.isFunction)(callback)) {
                    callback(data);
                }
                _this.close();
            }
            return false;
        };
    };
    Object.defineProperty(FileBrowser.prototype, "isOpened", {
        get: function () {
            return this._dialog.isOpened && this.browser.style.display !== 'none';
        },
        enumerable: false,
        configurable: true
    });
    FileBrowser.prototype.status = function (message, success) {
        if (!message || (0, helpers_1.isAbort)(message)) {
            return;
        }
        if (!(0, helpers_1.isString)(message)) {
            message = message.message;
        }
        if (!(0, helpers_1.isString)(message) || !(0, helpers_1.trim)(message).length) {
            return;
        }
        this.message.message(message, success ? 'success' : 'error', this.o.howLongShowMsg);
    };
    FileBrowser.prototype.open = function (callback, onlyImages) {
        var _this = this;
        if (callback === void 0) { callback = this.o
            .defaultCallback; }
        if (onlyImages === void 0) { onlyImages = false; }
        this.state.onlyImages = onlyImages;
        return this.async.promise(function (resolve, reject) {
            if (!_this.o.items || !_this.o.items.url) {
                throw (0, helpers_1.error)('Need set options.filebrowser.ajax.url');
            }
            var localTimeout = 0;
            _this.e
                .off(_this.files.container, 'dblclick')
                .on(_this.files.container, 'dblclick', _this.onSelect(callback))
                .on(_this.files.container, 'touchstart', function () {
                var now = new Date().getTime();
                if (now - localTimeout < consts.EMULATE_DBLCLICK_TIMEOUT) {
                    _this.onSelect(callback)();
                }
                localTimeout = now;
            })
                .off('select.filebrowser')
                .on('select.filebrowser', _this.onSelect(callback));
            var header = _this.c.div();
            _this.toolbar.build(_this.__getButtons()).appendTo(header);
            _this._dialog.open(_this.browser, header);
            _this.e.fire('sort.filebrowser', _this.state.sortBy);
            (0, load_tree_1.loadTree)(_this).then(resolve, reject);
        });
    };
    FileBrowser.prototype.__getButtons = function () {
        var _this = this;
        var _a;
        var options = ((_a = this.o.buttons) !== null && _a !== void 0 ? _a : []);
        return options.filter(function (btn) {
            if (!(0, helpers_1.isString)(btn)) {
                return true;
            }
            switch (btn) {
                case 'filebrowser.upload':
                    return _this.dataProvider.canI('FileUpload');
                case 'filebrowser.edit':
                    return (_this.dataProvider.canI('ImageResize') ||
                        _this.dataProvider.canI('ImageCrop'));
                case 'filebrowser.remove':
                    return _this.dataProvider.canI('FileRemove');
            }
            return true;
        });
    };
    FileBrowser.prototype.initUploader = function (editor) {
        var _this = this;
        var _a;
        var self = this, options = (_a = editor === null || editor === void 0 ? void 0 : editor.options) === null || _a === void 0 ? void 0 : _a.uploader, uploaderOptions = (0, helpers_1.ConfigProto)(options || {}, config_1.Config.defaultOptions.uploader);
        var uploadHandler = function () { return (0, load_items_1.loadItems)(_this); };
        self.uploader = self.getInstance('Uploader', uploaderOptions);
        self.uploader
            .setPath(self.state.currentPath)
            .setSource(self.state.currentSource)
            .bind(self.browser, uploadHandler, self.errorHandler);
        this.state.on(['change.currentPath', 'change.currentSource'], function () {
            _this.uploader
                .setPath(_this.state.currentPath)
                .setSource(_this.state.currentSource);
        });
        self.e.on('bindUploader.filebrowser', function (button) {
            self.uploader.bind(button, uploadHandler, self.errorHandler);
        });
    };
    FileBrowser.prototype.proxyDialogEvents = function (self) {
        var _this = this;
        ['afterClose', 'beforeOpen'].forEach(function (proxyEvent) {
            self._dialog.events.on(self.dlg, proxyEvent, function () {
                _this.e.fire(proxyEvent);
            });
        });
    };
    FileBrowser.prototype.destruct = function () {
        if (this.isInDestruct) {
            return;
        }
        _super.prototype.destruct.call(this);
        this._dialog.destruct();
        this.events && this.e.off('.filebrowser');
        this.uploader && this.uploader.destruct();
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], FileBrowser.prototype, "status", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], FileBrowser.prototype, "open", null);
    FileBrowser = tslib_1.__decorate([
        (0, decorators_1.derive)(traits_1.Dlgs)
    ], FileBrowser);
    return FileBrowser;
}(view_with_toolbar_1.ViewWithToolbar));
exports.FileBrowser = FileBrowser;
function isFileBrowserFilesItem(target) {
    return (dom_1.Dom.isElement(target) &&
        target.classList.contains(ui_1.FileBrowserFiles.prototype.getFullElName('item')));
}
exports.isFileBrowserFilesItem = isFileBrowserFilesItem;


/***/ }),

/***/ 63463:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(50885), exports);


/***/ }),

/***/ 21347:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nativeListeners = exports.elementToItem = exports.getItem = void 0;
var tslib_1 = __webpack_require__(20255);
var helpers_1 = __webpack_require__(40332);
var context_menu_1 = __webpack_require__(34468);
var dom_1 = __webpack_require__(64968);
var elements_map_1 = __webpack_require__(66267);
var load_tree_1 = __webpack_require__(36303);
var getItem = function (node, root, tag) {
    if (tag === void 0) { tag = 'a'; }
    return dom_1.Dom.closest(node, function (elm) { return dom_1.Dom.isTag(elm, tag); }, root);
};
exports.getItem = getItem;
var elementToItem = function (elm, elementsMap) {
    var key = elm.dataset.key, item = elementsMap[key || ''].item;
    return item;
};
exports.elementToItem = elementToItem;
function nativeListeners() {
    var _this = this;
    var dragElement = false;
    var elmMap = (0, elements_map_1.elementsMap)(this);
    var self = this;
    self.e
        .on(self.tree.container, 'dragstart', function (e) {
        var a = (0, exports.getItem)(e.target, self.container);
        if (!a) {
            return;
        }
        if (self.o.moveFolder) {
            dragElement = a;
        }
    })
        .on(self.tree.container, 'drop', function (e) {
        if ((self.o.moveFile || self.o.moveFolder) && dragElement) {
            var path = (0, helpers_1.attr)(dragElement, '-path') || '';
            if (!self.o.moveFolder &&
                dragElement.classList.contains(_this.tree.getFullElName('item'))) {
                return false;
            }
            if (dragElement.classList.contains(_this.files.getFullElName('item'))) {
                path += (0, helpers_1.attr)(dragElement, '-name');
                if (!self.o.moveFile) {
                    return false;
                }
            }
            var a = (0, exports.getItem)(e.target, self.container);
            if (!a) {
                return;
            }
            self.dataProvider
                .move(path, (0, helpers_1.attr)(a, '-path') || '', (0, helpers_1.attr)(a, '-source') || '', dragElement.classList.contains(_this.files.getFullElName('item')))
                .then(function () { return (0, load_tree_1.loadTree)(_this); })
                .catch(self.status);
            dragElement = false;
        }
    })
        .on(self.files.container, 'contextmenu', (0, context_menu_1.default)(self))
        .on(self.files.container, 'click', function (e) {
        if (!(0, helpers_1.ctrlKey)(e)) {
            _this.state.activeElements = [];
        }
    })
        .on(self.files.container, 'click', function (e) {
        var a = (0, exports.getItem)(e.target, self.container);
        if (!a) {
            return;
        }
        var item = (0, exports.elementToItem)(a, elmMap);
        if (!item) {
            return;
        }
        if (!(0, helpers_1.ctrlKey)(e)) {
            self.state.activeElements = [item];
        }
        else {
            self.state.activeElements = tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read(self.state.activeElements), false), [
                item
            ], false);
        }
        e.stopPropagation();
        return false;
    })
        .on(self.files.container, 'dragstart', function (e) {
        if (self.o.moveFile) {
            var a = (0, exports.getItem)(e.target, self.container);
            if (!a) {
                return;
            }
            dragElement = a;
        }
    })
        .on(self.container, 'drop', function (e) { return e.preventDefault(); });
}
exports.nativeListeners = nativeListeners;


/***/ }),

/***/ 44734:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.selfListeners = void 0;
var tslib_1 = __webpack_require__(20255);
var checker_1 = __webpack_require__(10172);
var helpers_1 = __webpack_require__(40332);
var data_provider_1 = __webpack_require__(82530);
var image_editor_1 = __webpack_require__(35503);
var load_tree_1 = __webpack_require__(36303);
var load_items_1 = __webpack_require__(4253);
var delete_file_1 = __webpack_require__(48096);
function selfListeners() {
    var _this = this;
    var state = this.state, dp = this.dataProvider, self = this;
    self.e
        .on('view.filebrowser', function (view) {
        if (view !== state.view) {
            state.view = view;
        }
    })
        .on('sort.filebrowser', function (value) {
        if (value !== state.sortBy) {
            state.sortBy = value;
            (0, load_items_1.loadItems)(self);
        }
    })
        .on('filter.filebrowser', function (value) {
        if (value !== state.filterWord) {
            state.filterWord = value;
            (0, load_items_1.loadItems)(self);
        }
    })
        .on('openFolder.filebrowser', function (data) {
        var path;
        if (data.name === '..') {
            path = data.path
                .split('/')
                .filter(function (p) { return p.length; })
                .slice(0, -1)
                .join('/');
        }
        else {
            path = (0, helpers_1.normalizePath)(data.path, data.name);
        }
        self.state.currentPath = path;
        self.state.currentSource =
            data.name === '.' ? data_provider_1.DEFAULT_SOURCE_NAME : data.source;
    })
        .on('removeFolder.filebrowser', function (data) {
        self.confirm('Are you sure?', 'Delete', function (yes) {
            if (yes) {
                dp.folderRemove(data.path, data.name, data.source)
                    .then(function (message) {
                    self.status(message, true);
                    return (0, load_tree_1.loadTree)(self);
                })
                    .catch(self.status);
            }
        });
    })
        .on('renameFolder.filebrowser', function (data) {
        self.prompt('Enter new name', 'Rename', function (newName) {
            if (!(0, checker_1.isValidName)(newName)) {
                self.status(self.i18n('Enter new name'));
                return false;
            }
            dp.folderRename(data.path, data.name, newName, data.source)
                .then(function (message) {
                self.state.activeElements = [];
                self.status(message, true);
                return (0, load_tree_1.loadTree)(self);
            })
                .catch(self.status);
            return;
        }, 'type name', data.name);
    })
        .on('addFolder.filebrowser', function (data) {
        self.prompt('Enter Directory name', 'Create directory', function (name) {
            dp.createFolder(name, data.path, data.source)
                .then(function () { return (0, load_tree_1.loadTree)(self); })
                .catch(self.status);
        }, 'type name');
    })
        .on('fileRemove.filebrowser', function () {
        if (self.state.activeElements.length) {
            self.confirm('Are you sure?', '', function (yes) {
                if (yes) {
                    var promises_1 = [];
                    self.state.activeElements.forEach(function (item) {
                        promises_1.push((0, delete_file_1.deleteFile)(self, item.file || item.name || '', item.sourceName));
                    });
                    self.state.activeElements = [];
                    Promise.all(promises_1).then(function () { return (0, load_tree_1.loadTree)(self).catch(self.status); }, self.status);
                }
            });
        }
    })
        .on('edit.filebrowser', function () {
        if (self.state.activeElements.length === 1) {
            var _a = tslib_1.__read(_this.state.activeElements, 1), file = _a[0];
            image_editor_1.openImageEditor.call(self, file.fileURL, file.file || '', file.path, file.sourceName);
        }
    })
        .on('fileRename.filebrowser', function (name, path, source) {
        if (self.state.activeElements.length === 1) {
            self.prompt('Enter new name', 'Rename', function (newName) {
                if (!(0, checker_1.isValidName)(newName)) {
                    self.status(self.i18n('Enter new name'));
                    return false;
                }
                dp.fileRename(path, name, newName, source)
                    .then(function (message) {
                    self.state.activeElements = [];
                    self.status(message, true);
                    (0, load_items_1.loadItems)(self);
                })
                    .catch(self.status);
                return;
            }, 'type name', name);
        }
    })
        .on('update.filebrowser', function () {
        (0, load_tree_1.loadTree)(_this).then(_this.status, _this.status);
    });
}
exports.selfListeners = selfListeners;


/***/ }),

/***/ 86774:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stateListeners = void 0;
var dom_1 = __webpack_require__(64968);
var normalize_1 = __webpack_require__(89693);
var ui_1 = __webpack_require__(2074);
var elements_map_1 = __webpack_require__(66267);
var load_tree_1 = __webpack_require__(36303);
var DEFAULT_SOURCE_NAME = 'default';
function stateListeners() {
    var _this = this;
    var elmMap = (0, elements_map_1.elementsMap)(this);
    var _a = this, state = _a.state, files = _a.files, create = _a.create, options = _a.options, getDomElement = function (item) {
        var key = item.uniqueHashKey;
        if (elmMap[key]) {
            return elmMap[key].elm;
        }
        var elm = create.fromHTML(options.getThumbTemplate.call(_this, item, item.source, item.sourceName.toString()));
        elm.dataset.key = key;
        elmMap[key] = {
            item: item,
            elm: elm
        };
        return elmMap[key].elm;
    };
    state
        .on(['change.currentPath', 'change.currentSource'], this.async.debounce(function () {
        if (_this.o.saveStateInStorage &&
            _this.o.saveStateInStorage.storeLastOpenedFolder) {
            _this.storage
                .set('currentPath', _this.state.currentPath)
                .set('currentSource', _this.state.currentSource);
        }
        (0, load_tree_1.loadTree)(_this).catch(_this.status);
    }, this.defaultTimeout))
        .on('beforeChange.activeElements', function () {
        state.activeElements.forEach(function (item) {
            var key = item.uniqueHashKey, elm = elmMap[key].elm;
            elm &&
                elm.classList.remove(files.getFullElName('item', 'active', true));
        });
    })
        .on('change.activeElements', function () {
        _this.e.fire('changeSelection');
        state.activeElements.forEach(function (item) {
            var key = item.uniqueHashKey, elm = elmMap[key].elm;
            elm &&
                elm.classList.add(files.getFullElName('item', 'active', true));
        });
    })
        .on('change.view', function () {
        files.setMod('view', state.view);
        if (_this.o.saveStateInStorage &&
            _this.o.saveStateInStorage.storeView) {
            _this.storage.set('view', state.view);
        }
    })
        .on('change.sortBy', function () {
        if (_this.o.saveStateInStorage &&
            _this.o.saveStateInStorage.storeSortBy) {
            _this.storage.set('sortBy', state.sortBy);
        }
    })
        .on('change.elements', this.async.debounce(function () {
        dom_1.Dom.detach(files.container);
        if (state.elements.length) {
            state.elements.forEach(function (item) {
                _this.files.container.appendChild(getDomElement(item));
            });
        }
        else {
            files.container.appendChild(create.div(_this.componentName + '_no-files_true', _this.i18n('There are no files')));
        }
    }, this.defaultTimeout))
        .on('change.sources', this.async.debounce(function () {
        dom_1.Dom.detach(_this.tree.container);
        state.sources.forEach(function (source) {
            var sourceName = source.name;
            if (sourceName && sourceName !== DEFAULT_SOURCE_NAME) {
                _this.tree.container.appendChild(create.div(_this.tree.getFullElName('source-title'), sourceName));
            }
            source.folders.forEach(function (name) {
                var folderElm = create.a(_this.tree.getFullElName('item'), {
                    draggable: 'draggable',
                    href: '#',
                    'data-path': (0, normalize_1.normalizePath)(source.path, name + '/'),
                    'data-name': name,
                    'data-source': sourceName,
                    'data-source-path': source.path
                }, create.span(_this.tree.getFullElName('item-title'), name));
                var action = function (actionName) { return function (e) {
                    _this.e.fire("".concat(actionName, ".filebrowser"), {
                        name: name,
                        path: (0, normalize_1.normalizePath)(source.path + '/'),
                        source: sourceName
                    });
                    e.stopPropagation();
                    e.preventDefault();
                }; };
                _this.e.on(folderElm, 'click', action('openFolder'));
                _this.tree.container.appendChild(folderElm);
                if (name === '..' || name === '.') {
                    return;
                }
                if (options.renameFolder &&
                    _this.dataProvider.canI('FolderRename')) {
                    var btn = (0, ui_1.Button)(_this, {
                        icon: { name: 'pencil' },
                        name: 'rename',
                        tooltip: 'Rename',
                        size: 'tiny'
                    });
                    btn.onAction(action('renameFolder'));
                    folderElm.appendChild(btn.container);
                }
                if (options.deleteFolder &&
                    _this.dataProvider.canI('FolderRemove')) {
                    var btn = (0, ui_1.Button)(_this, {
                        icon: { name: 'cancel' },
                        name: 'remove',
                        tooltip: 'Delete',
                        size: 'tiny'
                    });
                    btn.onAction(action('removeFolder'));
                    folderElm.appendChild(btn.container);
                }
            });
            if (options.createNewFolder &&
                _this.dataProvider.canI('FolderCreate')) {
                var button = (0, ui_1.Button)(_this, 'plus', 'Add folder', 'secondary');
                button.onAction(function () {
                    _this.e.fire('addFolder', {
                        path: (0, normalize_1.normalizePath)(source.path + '/'),
                        source: sourceName
                    });
                });
                _this.tree.append(button);
            }
        });
    }, this.defaultTimeout));
}
exports.stateListeners = stateListeners;


/***/ }),

/***/ 21505:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FileBrowserFiles = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(27452);
var ui_1 = __webpack_require__(2074);
var FileBrowserFiles = (function (_super) {
    tslib_1.__extends(FileBrowserFiles, _super);
    function FileBrowserFiles() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FileBrowserFiles.prototype.className = function () {
        return 'FilebrowserFiles';
    };
    return FileBrowserFiles;
}(ui_1.UIGroup));
exports.FileBrowserFiles = FileBrowserFiles;


/***/ }),

/***/ 98782:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(21505), exports);
tslib_1.__exportStar(__webpack_require__(42472), exports);


/***/ }),

/***/ 42472:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FileBrowserTree = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(51422);
var ui_1 = __webpack_require__(2074);
var FileBrowserTree = (function (_super) {
    tslib_1.__extends(FileBrowserTree, _super);
    function FileBrowserTree() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FileBrowserTree.prototype.className = function () {
        return 'FilebrowserTree';
    };
    return FileBrowserTree;
}(ui_1.UIGroup));
exports.FileBrowserTree = FileBrowserTree;


/***/ }),

/***/ 3107:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Command = void 0;
var Command = (function () {
    function Command(oldValue, newValue, history, tick) {
        this.oldValue = oldValue;
        this.newValue = newValue;
        this.history = history;
        this.tick = tick;
    }
    Command.prototype.undo = function () {
        this.history.snapshot.restore(this.oldValue);
    };
    Command.prototype.redo = function () {
        this.history.snapshot.restore(this.newValue);
    };
    return Command;
}());
exports.Command = Command;


/***/ }),

/***/ 15432:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.History = void 0;
var tslib_1 = __webpack_require__(20255);
var config_1 = __webpack_require__(93166);
var component_1 = __webpack_require__(56562);
var snapshot_1 = __webpack_require__(31648);
var stack_1 = __webpack_require__(3621);
var command_1 = __webpack_require__(3107);
var decorators_1 = __webpack_require__(43441);
config_1.Config.prototype.history = {
    enable: true,
    maxHistoryLength: Infinity,
    timeout: 1000
};
config_1.Config.prototype.observer = config_1.Config.prototype.history;
var History = (function (_super) {
    tslib_1.__extends(History, _super);
    function History(editor, stack, snapshot) {
        if (stack === void 0) { stack = new stack_1.Stack(editor.o.history.maxHistoryLength); }
        if (snapshot === void 0) { snapshot = new snapshot_1.Snapshot(editor); }
        var _this = _super.call(this, editor) || this;
        _this.updateTick = 0;
        _this.__stack = stack;
        _this.snapshot = snapshot;
        if (editor.o.history.enable) {
            editor.e.on('afterAddPlace.history', function () {
                if (_this.isInDestruct) {
                    return;
                }
                _this.startValue = _this.snapshot.make();
                editor.events
                    .on('internalChange internalUpdate', function () {
                    _this.startValue = _this.snapshot.make();
                })
                    .on(editor.editor, [
                    'changeSelection',
                    'selectionstart',
                    'selectionchange',
                    'mousedown',
                    'mouseup',
                    'keydown',
                    'keyup'
                ]
                    .map(function (f) { return f + '.history'; })
                    .join(' '), function () {
                    if (_this.startValue.html ===
                        _this.j.getNativeEditorValue()) {
                        _this.startValue = _this.snapshot.make();
                    }
                })
                    .on(_this, 'change.history', _this.onChange);
            });
        }
        return _this;
    }
    History.prototype.className = function () {
        return 'History';
    };
    Object.defineProperty(History.prototype, "startValue", {
        get: function () {
            return this.__startValue;
        },
        set: function (value) {
            this.__startValue = value;
        },
        enumerable: false,
        configurable: true
    });
    History.prototype.__upTick = function () {
        this.updateTick += 1;
    };
    History.prototype.onChange = function () {
        this.__processChanges();
    };
    History.prototype.__processChanges = function () {
        if (this.snapshot.isBlocked || !this.j.o.history.enable) {
            return;
        }
        this.updateStack();
    };
    History.prototype.updateStack = function (replace) {
        if (replace === void 0) { replace = false; }
        var newValue = this.snapshot.make();
        if (!snapshot_1.Snapshot.equal(newValue, this.startValue)) {
            var newCommand = new command_1.Command(this.startValue, newValue, this, this.updateTick);
            if (replace) {
                var command = this.__stack.current();
                if (command && this.updateTick === command.tick) {
                    this.__stack.replace(newCommand);
                }
            }
            else {
                this.__stack.push(newCommand);
            }
            this.startValue = newValue;
            this.fireChangeStack();
        }
    };
    History.prototype.redo = function () {
        if (this.__stack.redo()) {
            this.startValue = this.snapshot.make();
            this.fireChangeStack();
        }
    };
    History.prototype.canRedo = function () {
        return this.__stack.canRedo();
    };
    History.prototype.undo = function () {
        if (this.__stack.undo()) {
            this.startValue = this.snapshot.make();
            this.fireChangeStack();
        }
    };
    History.prototype.canUndo = function () {
        return this.__stack.canUndo();
    };
    History.prototype.clear = function () {
        this.startValue = this.snapshot.make();
        this.__stack.clear();
        this.fireChangeStack();
    };
    Object.defineProperty(History.prototype, "length", {
        get: function () {
            return this.__stack.length;
        },
        enumerable: false,
        configurable: true
    });
    History.prototype.fireChangeStack = function () {
        var _a;
        this.j && !this.j.isInDestruct && ((_a = this.j.events) === null || _a === void 0 ? void 0 : _a.fire('changeStack'));
    };
    History.prototype.destruct = function () {
        if (this.isInDestruct) {
            return;
        }
        if (this.j.events) {
            this.j.e.off('.history');
        }
        this.snapshot.destruct();
        _super.prototype.destruct.call(this);
    };
    tslib_1.__decorate([
        (0, decorators_1.debounce)()
    ], History.prototype, "onChange", null);
    return History;
}(component_1.ViewComponent));
exports.History = History;


/***/ }),

/***/ 31648:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Snapshot = void 0;
var tslib_1 = __webpack_require__(20255);
var component_1 = __webpack_require__(56562);
var dom_1 = __webpack_require__(64968);
var constants_1 = __webpack_require__(86893);
var Snapshot = (function (_super) {
    tslib_1.__extends(Snapshot, _super);
    function Snapshot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.__isBlocked = false;
        return _this;
    }
    Snapshot.prototype.className = function () {
        return 'Snapshot';
    };
    Snapshot.equal = function (first, second) {
        return (first.html === second.html &&
            JSON.stringify(first.range) === JSON.stringify(second.range));
    };
    Snapshot.countNodesBeforeInParent = function (elm) {
        if (!elm.parentNode) {
            return 0;
        }
        var elms = elm.parentNode.childNodes;
        var count = 0, previous = null;
        for (var j = 0; j < elms.length; j += 1) {
            if (previous &&
                !this.isIgnoredNode(elms[j]) &&
                !(dom_1.Dom.isText(previous) && dom_1.Dom.isText(elms[j]))) {
                count += 1;
            }
            if (elms[j] === elm) {
                return count;
            }
            previous = elms[j];
        }
        return 0;
    };
    Snapshot.strokeOffset = function (elm, offset) {
        while (dom_1.Dom.isText(elm)) {
            elm = elm.previousSibling;
            if (dom_1.Dom.isText(elm) && elm.nodeValue) {
                offset += elm.nodeValue.length;
            }
        }
        return offset;
    };
    Snapshot.prototype.calcHierarchyLadder = function (elm) {
        var counts = [];
        if (!elm || !elm.parentNode || !dom_1.Dom.isOrContains(this.j.editor, elm)) {
            return [];
        }
        while (elm && elm !== this.j.editor) {
            if (elm && !Snapshot.isIgnoredNode(elm)) {
                counts.push(Snapshot.countNodesBeforeInParent(elm));
            }
            elm = elm.parentNode;
        }
        return counts.reverse();
    };
    Snapshot.prototype.getElementByLadder = function (ladder) {
        var n = this.j.editor, i;
        for (i = 0; n && i < ladder.length; i += 1) {
            n = n.childNodes[ladder[i]];
        }
        return n;
    };
    Object.defineProperty(Snapshot.prototype, "isBlocked", {
        get: function () {
            return this.__isBlocked;
        },
        enumerable: false,
        configurable: true
    });
    Snapshot.prototype.__block = function (enable) {
        this.__isBlocked = enable;
    };
    Snapshot.prototype.transaction = function (changes) {
        this.__block(true);
        try {
            changes();
        }
        catch (e) {
             false && 0;
        }
        this.__block(false);
    };
    Snapshot.prototype.make = function () {
        var snapshot = {
            html: '',
            range: {
                startContainer: [],
                startOffset: 0,
                endContainer: [],
                endOffset: 0
            }
        };
        snapshot.html = this.removeJoditSelection(this.j.editor);
        var sel = this.j.s.sel;
        if (sel && sel.rangeCount) {
            var range = sel.getRangeAt(0), startContainer = this.calcHierarchyLadder(range.startContainer), endContainer = this.calcHierarchyLadder(range.endContainer);
            var startOffset = Snapshot.strokeOffset(range.startContainer, range.startOffset), endOffset = Snapshot.strokeOffset(range.endContainer, range.endOffset);
            if (!startContainer.length &&
                range.startContainer !== this.j.editor) {
                startOffset = 0;
            }
            if (!endContainer.length && range.endContainer !== this.j.editor) {
                endOffset = 0;
            }
            snapshot.range = {
                startContainer: startContainer,
                startOffset: startOffset,
                endContainer: endContainer,
                endOffset: endOffset
            };
        }
        return snapshot;
    };
    Snapshot.prototype.restore = function (snapshot) {
        var _this = this;
        this.transaction(function () {
            var scroll = _this.storeScrollState();
            var value = _this.j.getNativeEditorValue();
            if (value !== snapshot.html) {
                _this.j.value = snapshot.html;
            }
            _this.restoreOnlySelection(snapshot);
            _this.restoreScrollState(scroll);
        });
    };
    Snapshot.prototype.storeScrollState = function () {
        return [this.j.ow.scrollY, this.j.editor.scrollTop];
    };
    Snapshot.prototype.restoreScrollState = function (scrolls) {
        var j = this.j, ow = j.ow;
        ow.scrollTo(ow.scrollX, scrolls[0]);
        j.editor.scrollTop = scrolls[1];
    };
    Snapshot.prototype.restoreOnlySelection = function (snapshot) {
        try {
            if (snapshot.range) {
                var range = this.j.ed.createRange();
                range.setStart(this.getElementByLadder(snapshot.range.startContainer), snapshot.range.startOffset);
                range.setEnd(this.getElementByLadder(snapshot.range.endContainer), snapshot.range.endOffset);
                this.j.s.selectRange(range);
            }
        }
        catch (__ignore) {
            this.j.editor.lastChild &&
                this.j.s.setCursorAfter(this.j.editor.lastChild);
            if (false) {}
        }
    };
    Snapshot.prototype.destruct = function () {
        this.__block(false);
        _super.prototype.destruct.call(this);
    };
    Snapshot.isIgnoredNode = function (node) {
        return (dom_1.Dom.isText(node) && !node.nodeValue) || dom_1.Dom.isTemporary(node);
    };
    Snapshot.prototype.removeJoditSelection = function (node) {
        var clone = node.cloneNode(true);
        clone.querySelectorAll("[".concat(constants_1.TEMP_ATTR, "]")).forEach(dom_1.Dom.unwrap);
        return clone.innerHTML;
    };
    return Snapshot;
}(component_1.ViewComponent));
exports.Snapshot = Snapshot;


/***/ }),

/***/ 3621:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Stack = void 0;
var Stack = (function () {
    function Stack(size) {
        this.size = size;
        this.commands = [];
        this.stackPosition = -1;
    }
    Object.defineProperty(Stack.prototype, "length", {
        get: function () {
            return this.commands.length;
        },
        enumerable: false,
        configurable: true
    });
    Stack.prototype.clearRedo = function () {
        this.commands.length = this.stackPosition + 1;
    };
    Stack.prototype.clear = function () {
        this.commands.length = 0;
        this.stackPosition = -1;
    };
    Stack.prototype.push = function (command) {
        this.clearRedo();
        this.commands.push(command);
        this.stackPosition += 1;
        if (this.commands.length > this.size) {
            this.commands.shift();
            this.stackPosition -= 1;
        }
    };
    Stack.prototype.replace = function (command) {
        this.commands[this.stackPosition] = command;
    };
    Stack.prototype.current = function () {
        return this.commands[this.stackPosition];
    };
    Stack.prototype.undo = function () {
        if (this.canUndo()) {
            if (this.commands[this.stackPosition]) {
                this.commands[this.stackPosition].undo();
            }
            this.stackPosition -= 1;
            return true;
        }
        return false;
    };
    Stack.prototype.redo = function () {
        if (this.canRedo()) {
            this.stackPosition += 1;
            if (this.commands[this.stackPosition]) {
                this.commands[this.stackPosition].redo();
            }
            return true;
        }
        return false;
    };
    Stack.prototype.canUndo = function () {
        return this.stackPosition >= 0;
    };
    Stack.prototype.canRedo = function () {
        return this.stackPosition < this.commands.length - 1;
    };
    return Stack;
}());
exports.Stack = Stack;


/***/ }),

/***/ 95356:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.imageeditor = {
    min_width: 20,
    min_height: 20,
    closeAfterSave: false,
    width: '85%',
    height: '85%',
    crop: true,
    resize: true,
    resizeUseRatio: true,
    resizeMinWidth: 20,
    resizeMinHeight: 20,
    cropUseRatio: true,
    cropDefaultWidth: '70%',
    cropDefaultHeight: '70%'
};
icon_1.Icon.set('crop', __webpack_require__(3610)).set('resize', __webpack_require__(56170));


/***/ }),

/***/ 35503:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.openImageEditor = exports.ImageEditor = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(62820);
var config_1 = __webpack_require__(93166);
var component_1 = __webpack_require__(56562);
var helpers_1 = __webpack_require__(40332);
var dom_1 = __webpack_require__(64968);
var button_1 = __webpack_require__(96516);
var form_1 = __webpack_require__(9249);
var decorators_1 = __webpack_require__(43441);
__webpack_require__(95356);
var jie = 'jodit-image-editor';
var TABS = {
    resize: 'resize',
    crop: 'crop'
};
var ImageEditor = (function (_super) {
    tslib_1.__extends(ImageEditor, _super);
    function ImageEditor(editor) {
        var _this = _super.call(this, editor) || this;
        _this.resizeUseRatio = true;
        _this.cropUseRatio = true;
        _this.clicked = false;
        _this.start_x = 0;
        _this.start_y = 0;
        _this.top_x = 0;
        _this.top_y = 0;
        _this.width = 0;
        _this.height = 0;
        _this.activeTab = TABS.resize;
        _this.naturalWidth = 0;
        _this.naturalHeight = 0;
        _this.ratio = 0;
        _this.new_h = 0;
        _this.new_w = 0;
        _this.diff_x = 0;
        _this.diff_y = 0;
        _this.cropBox = {
            x: 0,
            y: 0,
            w: 0,
            h: 0
        };
        _this.resizeBox = {
            w: 0,
            h: 0
        };
        _this.calcCropBox = function () {
            var node = _this.crop_box.parentNode, w = node.offsetWidth * 0.8, h = node.offsetHeight * 0.8;
            var wn = w, hn = h;
            var _a = _this, nw = _a.naturalWidth, nh = _a.naturalHeight;
            if (w > nw && h > nh) {
                wn = nw;
                hn = nh;
            }
            else if (_this.ratio > w / h) {
                wn = w;
                hn = nh * (w / nw);
            }
            else {
                wn = nw * (h / nh);
                hn = h;
            }
            (0, helpers_1.css)(_this.crop_box, {
                width: wn,
                height: hn
            });
        };
        _this.showCrop = function () {
            if (!_this.cropImage) {
                return;
            }
            _this.calcCropBox();
            var w = _this.cropImage.offsetWidth ||
                _this.image.offsetWidth ||
                _this.image.naturalWidth;
            _this.new_w = ImageEditor_1.calcValueByPercent(w, _this.o.cropDefaultWidth);
            var h = _this.cropImage.offsetHeight ||
                _this.image.offsetHeight ||
                _this.image.naturalHeight;
            if (_this.cropUseRatio) {
                _this.new_h = _this.new_w / _this.ratio;
            }
            else {
                _this.new_h = ImageEditor_1.calcValueByPercent(h, _this.o.cropDefaultHeight);
            }
            (0, helpers_1.css)(_this.cropHandler, {
                backgroundImage: 'url(' + (0, helpers_1.attr)(_this.cropImage, 'src') + ')',
                width: _this.new_w,
                height: _this.new_h,
                left: w / 2 - _this.new_w / 2,
                top: h / 2 - _this.new_h / 2
            });
            _this.j.e.fire(_this.cropHandler, 'updatesize');
        };
        _this.updateCropBox = function () {
            if (!_this.cropImage) {
                return;
            }
            var ratioX = _this.cropImage.offsetWidth / _this.naturalWidth, ratioY = _this.cropImage.offsetHeight / _this.naturalHeight;
            _this.cropBox.x = (0, helpers_1.css)(_this.cropHandler, 'left') / ratioX;
            _this.cropBox.y = (0, helpers_1.css)(_this.cropHandler, 'top') / ratioY;
            _this.cropBox.w = _this.cropHandler.offsetWidth / ratioX;
            _this.cropBox.h = _this.cropHandler.offsetHeight / ratioY;
            _this.sizes.textContent =
                _this.cropBox.w.toFixed(0) + 'x' + _this.cropBox.h.toFixed(0);
        };
        _this.updateResizeBox = function () {
            _this.resizeBox.w = _this.image.offsetWidth || _this.naturalWidth;
            _this.resizeBox.h = _this.image.offsetHeight || _this.naturalHeight;
        };
        _this.setHandlers = function () {
            var self = _this;
            var _a = (0, helpers_1.refs)(_this.editor), widthInput = _a.widthInput, heightInput = _a.heightInput;
            self.j.e
                .on([
                self.editor.querySelector('.jodit_bottomright'),
                self.cropHandler
            ], "mousedown.".concat(jie), _this.onResizeHandleMouseDown)
                .on(_this.j.ow, "resize.".concat(jie), function () {
                _this.j.e.fire(self.resizeHandler, 'updatesize');
                self.showCrop();
                _this.j.e.fire(self.cropHandler, 'updatesize');
            });
            self.j.e
                .on((0, helpers_1.toArray)(_this.editor.querySelectorAll(".".concat(jie, "__slider-title"))), 'click', _this.onTitleModeClick)
                .on([widthInput, heightInput], 'input', _this.onChangeSizeInput);
            var _b = (0, helpers_1.refs)(_this.editor), keepAspectRatioResize = _b.keepAspectRatioResize, keepAspectRatioCrop = _b.keepAspectRatioCrop;
            if (keepAspectRatioResize) {
                keepAspectRatioResize.addEventListener('change', function () {
                    _this.resizeUseRatio = keepAspectRatioResize.checked;
                });
            }
            if (keepAspectRatioCrop) {
                keepAspectRatioCrop.addEventListener('change', function () {
                    _this.cropUseRatio = keepAspectRatioCrop.checked;
                });
            }
            self.j.e
                .on(self.resizeHandler, 'updatesize', function () {
                (0, helpers_1.css)(self.resizeHandler, {
                    top: 0,
                    left: 0,
                    width: self.image.offsetWidth || self.naturalWidth,
                    height: self.image.offsetHeight || self.naturalHeight
                });
                _this.updateResizeBox();
            })
                .on(self.cropHandler, 'updatesize', function () {
                if (!self.cropImage) {
                    return;
                }
                var new_x = (0, helpers_1.css)(self.cropHandler, 'left'), new_y = (0, helpers_1.css)(self.cropHandler, 'top'), new_width = self.cropHandler.offsetWidth, new_height = self.cropHandler.offsetHeight;
                if (new_x < 0) {
                    new_x = 0;
                }
                if (new_y < 0) {
                    new_y = 0;
                }
                if (new_x + new_width > self.cropImage.offsetWidth) {
                    new_width = self.cropImage.offsetWidth - new_x;
                    if (self.cropUseRatio) {
                        new_height = new_width / self.ratio;
                    }
                }
                if (new_y + new_height > self.cropImage.offsetHeight) {
                    new_height = self.cropImage.offsetHeight - new_y;
                    if (self.cropUseRatio) {
                        new_width = new_height * self.ratio;
                    }
                }
                (0, helpers_1.css)(self.cropHandler, {
                    width: new_width,
                    height: new_height,
                    left: new_x,
                    top: new_y,
                    backgroundPosition: -new_x - 1 + 'px ' + (-new_y - 1) + 'px',
                    backgroundSize: self.cropImage.offsetWidth +
                        'px ' +
                        self.cropImage.offsetHeight +
                        'px'
                });
                self.updateCropBox();
            });
            Object.values(self.buttons).forEach(function (button) {
                button.onAction(function () {
                    var data = {
                        action: self.activeTab,
                        box: self.activeTab === TABS.resize
                            ? self.resizeBox
                            : self.cropBox
                    };
                    switch (button) {
                        case self.buttons.saveas:
                            self.j.prompt('Enter new name', 'Save in new file', function (name) {
                                if (!(0, helpers_1.trim)(name)) {
                                    self.j.alert('The name should not be empty');
                                    return false;
                                }
                                self.onSave(name, data, self.hide, function (e) {
                                    self.j.alert(e.message);
                                });
                            });
                            break;
                        case self.buttons.save:
                            self.onSave(undefined, data, self.hide, function (e) {
                                self.j.alert(e.message);
                            });
                            break;
                        case self.buttons.reset:
                            if (self.activeTab === TABS.resize) {
                                (0, helpers_1.css)(self.image, {
                                    width: null,
                                    height: null
                                });
                                widthInput.value = self.naturalWidth.toString();
                                heightInput.value = self.naturalHeight.toString();
                                self.j.e.fire(self.resizeHandler, 'updatesize');
                            }
                            else {
                                self.showCrop();
                            }
                            break;
                    }
                });
            });
        };
        _this.options =
            editor && editor.o && editor.o.imageeditor
                ? editor.o.imageeditor
                : config_1.Config.defaultOptions.imageeditor;
        var o = _this.options;
        _this.resizeUseRatio = o.resizeUseRatio;
        _this.cropUseRatio = o.cropUseRatio;
        _this.buttons = {
            reset: (0, button_1.Button)(_this.j, 'update', 'Reset'),
            save: (0, button_1.Button)(_this.j, 'save', 'Save'),
            saveas: (0, button_1.Button)(_this.j, 'save', 'Save as ...')
        };
        _this.activeTab = o.resize ? TABS.resize : TABS.crop;
        _this.editor = (0, form_1.form)(_this.j, _this.options);
        var _a = (0, helpers_1.refs)(_this.editor), resizeBox = _a.resizeBox, cropBox = _a.cropBox;
        _this.resize_box = resizeBox;
        _this.crop_box = cropBox;
        _this.sizes = _this.editor.querySelector(".".concat(jie, "__area.").concat(jie, "__area_crop .jodit-image-editor__sizes"));
        _this.resizeHandler = _this.editor.querySelector(".".concat(jie, "__resizer"));
        _this.cropHandler = _this.editor.querySelector(".".concat(jie, "__croper"));
        _this._dialog = _this.j.dlg({
            buttons: ['fullsize', 'dialog.close']
        });
        _this._dialog.setContent(_this.editor);
        _this._dialog.setSize(_this.o.width, _this.o.height);
        _this._dialog.setHeader([
            _this.buttons.reset,
            _this.buttons.save,
            _this.buttons.saveas
        ]);
        _this.setHandlers();
        return _this;
    }
    ImageEditor_1 = ImageEditor;
    ImageEditor.prototype.className = function () {
        return 'ImageEditor';
    };
    ImageEditor.prototype.onTitleModeClick = function (e) {
        var self = this, title = e.target;
        var slide = title === null || title === void 0 ? void 0 : title.parentElement;
        if (!slide) {
            return;
        }
        (0, helpers_1.$$)(".".concat(jie, "__slider,.").concat(jie, "__area"), self.editor).forEach(function (elm) {
            return elm.classList.remove("".concat(jie, "_active"));
        });
        slide.classList.add("".concat(jie, "_active"));
        this.activeTab = (0, helpers_1.attr)(slide, '-area') || TABS.resize;
        var tab = self.editor.querySelector(".".concat(jie, "__area.").concat(jie, "__area_") + self.activeTab);
        if (tab) {
            tab.classList.add("".concat(jie, "_active"));
        }
        if (self.activeTab === TABS.crop) {
            self.showCrop();
        }
    };
    ImageEditor.prototype.onChangeSizeInput = function (e) {
        var self = this, input = e.target, _a = (0, helpers_1.refs)(this.editor), widthInput = _a.widthInput, heightInput = _a.heightInput, isWidth = (0, helpers_1.attr)(input, 'data-ref') === 'widthInput', x = parseInt(input.value, 10), minX = isWidth ? self.o.min_width : self.o.min_height, minY = !isWidth ? self.o.min_width : self.o.min_height;
        var y;
        if (x > minX) {
            (0, helpers_1.css)(self.image, isWidth ? 'width' : 'height', x);
            if (self.resizeUseRatio) {
                y = isWidth
                    ? Math.round(x / self.ratio)
                    : Math.round(x * self.ratio);
                if (y > minY) {
                    (0, helpers_1.css)(self.image, !isWidth ? 'width' : 'height', y);
                    if (isWidth) {
                        heightInput.value = y.toString();
                    }
                    else {
                        widthInput.value = y.toString();
                    }
                }
            }
        }
        this.j.e.fire(self.resizeHandler, 'updatesize');
    };
    ImageEditor.prototype.onResizeHandleMouseDown = function (e) {
        var self = this;
        self.target = e.target;
        e.preventDefault();
        e.stopImmediatePropagation();
        self.clicked = true;
        self.start_x = e.clientX;
        self.start_y = e.clientY;
        if (self.activeTab === TABS.crop) {
            self.top_x = (0, helpers_1.css)(self.cropHandler, 'left');
            self.top_y = (0, helpers_1.css)(self.cropHandler, 'top');
            self.width = self.cropHandler.offsetWidth;
            self.height = self.cropHandler.offsetHeight;
        }
        else {
            self.width = self.image.offsetWidth;
            self.height = self.image.offsetHeight;
        }
        self.j.e
            .on(this.j.ow, 'mousemove', this.onGlobalMouseMove)
            .one(this.j.ow, 'mouseup', this.onGlobalMouseUp);
    };
    ImageEditor.prototype.onGlobalMouseUp = function (e) {
        if (this.clicked) {
            this.clicked = false;
            e.stopImmediatePropagation();
            this.j.e.off(this.j.ow, 'mousemove', this.onGlobalMouseMove);
        }
    };
    ImageEditor.prototype.onGlobalMouseMove = function (e) {
        var self = this;
        if (!self.clicked) {
            return;
        }
        var _a = (0, helpers_1.refs)(this.editor), widthInput = _a.widthInput, heightInput = _a.heightInput;
        self.diff_x = e.clientX - self.start_x;
        self.diff_y = e.clientY - self.start_y;
        if ((self.activeTab === TABS.resize && self.resizeUseRatio) ||
            (self.activeTab === TABS.crop && self.cropUseRatio)) {
            if (self.diff_x) {
                self.new_w = self.width + self.diff_x;
                self.new_h = Math.round(self.new_w / self.ratio);
            }
            else {
                self.new_h = self.height + self.diff_y;
                self.new_w = Math.round(self.new_h * self.ratio);
            }
        }
        else {
            self.new_w = self.width + self.diff_x;
            self.new_h = self.height + self.diff_y;
        }
        if (self.activeTab === TABS.resize) {
            if (self.new_w > self.o.resizeMinWidth) {
                (0, helpers_1.css)(self.image, 'width', self.new_w + 'px');
                widthInput.value = self.new_w.toString();
            }
            if (self.new_h > self.o.resizeMinHeight) {
                (0, helpers_1.css)(self.image, 'height', self.new_h + 'px');
                heightInput.value = self.new_h.toString();
            }
            this.j.e.fire(self.resizeHandler, 'updatesize');
        }
        else {
            if (self.target !== self.cropHandler) {
                if (self.top_x + self.new_w > self.cropImage.offsetWidth) {
                    self.new_w = self.cropImage.offsetWidth - self.top_x;
                }
                if (self.top_y + self.new_h > self.cropImage.offsetHeight) {
                    self.new_h = self.cropImage.offsetHeight - self.top_y;
                }
                (0, helpers_1.css)(self.cropHandler, {
                    width: self.new_w,
                    height: self.new_h
                });
            }
            else {
                if (self.top_x + self.diff_x + self.cropHandler.offsetWidth >
                    self.cropImage.offsetWidth) {
                    self.diff_x =
                        self.cropImage.offsetWidth -
                            self.top_x -
                            self.cropHandler.offsetWidth;
                }
                (0, helpers_1.css)(self.cropHandler, 'left', self.top_x + self.diff_x);
                if (self.top_y + self.diff_y + self.cropHandler.offsetHeight >
                    self.cropImage.offsetHeight) {
                    self.diff_y =
                        self.cropImage.offsetHeight -
                            self.top_y -
                            self.cropHandler.offsetHeight;
                }
                (0, helpers_1.css)(self.cropHandler, 'top', self.top_y + self.diff_y);
            }
            this.j.e.fire(self.cropHandler, 'updatesize');
        }
    };
    Object.defineProperty(ImageEditor.prototype, "o", {
        get: function () {
            return this.options;
        },
        enumerable: false,
        configurable: true
    });
    ImageEditor.prototype.hide = function () {
        this._dialog.close();
    };
    ImageEditor.prototype.open = function (url, save) {
        var _this = this;
        return this.j.async.promise(function (resolve) {
            var timestamp = new Date().getTime();
            _this.image = _this.j.c.element('img');
            (0, helpers_1.$$)('img,.jodit-icon_loader', _this.resize_box).forEach(dom_1.Dom.safeRemove);
            (0, helpers_1.$$)('img,.jodit-icon_loader', _this.crop_box).forEach(dom_1.Dom.safeRemove);
            (0, helpers_1.css)(_this.cropHandler, 'background', 'transparent');
            _this.onSave = save;
            _this.resize_box.appendChild(_this.j.c.element('i', { class: 'jodit-icon_loader' }));
            _this.crop_box.appendChild(_this.j.c.element('i', { class: 'jodit-icon_loader' }));
            if (/\?/.test(url)) {
                url += '&_tst=' + timestamp;
            }
            else {
                url += '?_tst=' + timestamp;
            }
            _this.image.setAttribute('src', url);
            _this._dialog.open();
            var _a = (0, helpers_1.refs)(_this.editor), widthInput = _a.widthInput, heightInput = _a.heightInput;
            var onload = function () {
                if (_this.isDestructed) {
                    return;
                }
                _this.image.removeEventListener('load', onload);
                _this.naturalWidth = _this.image.naturalWidth;
                _this.naturalHeight = _this.image.naturalHeight;
                widthInput.value = _this.naturalWidth.toString();
                heightInput.value = _this.naturalHeight.toString();
                _this.ratio = _this.naturalWidth / _this.naturalHeight;
                _this.resize_box.appendChild(_this.image);
                _this.cropImage = _this.image.cloneNode(true);
                _this.crop_box.appendChild(_this.cropImage);
                dom_1.Dom.safeRemove.apply(null, (0, helpers_1.$$)('.jodit-icon_loader', _this.editor));
                if (_this.activeTab === TABS.crop) {
                    _this.showCrop();
                }
                _this.j.e.fire(_this.resizeHandler, 'updatesize');
                _this.j.e.fire(_this.cropHandler, 'updatesize');
                _this._dialog.setPosition();
                _this.j.e.fire('afterImageEditor');
                resolve(_this._dialog);
            };
            _this.image.addEventListener('load', onload);
            if (_this.image.complete) {
                onload();
            }
        });
    };
    ImageEditor.prototype.destruct = function () {
        if (this.isDestructed) {
            return;
        }
        if (this._dialog && !this._dialog.isInDestruct) {
            this._dialog.destruct();
        }
        dom_1.Dom.safeRemove(this.editor);
        if (this.j.e) {
            this.j.e
                .off(this.j.ow, 'mousemove', this.onGlobalMouseMove)
                .off(this.j.ow, 'mouseup', this.onGlobalMouseUp)
                .off(this.ow, ".".concat(jie))
                .off(".".concat(jie));
        }
        _super.prototype.destruct.call(this);
    };
    var ImageEditor_1;
    ImageEditor.calcValueByPercent = function (value, percent) {
        var percentStr = percent.toString();
        var valueNbr = parseFloat(value.toString());
        var match;
        match = /^[-+]?[0-9]+(px)?$/.exec(percentStr);
        if (match) {
            return parseInt(percentStr, 10);
        }
        match = /^([-+]?[0-9.]+)%$/.exec(percentStr);
        if (match) {
            return Math.round(valueNbr * (parseFloat(match[1]) / 100));
        }
        return valueNbr || 0;
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], ImageEditor.prototype, "onTitleModeClick", null);
    tslib_1.__decorate([
        (0, decorators_1.debounce)(),
        decorators_1.autobind
    ], ImageEditor.prototype, "onChangeSizeInput", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], ImageEditor.prototype, "onResizeHandleMouseDown", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], ImageEditor.prototype, "onGlobalMouseUp", null);
    tslib_1.__decorate([
        (0, decorators_1.throttle)(10)
    ], ImageEditor.prototype, "onGlobalMouseMove", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], ImageEditor.prototype, "hide", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], ImageEditor.prototype, "open", null);
    ImageEditor = ImageEditor_1 = tslib_1.__decorate([
        decorators_1.component
    ], ImageEditor);
    return ImageEditor;
}(component_1.ViewComponent));
exports.ImageEditor = ImageEditor;
function openImageEditor(href, name, path, source, onSuccess, onFailed) {
    var _this = this;
    return this.getInstance('ImageEditor', this.o).open(href, function (newname, box, success, failed) {
        return (0, helpers_1.call)(box.action === 'resize'
            ? _this.dataProvider.resize
            : _this.dataProvider.crop, path, source, name, newname, box.box)
            .then(function (ok) {
            if (ok) {
                success();
                if (onSuccess) {
                    onSuccess();
                }
            }
        })
            .catch(function (error) {
            failed(error);
            if (onFailed) {
                onFailed(error);
            }
        });
    });
}
exports.openImageEditor = openImageEditor;


/***/ }),

/***/ 9249:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.form = void 0;
var ui_1 = __webpack_require__(2074);
var jie = 'jodit-image-editor';
var gi = ui_1.Icon.get.bind(ui_1.Icon);
var act = function (el, className) {
    if (className === void 0) { className = 'jodti-image-editor_active'; }
    return el ? className : '';
};
var form = function (editor, o) {
    var i = editor.i18n.bind(editor);
    var switcher = function (label, ref, active) {
        if (active === void 0) { active = true; }
        return "<div class=\"jodit-form__group\">\n\t\t\t<label>".concat(i(label), "</label>\n\n\t\t\t<label class='jodit-switcher'>\n\t\t\t\t<input ").concat(act(active, 'checked'), " data-ref=\"").concat(ref, "\" type=\"checkbox\"/>\n\t\t\t\t<span class=\"jodit-switcher__slider\"></span>\n\t\t\t</label>\n\t</div>");
    };
    return editor.create.fromHTML("<form class=\"".concat(jie, " jodit-properties\">\n\t\t<div class=\"jodit-grid jodit-grid_xs-column\">\n\t\t\t<div class=\"jodit_col-lg-3-4 jodit_col-sm-5-5\">\n\t\t\t").concat(o.resize
        ? "<div class=\"".concat(jie, "__area ").concat(jie, "__area_resize ").concat(jie, "_active\">\n\t\t\t\t\t\t\t<div data-ref=\"resizeBox\" class=\"").concat(jie, "__box\"></div>\n\t\t\t\t\t\t\t<div class=\"").concat(jie, "__resizer\">\n\t\t\t\t\t\t\t\t<i class=\"jodit_bottomright\"></i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>")
        : '', "\n\t\t\t").concat(o.crop
        ? "<div class=\"".concat(jie, "__area ").concat(jie, "__area_crop ").concat(act(!o.resize), "\">\n\t\t\t\t\t\t\t<div data-ref=\"cropBox\" class=\"").concat(jie, "__box\">\n\t\t\t\t\t\t\t\t<div class=\"").concat(jie, "__croper\">\n\t\t\t\t\t\t\t\t\t<i class=\"jodit_bottomright\"></i>\n\t\t\t\t\t\t\t\t\t<i class=\"").concat(jie, "__sizes\"></i>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>")
        : '', "\n\t\t\t</div>\n\t\t\t<div class=\"jodit_col-lg-1-4 jodit_col-sm-5-5\">\n\t\t\t").concat(o.resize
        ? "<div data-area=\"resize\" class=\"".concat(jie, "__slider ").concat(jie, "_active\">\n\t\t\t\t\t\t\t<div class=\"").concat(jie, "__slider-title\">\n\t\t\t\t\t\t\t\t").concat(gi('resize'), "\n\t\t\t\t\t\t\t\t").concat(i('Resize'), "\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"").concat(jie, "__slider-content\">\n\t\t\t\t\t\t\t\t<div class=\"jodit-form__group\">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t").concat(i('Width'), "\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" data-ref=\"widthInput\" class=\"jodit-input\"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"jodit-form__group\">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t").concat(i('Height'), "\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" data-ref=\"heightInput\" class=\"jodit-input\"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t").concat(switcher('Keep Aspect Ratio', 'keepAspectRatioResize'), "\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>")
        : '', "\n\t\t\t").concat(o.crop
        ? "<div data-area=\"crop\" class=\"".concat(jie, "__slider ").concat(act(!o.resize), "'\">\n\t\t\t\t\t\t\t<div class=\"").concat(jie, "__slider-title\">\n\t\t\t\t\t\t\t\t").concat(gi('crop'), "\n\t\t\t\t\t\t\t\t").concat(i('Crop'), "\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"").concat(jie, "__slider-content\">\n\t\t\t\t\t\t\t\t").concat(switcher('Keep Aspect Ratio', 'keepAspectRatioCrop'), "\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>")
        : '', "\n\t\t\t</div>\n\t\t</div>\n\t</form>"));
};
exports.form = form;


/***/ }),

/***/ 87837:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PluginSystem = exports.UIMessages = exports.Uploader = exports.ToolbarCollection = exports.ToolbarEditorCollection = exports.Table = exports.StatusBar = exports.CommitStyle = exports.Select = exports.Snapshot = exports.History = exports.ImageEditor = exports.Helpers = exports.ViewWithToolbar = exports.View = exports.Icon = exports.ProgressBar = exports.UIBlock = exports.UICheckbox = exports.UITextArea = exports.UIInput = exports.UIForm = exports.UIList = exports.UIGroup = exports.UISeparator = exports.Popup = exports.UIButton = exports.UIElement = exports.Create = exports.Plugin = exports.LazyWalker = exports.Dom = exports.ContextMenu = exports.STATUSES = exports.ViewComponent = exports.Component = exports.Async = void 0;
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(55395), exports);
var async_1 = __webpack_require__(22630);
Object.defineProperty(exports, "Async", ({ enumerable: true, get: function () { return async_1.Async; } }));
tslib_1.__exportStar(__webpack_require__(30056), exports);
var component_1 = __webpack_require__(56562);
Object.defineProperty(exports, "Component", ({ enumerable: true, get: function () { return component_1.Component; } }));
Object.defineProperty(exports, "ViewComponent", ({ enumerable: true, get: function () { return component_1.ViewComponent; } }));
Object.defineProperty(exports, "STATUSES", ({ enumerable: true, get: function () { return component_1.STATUSES; } }));
var context_menu_1 = __webpack_require__(60403);
Object.defineProperty(exports, "ContextMenu", ({ enumerable: true, get: function () { return context_menu_1.ContextMenu; } }));
tslib_1.__exportStar(__webpack_require__(92080), exports);
var dom_1 = __webpack_require__(64968);
Object.defineProperty(exports, "Dom", ({ enumerable: true, get: function () { return dom_1.Dom; } }));
Object.defineProperty(exports, "LazyWalker", ({ enumerable: true, get: function () { return dom_1.LazyWalker; } }));
var plugin_1 = __webpack_require__(57549);
Object.defineProperty(exports, "Plugin", ({ enumerable: true, get: function () { return plugin_1.Plugin; } }));
var create_1 = __webpack_require__(42841);
Object.defineProperty(exports, "Create", ({ enumerable: true, get: function () { return create_1.Create; } }));
var ui_1 = __webpack_require__(2074);
Object.defineProperty(exports, "UIElement", ({ enumerable: true, get: function () { return ui_1.UIElement; } }));
Object.defineProperty(exports, "UIButton", ({ enumerable: true, get: function () { return ui_1.UIButton; } }));
Object.defineProperty(exports, "Popup", ({ enumerable: true, get: function () { return ui_1.Popup; } }));
Object.defineProperty(exports, "UISeparator", ({ enumerable: true, get: function () { return ui_1.UISeparator; } }));
Object.defineProperty(exports, "UIGroup", ({ enumerable: true, get: function () { return ui_1.UIGroup; } }));
Object.defineProperty(exports, "UIList", ({ enumerable: true, get: function () { return ui_1.UIList; } }));
Object.defineProperty(exports, "UIForm", ({ enumerable: true, get: function () { return ui_1.UIForm; } }));
Object.defineProperty(exports, "UIInput", ({ enumerable: true, get: function () { return ui_1.UIInput; } }));
Object.defineProperty(exports, "UITextArea", ({ enumerable: true, get: function () { return ui_1.UITextArea; } }));
Object.defineProperty(exports, "UICheckbox", ({ enumerable: true, get: function () { return ui_1.UICheckbox; } }));
Object.defineProperty(exports, "UIBlock", ({ enumerable: true, get: function () { return ui_1.UIBlock; } }));
Object.defineProperty(exports, "ProgressBar", ({ enumerable: true, get: function () { return ui_1.ProgressBar; } }));
Object.defineProperty(exports, "Icon", ({ enumerable: true, get: function () { return ui_1.Icon; } }));
var view_1 = __webpack_require__(75902);
Object.defineProperty(exports, "View", ({ enumerable: true, get: function () { return view_1.View; } }));
var view_with_toolbar_1 = __webpack_require__(43608);
Object.defineProperty(exports, "ViewWithToolbar", ({ enumerable: true, get: function () { return view_with_toolbar_1.ViewWithToolbar; } }));
tslib_1.__exportStar(__webpack_require__(63463), exports);
var Helpers = __webpack_require__(40332);
exports.Helpers = Helpers;
var image_editor_1 = __webpack_require__(35503);
Object.defineProperty(exports, "ImageEditor", ({ enumerable: true, get: function () { return image_editor_1.ImageEditor; } }));
var history_1 = __webpack_require__(15432);
Object.defineProperty(exports, "History", ({ enumerable: true, get: function () { return history_1.History; } }));
var snapshot_1 = __webpack_require__(31648);
Object.defineProperty(exports, "Snapshot", ({ enumerable: true, get: function () { return snapshot_1.Snapshot; } }));
var selection_1 = __webpack_require__(46325);
Object.defineProperty(exports, "Select", ({ enumerable: true, get: function () { return selection_1.Select; } }));
Object.defineProperty(exports, "CommitStyle", ({ enumerable: true, get: function () { return selection_1.CommitStyle; } }));
var status_bar_1 = __webpack_require__(38603);
Object.defineProperty(exports, "StatusBar", ({ enumerable: true, get: function () { return status_bar_1.StatusBar; } }));
var table_1 = __webpack_require__(25120);
Object.defineProperty(exports, "Table", ({ enumerable: true, get: function () { return table_1.Table; } }));
var editor_collection_1 = __webpack_require__(81698);
Object.defineProperty(exports, "ToolbarEditorCollection", ({ enumerable: true, get: function () { return editor_collection_1.ToolbarEditorCollection; } }));
var collection_1 = __webpack_require__(72719);
Object.defineProperty(exports, "ToolbarCollection", ({ enumerable: true, get: function () { return collection_1.ToolbarCollection; } }));
tslib_1.__exportStar(__webpack_require__(3890), exports);
var uploader_1 = __webpack_require__(50454);
Object.defineProperty(exports, "Uploader", ({ enumerable: true, get: function () { return uploader_1.Uploader; } }));
var messages_1 = __webpack_require__(71014);
Object.defineProperty(exports, "UIMessages", ({ enumerable: true, get: function () { return messages_1.UIMessages; } }));
var plugin_system_1 = __webpack_require__(44540);
Object.defineProperty(exports, "PluginSystem", ({ enumerable: true, get: function () { return plugin_system_1.PluginSystem; } }));


/***/ }),

/***/ 37762:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UIMessage = void 0;
var tslib_1 = __webpack_require__(20255);
var ui_1 = __webpack_require__(2074);
var component_1 = __webpack_require__(11441);
var UIMessage = (function (_super) {
    tslib_1.__extends(UIMessage, _super);
    function UIMessage(jodit, options) {
        var _this = _super.call(this, jodit) || this;
        _this.setMod('active', true);
        _this.setMod('variant', options.variant);
        _this.container.textContent = options.text;
        return _this;
    }
    UIMessage.prototype.className = function () {
        return 'UIMessage';
    };
    UIMessage = tslib_1.__decorate([
        component_1.component
    ], UIMessage);
    return UIMessage;
}(ui_1.UIElement));
exports.UIMessage = UIMessage;


/***/ }),

/***/ 71014:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UIMessages = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(63421);
var css_1 = __webpack_require__(26911);
var group_1 = __webpack_require__(61479);
var component_1 = __webpack_require__(11441);
var watch_1 = __webpack_require__(46163);
var message_1 = __webpack_require__(37762);
var UIMessages = (function (_super) {
    tslib_1.__extends(UIMessages, _super);
    function UIMessages(jodit, __box, options) {
        if (options === void 0) { options = {
            defaultTimeout: 3000,
            defaultOffset: 5
        }; }
        var _this = _super.call(this, jodit) || this;
        _this.__box = __box;
        _this.options = options;
        _this.__messages = new Set();
        return _this;
    }
    UIMessages.prototype.className = function () {
        return 'UIMessages';
    };
    UIMessages.prototype.info = function (text, timeout) {
        this.__message(text, 'info', timeout);
    };
    UIMessages.prototype.success = function (text, timeout) {
        this.__message(text, 'success', timeout);
    };
    UIMessages.prototype.error = function (text, timeout) {
        this.__message(text, 'error', timeout);
    };
    UIMessages.prototype.message = function (text, variant, timeout) {
        this.__message(text, variant, timeout);
    };
    UIMessages.prototype.__message = function (text, variant, timeout) {
        if (variant === void 0) { variant = 'info'; }
        var key = text + ':' + variant;
        if (this.__messages.has(key)) {
            this.async.updateTimeout(key, timeout || this.options.defaultTimeout);
            return;
        }
        this.__box.appendChild(this.container);
        var msg = new message_1.UIMessage(this.j, { text: text, variant: variant });
        this.append(msg);
        this.__calcOffsets();
        this.__messages.add(key);
        var remove = this.__getRemoveCallback(msg, key);
        this.j.e.on(msg.container, 'pointerdown', remove);
        this.async.setTimeout(remove, {
            label: key,
            timeout: timeout || this.options.defaultTimeout
        });
    };
    UIMessages.prototype.__getRemoveCallback = function (msg, key) {
        var _this = this;
        var remove = function (e) {
            e && e.preventDefault();
            if (msg.isInDestruct) {
                return;
            }
            _this.async.clearTimeout(key);
            _this.j.e.off(msg.container, 'pointerdown', remove);
            _this.__messages.delete(key);
            msg.setMod('active', false);
            _this.async.setTimeout(function () {
                _this.remove(msg);
                msg.destruct();
                _this.__calcOffsets();
            }, 300);
        };
        return remove;
    };
    UIMessages.prototype.__calcOffsets = function () {
        var _this = this;
        var height = 5;
        this.elements.forEach(function (elm) {
            (0, css_1.css)(elm.container, 'bottom', height + 'px');
            height += elm.container.offsetHeight + _this.options.defaultOffset;
        });
    };
    tslib_1.__decorate([
        (0, watch_1.watch)(':errorMessage')
    ], UIMessages.prototype, "__message", null);
    UIMessages = tslib_1.__decorate([
        component_1.component
    ], UIMessages);
    return UIMessages;
}(group_1.UIGroup));
exports.UIMessages = UIMessages;


/***/ }),

/***/ 38603:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StatusBar = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(32115);
var component_1 = __webpack_require__(56562);
var dom_1 = __webpack_require__(64968);
var traits_1 = __webpack_require__(59829);
var decorators_1 = __webpack_require__(43441);
var StatusBar = (function (_super) {
    tslib_1.__extends(StatusBar, _super);
    function StatusBar(jodit, target) {
        var _this = _super.call(this, jodit) || this;
        _this.target = target;
        _this.mods = {};
        _this.container = jodit.c.div('jodit-status-bar');
        target.appendChild(_this.container);
        _this.hide();
        return _this;
    }
    StatusBar.prototype.className = function () {
        return 'StatusBar';
    };
    StatusBar.prototype.hide = function () {
        this.container.classList.add('jodit_hidden');
    };
    StatusBar.prototype.show = function () {
        this.container.classList.remove('jodit_hidden');
    };
    Object.defineProperty(StatusBar.prototype, "isShown", {
        get: function () {
            return !this.container.classList.contains('jodit_hidden');
        },
        enumerable: false,
        configurable: true
    });
    StatusBar.prototype.getHeight = function () {
        var _a, _b;
        return (_b = (_a = this.container) === null || _a === void 0 ? void 0 : _a.offsetHeight) !== null && _b !== void 0 ? _b : 0;
    };
    StatusBar.prototype.findEmpty = function (inTheRight) {
        if (inTheRight === void 0) { inTheRight = false; }
        var items = this.getElms(inTheRight ? 'item-right' : 'item');
        for (var i = 0; i < items.length; i += 1) {
            if (!items[i].innerHTML.trim().length) {
                return items[i];
            }
        }
        return;
    };
    StatusBar.prototype.append = function (child, inTheRight) {
        var _a;
        if (inTheRight === void 0) { inTheRight = false; }
        var wrapper = this.findEmpty(inTheRight) ||
            this.j.c.div(this.getFullElName('item'));
        if (inTheRight) {
            wrapper.classList.add(this.getFullElName('item-right'));
        }
        wrapper.appendChild(child);
        (_a = this.container) === null || _a === void 0 ? void 0 : _a.appendChild(wrapper);
        if (this.j.o.statusbar) {
            this.show();
        }
        this.j.e.fire('resize');
    };
    StatusBar.prototype.destruct = function () {
        if (this.isInDestruct) {
            return;
        }
        this.setStatus(component_1.STATUSES.beforeDestruct);
        dom_1.Dom.safeRemove(this.container);
        _super.prototype.destruct.call(this);
    };
    StatusBar = tslib_1.__decorate([
        decorators_1.component,
        (0, decorators_1.derive)(traits_1.Mods, traits_1.Elms)
    ], StatusBar);
    return StatusBar;
}(component_1.ViewComponent));
exports.StatusBar = StatusBar;


/***/ }),

/***/ 25120:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Table = void 0;
var tslib_1 = __webpack_require__(20255);
var consts = __webpack_require__(86893);
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var component_1 = __webpack_require__(56562);
var global_1 = __webpack_require__(17332);
var decorators_1 = __webpack_require__(43441);
var markedValue = new WeakMap();
var Table = (function (_super) {
    tslib_1.__extends(Table, _super);
    function Table() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = new Set();
        return _this;
    }
    Table.prototype.className = function () {
        return 'Table';
    };
    Table.prototype.recalculateStyles = function () {
        var style = (0, global_1.getContainer)(this.j, Table, 'style', true);
        var selectors = [];
        this.selected.forEach(function (td) {
            var selector = (0, helpers_1.cssPath)(td);
            selector && selectors.push(selector);
        });
        style.innerHTML = selectors.length
            ? selectors.join(',') +
                "{".concat(this.jodit.options.table.selectionCellStyle, "}")
            : '';
    };
    Table.prototype.addSelection = function (td) {
        this.selected.add(td);
        this.recalculateStyles();
        var table = dom_1.Dom.closest(td, 'table', this.j.editor);
        if (table) {
            var cells = Table.selectedByTable.get(table) || new Set();
            cells.add(td);
            Table.selectedByTable.set(table, cells);
        }
    };
    Table.prototype.removeSelection = function (td) {
        this.selected.delete(td);
        this.recalculateStyles();
        var table = dom_1.Dom.closest(td, 'table', this.j.editor);
        if (table) {
            var cells = Table.selectedByTable.get(table);
            if (cells) {
                cells.delete(td);
                if (!cells.size) {
                    Table.selectedByTable.delete(table);
                }
            }
        }
    };
    Table.prototype.getAllSelectedCells = function () {
        return (0, helpers_1.toArray)(this.selected);
    };
    Table.getSelectedCellsByTable = function (table) {
        var cells = Table.selectedByTable.get(table);
        return cells ? (0, helpers_1.toArray)(cells) : [];
    };
    Table.prototype.destruct = function () {
        this.selected.clear();
        return _super.prototype.destruct.call(this);
    };
    Table.getRowsCount = function (table) {
        return table.rows.length;
    };
    Table.getColumnsCount = function (table) {
        var matrix = Table.formalMatrix(table);
        return matrix.reduce(function (max_count, cells) { return Math.max(max_count, cells.length); }, 0);
    };
    Table.formalMatrix = function (table, callback) {
        var matrix = [[]];
        var rows = (0, helpers_1.toArray)(table.rows);
        var setCell = function (cell, i) {
            if (matrix[i] === undefined) {
                matrix[i] = [];
            }
            var colSpan = cell.colSpan, rowSpan = cell.rowSpan;
            var column, row, currentColumn = 0;
            while (matrix[i][currentColumn]) {
                currentColumn += 1;
            }
            for (row = 0; row < rowSpan; row += 1) {
                for (column = 0; column < colSpan; column += 1) {
                    if (matrix[i + row] === undefined) {
                        matrix[i + row] = [];
                    }
                    if (callback &&
                        callback(cell, i + row, currentColumn + column, colSpan, rowSpan) === false) {
                        return false;
                    }
                    matrix[i + row][currentColumn + column] = cell;
                }
            }
        };
        for (var i = 0; i < rows.length; i += 1) {
            var cells = (0, helpers_1.toArray)(rows[i].cells);
            for (var j = 0; j < cells.length; j += 1) {
                if (setCell(cells[j], i) === false) {
                    return matrix;
                }
            }
        }
        return matrix;
    };
    Table.formalCoordinate = function (table, cell, max) {
        if (max === void 0) { max = false; }
        var i = 0, j = 0, width = 1, height = 1;
        Table.formalMatrix(table, function (td, ii, jj, colSpan, rowSpan) {
            if (cell === td) {
                i = ii;
                j = jj;
                width = colSpan || 1;
                height = rowSpan || 1;
                if (max) {
                    j += (colSpan || 1) - 1;
                    i += (rowSpan || 1) - 1;
                }
                return false;
            }
        });
        return [i, j, width, height];
    };
    Table.appendRow = function (table, line, after, create) {
        var _a;
        var row;
        if (!line) {
            var columnsCount = Table.getColumnsCount(table);
            row = create.element('tr');
            for (var j = 0; j < columnsCount; j += 1) {
                row.appendChild(create.element('td'));
            }
        }
        else {
            row = line.cloneNode(true);
            (0, helpers_1.$$)('td,th', line).forEach(function (cell) {
                var rowspan = (0, helpers_1.attr)(cell, 'rowspan');
                if (rowspan && parseInt(rowspan, 10) > 1) {
                    var newRowSpan = parseInt(rowspan, 10) - 1;
                    (0, helpers_1.attr)(cell, 'rowspan', newRowSpan > 1 ? newRowSpan : null);
                }
            });
            (0, helpers_1.$$)('td,th', row).forEach(function (cell) {
                cell.innerHTML = '';
            });
        }
        if (after && line && line.nextSibling) {
            line.parentNode &&
                line.parentNode.insertBefore(row, line.nextSibling);
        }
        else if (!after && line) {
            line.parentNode && line.parentNode.insertBefore(row, line);
        }
        else {
            (((_a = table.getElementsByTagName('tbody')) === null || _a === void 0 ? void 0 : _a[0]) || table).appendChild(row);
        }
    };
    Table.removeRow = function (table, rowIndex) {
        var box = Table.formalMatrix(table);
        var dec;
        var row = table.rows[rowIndex];
        box[rowIndex].forEach(function (cell, j) {
            dec = false;
            if (rowIndex - 1 >= 0 && box[rowIndex - 1][j] === cell) {
                dec = true;
            }
            else if (box[rowIndex + 1] && box[rowIndex + 1][j] === cell) {
                if (cell.parentNode === row && cell.parentNode.nextSibling) {
                    dec = true;
                    var nextCell = j + 1;
                    while (box[rowIndex + 1][nextCell] === cell) {
                        nextCell += 1;
                    }
                    var nextRow = dom_1.Dom.next(cell.parentNode, function (elm) { return dom_1.Dom.isTag(elm, 'tr'); }, table);
                    if (nextRow) {
                        if (box[rowIndex + 1][nextCell]) {
                            nextRow.insertBefore(cell, box[rowIndex + 1][nextCell]);
                        }
                        else {
                            nextRow.appendChild(cell);
                        }
                    }
                }
            }
            else {
                dom_1.Dom.safeRemove(cell);
            }
            if (dec &&
                (cell.parentNode === row || cell !== box[rowIndex][j - 1])) {
                var rowSpan = cell.rowSpan;
                (0, helpers_1.attr)(cell, 'rowspan', rowSpan - 1 > 1 ? rowSpan - 1 : null);
            }
        });
        dom_1.Dom.safeRemove(row);
    };
    Table.appendColumn = function (table, j, after, create) {
        var box = Table.formalMatrix(table);
        var i;
        if (j === undefined || j < 0) {
            j = Table.getColumnsCount(table) - 1;
        }
        for (i = 0; i < box.length; i += 1) {
            var cell = create.element('td');
            var td = box[i][j];
            var added = false;
            if (after) {
                if ((box[i] && td && j + 1 >= box[i].length) ||
                    td !== box[i][j + 1]) {
                    if (td.nextSibling) {
                        dom_1.Dom.before(td.nextSibling, cell);
                    }
                    else {
                        td.parentNode && td.parentNode.appendChild(cell);
                    }
                    added = true;
                }
            }
            else {
                if (j - 1 < 0 ||
                    (box[i][j] !== box[i][j - 1] && box[i][j].parentNode)) {
                    dom_1.Dom.before(box[i][j], cell);
                    added = true;
                }
            }
            if (!added) {
                (0, helpers_1.attr)(box[i][j], 'colspan', parseInt((0, helpers_1.attr)(box[i][j], 'colspan') || '1', 10) + 1);
            }
        }
    };
    Table.removeColumn = function (table, j) {
        var box = Table.formalMatrix(table);
        var dec;
        box.forEach(function (cells, i) {
            var td = cells[j];
            dec = false;
            if (j - 1 >= 0 && box[i][j - 1] === td) {
                dec = true;
            }
            else if (j + 1 < cells.length && box[i][j + 1] === td) {
                dec = true;
            }
            else {
                dom_1.Dom.safeRemove(td);
            }
            if (dec && (i - 1 < 0 || td !== box[i - 1][j])) {
                var colSpan = td.colSpan;
                (0, helpers_1.attr)(td, 'colspan', colSpan - 1 > 1 ? (colSpan - 1).toString() : null);
            }
        });
    };
    Table.getSelectedBound = function (table, selectedCells) {
        var bound = [
            [Infinity, Infinity],
            [0, 0]
        ];
        var box = Table.formalMatrix(table);
        var i, j, k;
        for (i = 0; i < box.length; i += 1) {
            for (j = 0; box[i] && j < box[i].length; j += 1) {
                if (selectedCells.includes(box[i][j])) {
                    bound[0][0] = Math.min(i, bound[0][0]);
                    bound[0][1] = Math.min(j, bound[0][1]);
                    bound[1][0] = Math.max(i, bound[1][0]);
                    bound[1][1] = Math.max(j, bound[1][1]);
                }
            }
        }
        for (i = bound[0][0]; i <= bound[1][0]; i += 1) {
            for (k = 1, j = bound[0][1]; j <= bound[1][1]; j += 1) {
                while (box[i] && box[i][j - k] && box[i][j] === box[i][j - k]) {
                    bound[0][1] = Math.min(j - k, bound[0][1]);
                    bound[1][1] = Math.max(j - k, bound[1][1]);
                    k += 1;
                }
                k = 1;
                while (box[i] && box[i][j + k] && box[i][j] === box[i][j + k]) {
                    bound[0][1] = Math.min(j + k, bound[0][1]);
                    bound[1][1] = Math.max(j + k, bound[1][1]);
                    k += 1;
                }
                k = 1;
                while (box[i - k] && box[i][j] === box[i - k][j]) {
                    bound[0][0] = Math.min(i - k, bound[0][0]);
                    bound[1][0] = Math.max(i - k, bound[1][0]);
                    k += 1;
                }
                k = 1;
                while (box[i + k] && box[i][j] === box[i + k][j]) {
                    bound[0][0] = Math.min(i + k, bound[0][0]);
                    bound[1][0] = Math.max(i + k, bound[1][0]);
                    k += 1;
                }
            }
        }
        return bound;
    };
    Table.normalizeTable = function (table) {
        var i, j, min, not;
        var __marked = [], box = Table.formalMatrix(table);
        for (j = 0; j < box[0].length; j += 1) {
            min = 1000000;
            not = false;
            for (i = 0; i < box.length; i += 1) {
                if (box[i][j] === undefined) {
                    continue;
                }
                if (box[i][j].colSpan < 2) {
                    not = true;
                    break;
                }
                min = Math.min(min, box[i][j].colSpan);
            }
            if (!not) {
                for (i = 0; i < box.length; i += 1) {
                    if (box[i][j] === undefined) {
                        continue;
                    }
                    Table.mark(box[i][j], 'colspan', box[i][j].colSpan - min + 1, __marked);
                }
            }
        }
        for (i = 0; i < box.length; i += 1) {
            min = 1000000;
            not = false;
            for (j = 0; j < box[i].length; j += 1) {
                if (box[i][j] === undefined) {
                    continue;
                }
                if (box[i][j].rowSpan < 2) {
                    not = true;
                    break;
                }
                min = Math.min(min, box[i][j].rowSpan);
            }
            if (!not) {
                for (j = 0; j < box[i].length; j += 1) {
                    if (box[i][j] === undefined) {
                        continue;
                    }
                    Table.mark(box[i][j], 'rowspan', box[i][j].rowSpan - min + 1, __marked);
                }
            }
        }
        for (i = 0; i < box.length; i += 1) {
            for (j = 0; j < box[i].length; j += 1) {
                if (box[i][j] === undefined) {
                    continue;
                }
                if (box[i][j].hasAttribute('rowspan') &&
                    box[i][j].rowSpan === 1) {
                    (0, helpers_1.attr)(box[i][j], 'rowspan', null);
                }
                if (box[i][j].hasAttribute('colspan') &&
                    box[i][j].colSpan === 1) {
                    (0, helpers_1.attr)(box[i][j], 'colspan', null);
                }
                if (box[i][j].hasAttribute('class') &&
                    !(0, helpers_1.attr)(box[i][j], 'class')) {
                    (0, helpers_1.attr)(box[i][j], 'class', null);
                }
            }
        }
        Table.unmark(__marked);
    };
    Table.mergeSelected = function (table, jodit) {
        var html = [], bound = Table.getSelectedBound(table, Table.getSelectedCellsByTable(table));
        var w = 0, first = null, first_j = 0, td, cols = 0, rows = 0;
        var alreadyMerged = new Set(), __marked = [];
        if (bound && (bound[0][0] - bound[1][0] || bound[0][1] - bound[1][1])) {
            Table.formalMatrix(table, function (cell, i, j, cs, rs) {
                if (i >= bound[0][0] && i <= bound[1][0]) {
                    if (j >= bound[0][1] && j <= bound[1][1]) {
                        td = cell;
                        if (alreadyMerged.has(td)) {
                            return;
                        }
                        alreadyMerged.add(td);
                        if (i === bound[0][0] && td.style.width) {
                            w += td.offsetWidth;
                        }
                        if ((0, helpers_1.trim)(cell.innerHTML.replace(/<br(\/)?>/g, '')) !== '') {
                            html.push(cell.innerHTML);
                        }
                        if (cs > 1) {
                            cols += cs - 1;
                        }
                        if (rs > 1) {
                            rows += rs - 1;
                        }
                        if (!first) {
                            first = cell;
                            first_j = j;
                        }
                        else {
                            Table.mark(td, 'remove', 1, __marked);
                            instance(jodit).removeSelection(td);
                        }
                    }
                }
            });
            cols = bound[1][1] - bound[0][1] + 1;
            rows = bound[1][0] - bound[0][0] + 1;
            if (first) {
                if (cols > 1) {
                    Table.mark(first, 'colspan', cols, __marked);
                }
                if (rows > 1) {
                    Table.mark(first, 'rowspan', rows, __marked);
                }
                if (w) {
                    Table.mark(first, 'width', ((w / table.offsetWidth) * 100).toFixed(consts.ACCURACY) + '%', __marked);
                    if (first_j) {
                        Table.setColumnWidthByDelta(table, first_j, 0, true, __marked);
                    }
                }
                first.innerHTML = html.join('<br/>');
                instance(jodit).addSelection(first);
                alreadyMerged.delete(first);
                Table.unmark(__marked);
                Table.normalizeTable(table);
                (0, helpers_1.toArray)(table.rows).forEach(function (tr, index) {
                    if (!tr.cells.length) {
                        dom_1.Dom.safeRemove(tr);
                    }
                });
            }
        }
    };
    Table.splitHorizontal = function (table, jodit) {
        var coord, td, tr, parent, after;
        var __marked = [];
        Table.getSelectedCellsByTable(table).forEach(function (cell) {
            td = jodit.createInside.element('td');
            td.appendChild(jodit.createInside.element('br'));
            tr = jodit.createInside.element('tr');
            coord = Table.formalCoordinate(table, cell);
            if (cell.rowSpan < 2) {
                Table.formalMatrix(table, function (tdElm, i, j) {
                    if (coord[0] === i &&
                        coord[1] !== j &&
                        tdElm !== cell) {
                        Table.mark(tdElm, 'rowspan', tdElm.rowSpan + 1, __marked);
                    }
                });
                dom_1.Dom.after(dom_1.Dom.closest(cell, 'tr', table), tr);
                tr.appendChild(td);
            }
            else {
                Table.mark(cell, 'rowspan', cell.rowSpan - 1, __marked);
                Table.formalMatrix(table, function (tdElm, i, j) {
                    if (i > coord[0] &&
                        i < coord[0] + cell.rowSpan &&
                        coord[1] > j &&
                        tdElm.parentNode
                            .rowIndex === i) {
                        after = tdElm;
                    }
                    if (coord[0] < i && tdElm === cell) {
                        parent = table.rows[i];
                    }
                });
                if (after) {
                    dom_1.Dom.after(after, td);
                }
                else {
                    parent.insertBefore(td, parent.firstChild);
                }
            }
            if (cell.colSpan > 1) {
                Table.mark(td, 'colspan', cell.colSpan, __marked);
            }
            Table.unmark(__marked);
            instance(jodit).removeSelection(cell);
        });
        this.normalizeTable(table);
    };
    Table.splitVertical = function (table, jodit) {
        var coord, td, percentage;
        var __marked = [];
        Table.getSelectedCellsByTable(table).forEach(function (cell) {
            coord = Table.formalCoordinate(table, cell);
            if (cell.colSpan < 2) {
                Table.formalMatrix(table, function (tdElm, i, j) {
                    if (coord[1] === j && coord[0] !== i && tdElm !== cell) {
                        Table.mark(tdElm, 'colspan', tdElm.colSpan + 1, __marked);
                    }
                });
            }
            else {
                Table.mark(cell, 'colspan', cell.colSpan - 1, __marked);
            }
            td = jodit.createInside.element('td');
            td.appendChild(jodit.createInside.element('br'));
            if (cell.rowSpan > 1) {
                Table.mark(td, 'rowspan', cell.rowSpan, __marked);
            }
            var oldWidth = cell.offsetWidth;
            dom_1.Dom.after(cell, td);
            percentage = oldWidth / table.offsetWidth / 2;
            Table.mark(cell, 'width', (percentage * 100).toFixed(consts.ACCURACY) + '%', __marked);
            Table.mark(td, 'width', (percentage * 100).toFixed(consts.ACCURACY) + '%', __marked);
            Table.unmark(__marked);
            instance(jodit).removeSelection(cell);
        });
        Table.normalizeTable(table);
    };
    Table.setColumnWidthByDelta = function (table, column, delta, noUnmark, marked) {
        var box = Table.formalMatrix(table);
        var clearWidthIndex = 0;
        for (var i = 0; i < box.length; i += 1) {
            var cell = box[i][column];
            if (cell.colSpan > 1 && box.length > 1) {
                continue;
            }
            var w = cell.offsetWidth;
            var percent = ((w + delta) / table.offsetWidth) * 100;
            Table.mark(cell, 'width', percent.toFixed(consts.ACCURACY) + '%', marked);
            clearWidthIndex = i;
            break;
        }
        for (var i = clearWidthIndex + 1; i < box.length; i += 1) {
            var cell = box[i][column];
            Table.mark(cell, 'width', null, marked);
        }
        if (!noUnmark) {
            Table.unmark(marked);
        }
    };
    Table.mark = function (cell, key, value, marked) {
        var _a;
        marked.push(cell);
        var dict = (_a = markedValue.get(cell)) !== null && _a !== void 0 ? _a : {};
        dict[key] = value === undefined ? 1 : value;
        markedValue.set(cell, dict);
    };
    Table.unmark = function (marked) {
        marked.forEach(function (cell) {
            var dict = markedValue.get(cell);
            if (dict) {
                Object.keys(dict).forEach(function (key) {
                    var value = dict[key];
                    switch (key) {
                        case 'remove':
                            dom_1.Dom.safeRemove(cell);
                            break;
                        case 'rowspan':
                            (0, helpers_1.attr)(cell, 'rowspan', (0, helpers_1.isNumber)(value) && value > 1 ? value : null);
                            break;
                        case 'colspan':
                            (0, helpers_1.attr)(cell, 'colspan', (0, helpers_1.isNumber)(value) && value > 1 ? value : null);
                            break;
                        case 'width':
                            if (value == null) {
                                cell.style.removeProperty('width');
                                if (!(0, helpers_1.attr)(cell, 'style')) {
                                    (0, helpers_1.attr)(cell, 'style', null);
                                }
                            }
                            else {
                                cell.style.width = value.toString();
                            }
                            break;
                    }
                    delete dict[key];
                });
                markedValue.delete(cell);
            }
        });
    };
    Table.selectedByTable = new WeakMap();
    tslib_1.__decorate([
        (0, decorators_1.debounce)()
    ], Table.prototype, "recalculateStyles", null);
    return Table;
}(component_1.ViewComponent));
exports.Table = Table;
var instance = function (j) { return j.getInstance('Table', j.o); };


/***/ }),

/***/ 48197:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ToolbarButton = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(53362);
var button_1 = __webpack_require__(96516);
var decorators_1 = __webpack_require__(43441);
var dom_1 = __webpack_require__(64968);
var popup_1 = __webpack_require__(12680);
var factory_1 = __webpack_require__(81438);
var helpers_1 = __webpack_require__(40332);
var icon_1 = __webpack_require__(77904);
var collection_1 = __webpack_require__(72719);
var statuses_1 = __webpack_require__(29411);
var get_control_type_1 = __webpack_require__(38546);
var ToolbarButton = (function (_super) {
    tslib_1.__extends(ToolbarButton, _super);
    function ToolbarButton(jodit, control, target) {
        if (target === void 0) { target = null; }
        var _this = _super.call(this, jodit) || this;
        _this.control = control;
        _this.target = target;
        _this.state = tslib_1.__assign(tslib_1.__assign({}, (0, button_1.UIButtonState)()), { theme: 'toolbar', currentValue: '', hasTrigger: false });
        _this.openedPopup = null;
        jodit.e.on([_this.button, _this.trigger], 'mousedown', function (e) {
            return e.preventDefault();
        });
        _this.onAction(_this.onClick);
        _this.hookStatus(statuses_1.STATUSES.ready, function () {
            _this.initFromControl();
            _this.initTooltip();
            _this.update();
        });
        if (control.mods) {
            Object.keys(control.mods).forEach(function (mod) {
                control.mods && _this.setMod(mod, control.mods[mod]);
            });
        }
        return _this;
    }
    ToolbarButton.prototype.className = function () {
        return 'ToolbarButton';
    };
    Object.defineProperty(ToolbarButton.prototype, "toolbar", {
        get: function () {
            return this.closest(collection_1.ToolbarCollection);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolbarButton.prototype, "button", {
        get: function () {
            return this.container.querySelector("button.".concat(this.componentName, "__button"));
        },
        enumerable: false,
        configurable: true
    });
    ToolbarButton.prototype.update = function () {
        var _a = this, control = _a.control, state = _a.state, tc = this.closest(collection_1.ToolbarCollection);
        state.disabled = this.calculateDisabledStatus(tc);
        state.activated = this.calculateActivatedStatus(tc);
        if ((0, helpers_1.isFunction)(control.update) && tc) {
            control.update(this, tc.jodit);
        }
        _super.prototype.update.call(this);
    };
    ToolbarButton.prototype.calculateActivatedStatus = function (tc) {
        if ((0, helpers_1.isJoditObject)(this.j) && !this.j.editorIsActive) {
            return false;
        }
        if ((0, helpers_1.isFunction)(this.control.isActive) &&
            this.control.isActive(this.j, this.control, this)) {
            return true;
        }
        return Boolean(tc && tc.shouldBeActive(this));
    };
    ToolbarButton.prototype.calculateDisabledStatus = function (tc) {
        if (this.j.o.disabled) {
            return true;
        }
        if (this.j.o.readonly &&
            (!this.j.o.activeButtonsInReadOnly ||
                !this.j.o.activeButtonsInReadOnly.includes(this.control.name))) {
            return true;
        }
        if ((0, helpers_1.isFunction)(this.control.isDisabled) &&
            this.control.isDisabled(this.j, this.control, this)) {
            return true;
        }
        return Boolean(tc && tc.shouldBeDisabled(this));
    };
    ToolbarButton.prototype.onChangeActivated = function () {
        (0, helpers_1.attr)(this.button, 'aria-pressed', this.state.activated);
        _super.prototype.onChangeActivated.call(this);
    };
    ToolbarButton.prototype.onChangeText = function () {
        if ((0, helpers_1.isFunction)(this.control.template)) {
            this.text.innerHTML = this.control.template(this.j, this.control.name, this.j.i18n(this.state.text));
        }
        else {
            _super.prototype.onChangeText.call(this);
        }
        this.setMod('text-icons', Boolean(this.text.innerText.trim().length));
    };
    ToolbarButton.prototype.onChangeTabIndex = function () {
        (0, helpers_1.attr)(this.button, 'tabindex', this.state.tabIndex);
    };
    ToolbarButton.prototype.onChangeTooltip = function () {
        (0, helpers_1.attr)(this.button, 'aria-label', this.state.tooltip);
        _super.prototype.onChangeTooltip.call(this);
    };
    ToolbarButton.prototype.createContainer = function () {
        var cn = this.componentName;
        var container = this.j.c.span(cn), button = _super.prototype.createContainer.call(this);
        (0, helpers_1.attr)(container, 'role', 'listitem');
        button.classList.remove(cn);
        button.classList.add(cn + '__button');
        Object.defineProperty(button, 'component', {
            value: this
        });
        container.appendChild(button);
        this.trigger = this.j.c.fromHTML("<span role=\"trigger\" class=\"".concat(cn, "__trigger\">").concat(icon_1.Icon.get('chevron'), "</span>"));
        return container;
    };
    ToolbarButton.prototype.focus = function () {
        var _a;
        (_a = this.container.querySelector('button')) === null || _a === void 0 ? void 0 : _a.focus();
    };
    ToolbarButton.prototype.onChangeHasTrigger = function () {
        if (this.state.hasTrigger) {
            this.container.appendChild(this.trigger);
        }
        else {
            dom_1.Dom.safeRemove(this.trigger);
        }
        this.setMod('with-trigger', this.state.hasTrigger || null);
    };
    ToolbarButton.prototype.onChangeDisabled = function () {
        var dsb = this.state.disabled ? 'disabled' : null;
        (0, helpers_1.attr)(this.trigger, 'disabled', dsb);
        (0, helpers_1.attr)(this.button, 'disabled', dsb);
        (0, helpers_1.attr)(this.container, 'disabled', dsb);
    };
    ToolbarButton.prototype.initTooltip = function () {
        var _this = this;
        if (!this.j.o.textIcons &&
            this.j.o.showTooltip &&
            !this.j.o.useNativeTooltip) {
            this.j.e
                .off(this.container, 'mouseenter mouseleave')
                .on(this.container, 'mousemove', function (e) {
                if (!_this.state.tooltip) {
                    return;
                }
                !_this.state.disabled &&
                    _this.j.e.fire('delayShowTooltip', function () { return ({
                        x: e.clientX + 10,
                        y: e.clientY + 10
                    }); }, _this.state.tooltip);
            })
                .on(this.container, 'mouseleave', function () {
                _this.j.e.fire('hideTooltip');
            });
        }
    };
    ToolbarButton.prototype.initFromControl = function () {
        var _a;
        var _b = this, ctr = _b.control, state = _b.state;
        this.updateSize();
        state.name = ctr.name;
        var textIcons = this.j.o.textIcons;
        if (textIcons === true ||
            ((0, helpers_1.isFunction)(textIcons) && textIcons(ctr.name)) ||
            ctr.template) {
            state.icon = (0, button_1.UIButtonState)().icon;
            state.text = ctr.text || ctr.name;
        }
        else {
            if (ctr.iconURL) {
                state.icon.iconURL = ctr.iconURL;
            }
            else {
                var name = ctr.icon || ctr.name;
                state.icon.name =
                    icon_1.Icon.exists(name) || ((_a = this.j.o.extraIcons) === null || _a === void 0 ? void 0 : _a[name])
                        ? name
                        : '';
            }
            if (!ctr.iconURL && !state.icon.name) {
                state.text = ctr.text || ctr.name;
            }
        }
        if (ctr.tooltip) {
            state.tooltip = this.j.i18n((0, helpers_1.isFunction)(ctr.tooltip)
                ? ctr.tooltip(this.j, ctr, this)
                : ctr.tooltip);
        }
        state.hasTrigger = Boolean(ctr.list || (ctr.popup && ctr.exec));
    };
    ToolbarButton.prototype.onTriggerClick = function (e) {
        var _this = this;
        var _a, _b, _c;
        if (this.openedPopup) {
            this.closePopup();
            return;
        }
        var ctr = this.control;
        e.buffer = {
            actionTrigger: this
        };
        if (ctr.list) {
            return this.openControlList(ctr);
        }
        if ((0, helpers_1.isFunction)(ctr.popup)) {
            var popup = this.openPopup();
            popup.parentElement = this;
            if (this.j.e.fire((0, helpers_1.camelCase)("before-".concat(ctr.name, "-open-popup")), this.target, ctr, popup) !== false) {
                var target = (_c = (_b = (_a = this.toolbar) === null || _a === void 0 ? void 0 : _a.getTarget(this)) !== null && _b !== void 0 ? _b : this.target) !== null && _c !== void 0 ? _c : null;
                var elm = ctr.popup(this.j, target, ctr, this.closePopup, this);
                if (elm) {
                    popup
                        .setContent((0, helpers_1.isString)(elm) ? this.j.c.fromHTML(elm) : elm)
                        .open(function () { return (0, helpers_1.position)(_this.container); }, false, this.j.o.allowTabNavigation
                        ? this.container
                        : undefined);
                }
            }
            this.j.e.fire((0, helpers_1.camelCase)("after-".concat(ctr.name, "-open-popup")), popup.container);
        }
    };
    ToolbarButton.prototype.openControlList = function (control) {
        var _this = this;
        var _a;
        var controls = (_a = this.jodit.options.controls) !== null && _a !== void 0 ? _a : {}, getControl = function (key) {
            return (0, get_control_type_1.findControlType)(key, controls);
        };
        var list = control.list, menu = this.openPopup(), toolbar = (0, factory_1.makeCollection)(this.j);
        menu.parentElement = this;
        toolbar.parentElement = menu;
        toolbar.mode = 'vertical';
        var isListItem = function (key) {
            return (0, helpers_1.isPlainObject)(key) && 'title' in key && 'value' in key;
        };
        var getButton = function (key, value) {
            if ((0, helpers_1.isString)(value) && getControl(value)) {
                return tslib_1.__assign({ name: value.toString() }, getControl(value));
            }
            if ((0, helpers_1.isString)(key) && getControl(key)) {
                return tslib_1.__assign(tslib_1.__assign({ name: key.toString() }, getControl(key)), (typeof value === 'object' ? value : {}));
            }
            if (isListItem(key)) {
                value = key.value;
                key = key.title;
            }
            var childTemplate = control.childTemplate;
            var childControl = {
                name: key.toString(),
                template: childTemplate &&
                    (function (j, k, v) { return childTemplate(j, k, v, _this); }),
                exec: control.childExec
                    ? function (view, current, options) {
                        var _a;
                        return (_a = control.childExec) === null || _a === void 0 ? void 0 : _a.call(control, view, current, tslib_1.__assign(tslib_1.__assign({}, options), { parentControl: control }));
                    }
                    : control.exec,
                data: control.data,
                command: control.command,
                isActive: control.isChildActive,
                isDisabled: control.isChildDisabled,
                mode: control.mode,
                args: tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read((control.args ? control.args : [])), false), [key, value], false)
            };
            if ((0, helpers_1.isString)(value)) {
                childControl.text = value;
            }
            return childControl;
        };
        toolbar.build((0, helpers_1.isArray)(list)
            ? list.map(getButton)
            : (0, helpers_1.keys)(list, false).map(function (key) { return getButton(key, list[key]); }), this.target);
        menu.setContent(toolbar.container).open(function () { return (0, helpers_1.position)(_this.container); }, false, this.j.o.allowTabNavigation ? this.container : undefined);
        this.state.activated = true;
    };
    ToolbarButton.prototype.onOutsideClick = function (e) {
        if (!this.openedPopup) {
            return;
        }
        if (!e ||
            !dom_1.Dom.isNode(e.target) ||
            (!dom_1.Dom.isOrContains(this.container, e.target) &&
                !this.openedPopup.isOwnClick(e))) {
            this.closePopup();
        }
    };
    ToolbarButton.prototype.openPopup = function () {
        this.closePopup();
        this.openedPopup = new popup_1.Popup(this.j, false);
        this.j.e
            .on(this.ow, 'mousedown touchstart', this.onOutsideClick)
            .on('escape closeAllPopups', this.onOutsideClick);
        return this.openedPopup;
    };
    ToolbarButton.prototype.closePopup = function () {
        if (this.openedPopup) {
            this.j.e
                .off(this.ow, 'mousedown touchstart', this.onOutsideClick)
                .off('escape closeAllPopups', this.onOutsideClick);
            this.state.activated = false;
            this.openedPopup.close();
            this.openedPopup.destruct();
            this.openedPopup = null;
        }
    };
    ToolbarButton.prototype.onClick = function (originalEvent) {
        var _a, _b, _c, _d, _e, _f, _g;
        var ctr = this.control;
        if ((0, helpers_1.isFunction)(ctr.exec)) {
            var target = (_c = (_b = (_a = this.toolbar) === null || _a === void 0 ? void 0 : _a.getTarget(this)) !== null && _b !== void 0 ? _b : this.target) !== null && _c !== void 0 ? _c : null;
            var result = ctr.exec(this.j, target, {
                control: ctr,
                originalEvent: originalEvent,
                button: this
            });
            if (result !== false && result !== true) {
                (_e = (_d = this.j) === null || _d === void 0 ? void 0 : _d.e) === null || _e === void 0 ? void 0 : _e.fire('synchro');
                if (this.parentElement) {
                    this.parentElement.update();
                }
                (_g = (_f = this.j) === null || _f === void 0 ? void 0 : _f.e) === null || _g === void 0 ? void 0 : _g.fire('closeAllPopups afterExec');
            }
            if (result !== false) {
                return;
            }
        }
        if (ctr.list) {
            return this.openControlList(ctr);
        }
        if ((0, helpers_1.isFunction)(ctr.popup)) {
            return this.onTriggerClick(originalEvent);
        }
        if (ctr.command || ctr.name) {
            (0, helpers_1.call)((0, helpers_1.isJoditObject)(this.j)
                ? this.j.execCommand.bind(this.j)
                : this.j.od.execCommand.bind(this.j.od), ctr.command || ctr.name, false, ctr.args && ctr.args[0]);
            this.j.e.fire('closeAllPopups');
        }
    };
    ToolbarButton.prototype.destruct = function () {
        this.closePopup();
        return _super.prototype.destruct.call(this);
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.tooltip')
    ], ToolbarButton.prototype, "onChangeTooltip", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.hasTrigger')
    ], ToolbarButton.prototype, "onChangeHasTrigger", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('trigger:click')
    ], ToolbarButton.prototype, "onTriggerClick", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], ToolbarButton.prototype, "onOutsideClick", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], ToolbarButton.prototype, "closePopup", null);
    ToolbarButton = tslib_1.__decorate([
        decorators_1.component
    ], ToolbarButton);
    return ToolbarButton;
}(button_1.UIButton));
exports.ToolbarButton = ToolbarButton;


/***/ }),

/***/ 34375:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ToolbarContent = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(48904);
var button_1 = __webpack_require__(96516);
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var decorators_1 = __webpack_require__(43441);
var ToolbarContent = (function (_super) {
    tslib_1.__extends(ToolbarContent, _super);
    function ToolbarContent(jodit, control, target) {
        if (target === void 0) { target = null; }
        var _this = _super.call(this, jodit) || this;
        _this.control = control;
        _this.target = target;
        _this.container.classList.add("".concat(_this.componentName, "_").concat(_this.clearName(control.name)));
        (0, helpers_1.attr)(_this.container, 'role', 'content');
        return _this;
    }
    ToolbarContent.prototype.className = function () {
        return 'ToolbarContent';
    };
    ToolbarContent.prototype.update = function () {
        var content = this.control.getContent(this.j, this.control, this);
        if ((0, helpers_1.isString)(content) || content.parentNode !== this.container) {
            dom_1.Dom.detach(this.container);
            this.container.appendChild((0, helpers_1.isString)(content) ? this.j.create.fromHTML(content) : content);
        }
        _super.prototype.update.call(this);
    };
    ToolbarContent.prototype.createContainer = function () {
        return this.j.c.span(this.componentName);
    };
    ToolbarContent = tslib_1.__decorate([
        decorators_1.component
    ], ToolbarContent);
    return ToolbarContent;
}(button_1.UIButton));
exports.ToolbarContent = ToolbarContent;


/***/ }),

/***/ 3890:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(48197), exports);
tslib_1.__exportStar(__webpack_require__(34375), exports);


/***/ }),

/***/ 72719:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ToolbarCollection = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(85796);
var helpers_1 = __webpack_require__(40332);
var ui_1 = __webpack_require__(2074);
var factory_1 = __webpack_require__(81438);
var decorators_1 = __webpack_require__(43441);
var ToolbarCollection = (function (_super) {
    tslib_1.__extends(ToolbarCollection, _super);
    function ToolbarCollection(jodit) {
        var _this = _super.call(this, jodit) || this;
        _this.__listenEvents = 'updatePlugins updateToolbar changeStack mousedown mouseup keydown change afterInit readonly afterResize ' +
            'selectionchange changeSelection focus afterSetMode touchstart focus blur';
        _this.update = _this.j.async.debounce(_this.__immediateUpdate, function () { return _this.j.defaultTimeout; });
        _this.__tooltip = null;
        _this.__initEvents();
        _this.__tooltip = ui_1.UITooltip.make(jodit);
        return _this;
    }
    ToolbarCollection.prototype.className = function () {
        return 'ToolbarCollection';
    };
    Object.defineProperty(ToolbarCollection.prototype, "firstButton", {
        get: function () {
            var _a = tslib_1.__read(this.buttons, 1), button = _a[0];
            return button || null;
        },
        enumerable: false,
        configurable: true
    });
    ToolbarCollection.prototype.makeButton = function (control, target) {
        if (target === void 0) { target = null; }
        return (0, factory_1.makeButton)(this.j, control, target);
    };
    ToolbarCollection.prototype.shouldBeActive = function (button) {
        return undefined;
    };
    ToolbarCollection.prototype.shouldBeDisabled = function (button) {
        return undefined;
    };
    ToolbarCollection.prototype.getTarget = function (button) {
        return button.target || null;
    };
    ToolbarCollection.prototype.__immediateUpdate = function () {
        if (this.isDestructed || this.j.isLocked) {
            return;
        }
        _super.prototype.update.call(this);
        this.j.e.fire('afterUpdateToolbar');
    };
    ToolbarCollection.prototype.setDirection = function (direction) {
        this.container.style.direction = direction;
        this.container.setAttribute('dir', direction);
    };
    ToolbarCollection.prototype.__initEvents = function () {
        this.j.e
            .on(this.__listenEvents, this.update)
            .on('afterSetMode focus', this.__immediateUpdate);
    };
    ToolbarCollection.prototype.hide = function () {
        this.container.remove();
    };
    ToolbarCollection.prototype.show = function () {
        this.appendTo(this.j.toolbarContainer);
    };
    ToolbarCollection.prototype.showInline = function (bound) {
        throw (0, helpers_1.error)('The method is not implemented for this class.');
    };
    ToolbarCollection.prototype.build = function (items, target) {
        if (target === void 0) { target = null; }
        var itemsWithGroupps = this.j.e.fire('beforeToolbarBuild', items);
        if (itemsWithGroupps) {
            items = itemsWithGroupps;
        }
        _super.prototype.build.call(this, items, target);
        return this;
    };
    ToolbarCollection.prototype.destruct = function () {
        var _a;
        if (this.isDestructed) {
            return;
        }
        (_a = this.__tooltip) === null || _a === void 0 ? void 0 : _a.destruct();
        this.j.e
            .off(this.__listenEvents, this.update)
            .off('afterSetMode focus', this.__immediateUpdate);
        _super.prototype.destruct.call(this);
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], ToolbarCollection.prototype, "__immediateUpdate", null);
    ToolbarCollection = tslib_1.__decorate([
        decorators_1.component
    ], ToolbarCollection);
    return ToolbarCollection;
}(ui_1.UIList));
exports.ToolbarCollection = ToolbarCollection;


/***/ }),

/***/ 81698:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ToolbarEditorCollection = void 0;
var tslib_1 = __webpack_require__(20255);
var collection_1 = __webpack_require__(72719);
var consts = __webpack_require__(86893);
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var decorators_1 = __webpack_require__(43441);
var ToolbarEditorCollection = (function (_super) {
    tslib_1.__extends(ToolbarEditorCollection, _super);
    function ToolbarEditorCollection(jodit) {
        var _this = _super.call(this, jodit) || this;
        _this.checkActiveStatus = function (cssObject, node) {
            var matches = 0, total = 0;
            Object.keys(cssObject).forEach(function (cssProperty) {
                var cssValue = cssObject[cssProperty];
                if ((0, helpers_1.isFunction)(cssValue)) {
                    if (cssValue(_this.j, (0, helpers_1.css)(node, cssProperty).toString())) {
                        matches += 1;
                    }
                }
                else {
                    if (cssValue.indexOf((0, helpers_1.css)(node, cssProperty).toString()) !== -1) {
                        matches += 1;
                    }
                }
                total += 1;
            });
            return total === matches;
        };
        _this.prependInvisibleInput(_this.container);
        return _this;
    }
    ToolbarEditorCollection.prototype.className = function () {
        return 'ToolbarEditorCollection';
    };
    ToolbarEditorCollection.prototype.shouldBeDisabled = function (button) {
        var disabled = _super.prototype.shouldBeDisabled.call(this, button);
        if (disabled !== undefined) {
            return disabled;
        }
        var mode = button.control.mode === undefined
            ? consts.MODE_WYSIWYG
            : button.control.mode;
        return !(mode === consts.MODE_SPLIT || mode === this.j.getRealMode());
    };
    ToolbarEditorCollection.prototype.shouldBeActive = function (button) {
        var _this = this;
        var active = _super.prototype.shouldBeActive.call(this, button);
        if (active !== undefined) {
            return active;
        }
        var element = this.j.selection ? this.j.s.current() : null;
        if (!element) {
            return false;
        }
        var elm;
        if (button.control.tags) {
            var tags_1 = button.control.tags;
            elm = element;
            if (dom_1.Dom.up(elm, function (node) {
                if (node &&
                    tags_1.indexOf(node.nodeName.toLowerCase()) !== -1) {
                    return true;
                }
            }, this.j.editor)) {
                return true;
            }
        }
        if (button.control.css) {
            var css_1 = button.control.css;
            elm = element;
            if (dom_1.Dom.up(elm, function (node) {
                if (node && !dom_1.Dom.isText(node)) {
                    return _this.checkActiveStatus(css_1, node);
                }
            }, this.j.editor)) {
                return true;
            }
        }
        return false;
    };
    ToolbarEditorCollection.prototype.getTarget = function (button) {
        return button.target || this.j.s.current() || null;
    };
    ToolbarEditorCollection.prototype.prependInvisibleInput = function (container) {
        var input = this.j.create.element('input', {
            tabIndex: -1,
            disabled: true,
            style: 'width: 0; height:0; position: absolute; visibility: hidden;'
        });
        dom_1.Dom.appendChildFirst(container, input);
    };
    ToolbarEditorCollection.prototype.showInline = function (bound) {
        this.jodit.e.fire('showInlineToolbar', bound);
    };
    ToolbarEditorCollection.prototype.hide = function () {
        this.jodit.e.fire('hidePopup');
        _super.prototype.hide.call(this);
        this.jodit.e.fire('toggleToolbar');
    };
    ToolbarEditorCollection.prototype.show = function () {
        _super.prototype.show.call(this);
        this.jodit.e.fire('toggleToolbar');
    };
    ToolbarEditorCollection = tslib_1.__decorate([
        decorators_1.component
    ], ToolbarEditorCollection);
    return ToolbarEditorCollection;
}(collection_1.ToolbarCollection));
exports.ToolbarEditorCollection = ToolbarEditorCollection;


/***/ }),

/***/ 81438:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeButton = exports.makeCollection = void 0;
var helpers_1 = __webpack_require__(40332);
var collection_1 = __webpack_require__(72719);
var editor_collection_1 = __webpack_require__(81698);
var button_1 = __webpack_require__(48197);
var content_1 = __webpack_require__(34375);
function makeCollection(jodit, parentElement) {
    var collection = (0, helpers_1.isJoditObject)(jodit)
        ? new editor_collection_1.ToolbarEditorCollection(jodit)
        : new collection_1.ToolbarCollection(jodit);
    if (jodit.o.textIcons) {
        collection.container.classList.add('jodit_text_icons');
    }
    if (parentElement) {
        collection.parentElement = parentElement;
    }
    if (jodit.o.toolbarButtonSize) {
        collection.buttonSize = jodit.o.toolbarButtonSize;
    }
    return collection;
}
exports.makeCollection = makeCollection;
function makeButton(jodit, control, target) {
    if (target === void 0) { target = null; }
    if ((0, helpers_1.isFunction)(control.getContent)) {
        return new content_1.ToolbarContent(jodit, control, target);
    }
    var button = new button_1.ToolbarButton(jodit, control, target);
    button.state.tabIndex = jodit.o.allowTabNavigation ? 0 : -1;
    return button;
}
exports.makeButton = makeButton;


/***/ }),

/***/ 36262:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
var config_1 = __webpack_require__(93166);
var is_array_1 = __webpack_require__(49781);
var is_jodit_object_1 = __webpack_require__(77892);
config_1.Config.prototype.enableDragAndDropFileToEditor = true;
config_1.Config.prototype.uploader = {
    url: '',
    insertImageAsBase64URI: false,
    imagesExtensions: ['jpg', 'png', 'jpeg', 'gif'],
    headers: null,
    data: null,
    filesVariableName: function (i) {
        return "files[".concat(i, "]");
    },
    withCredentials: false,
    pathVariableName: 'path',
    format: 'json',
    method: 'POST',
    prepareData: function (formData) {
        return formData;
    },
    isSuccess: function (resp) {
        return resp.success;
    },
    getMessage: function (resp) {
        return resp.data.messages !== undefined && (0, is_array_1.isArray)(resp.data.messages)
            ? resp.data.messages.join(' ')
            : '';
    },
    processFileName: function (key, file, name) {
        return [key, file, name];
    },
    process: function (resp) {
        return resp.data;
    },
    error: function (e) {
        this.j.e.fire('errorMessage', e.message, 'error', 4000);
    },
    getDisplayName: function (baseurl, filename) {
        return baseurl + filename;
    },
    defaultHandlerSuccess: function (resp) {
        var _this = this;
        var j = this.j || this;
        if (!(0, is_jodit_object_1.isJoditObject)(j)) {
            return;
        }
        if (resp.files && resp.files.length) {
            resp.files.forEach(function (filename, index) {
                var _a = tslib_1.__read(resp.isImages && resp.isImages[index]
                    ? ['img', 'src']
                    : ['a', 'href'], 2), tagName = _a[0], attr = _a[1];
                var elm = j.createInside.element(tagName);
                elm.setAttribute(attr, resp.baseurl + filename);
                if (tagName === 'a') {
                    elm.textContent = j.o.uploader.getDisplayName.call(_this, resp.baseurl, filename);
                }
                if (tagName === 'img') {
                    j.s.insertImage(elm, null, j.o.imageDefaultWidth);
                }
                else {
                    j.s.insertNode(elm);
                }
            });
        }
    },
    defaultHandlerError: function (e) {
        this.j.e.fire('errorMessage', e.message);
    },
    contentType: function (requestData) {
        return this.ow.FormData !== undefined &&
            typeof requestData !== 'string'
            ? false
            : 'application/x-www-form-urlencoded; charset=UTF-8';
    }
};


/***/ }),

/***/ 55778:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.buildData = void 0;
var helpers_1 = __webpack_require__(40332);
function buildData(uploader, data) {
    if ((0, helpers_1.isFunction)(uploader.o.buildData)) {
        return uploader.o.buildData.call(uploader, data);
    }
    var FD = uploader.ow.FormData;
    if (FD !== undefined) {
        if (data instanceof FD) {
            return data;
        }
        if ((0, helpers_1.isString)(data)) {
            return data;
        }
        var newData_1 = new FD();
        Object.keys(data).forEach(function (key) {
            newData_1.append(key, data[key]);
        });
        return newData_1;
    }
    return data;
}
exports.buildData = buildData;


/***/ }),

/***/ 98099:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dataURItoBlob = void 0;
function dataURItoBlob(dataURI) {
    var byteString = atob(dataURI.split(',')[1]), mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0], ab = new ArrayBuffer(byteString.length), ia = new Uint8Array(ab);
    for (var i = 0; i < byteString.length; i += 1) {
        ia[i] = byteString.charCodeAt(i);
    }
    return new Blob([ia], { type: mimeString });
}
exports.dataURItoBlob = dataURItoBlob;


/***/ }),

/***/ 41566:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasItems = exports.hasFiles = void 0;
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(32937), exports);
tslib_1.__exportStar(__webpack_require__(98099), exports);
tslib_1.__exportStar(__webpack_require__(55778), exports);
tslib_1.__exportStar(__webpack_require__(30863), exports);
tslib_1.__exportStar(__webpack_require__(20704), exports);
function hasFiles(data) {
    return Boolean(data && data.files && data.files.length > 0);
}
exports.hasFiles = hasFiles;
function hasItems(data) {
    return Boolean(data && data.items && data.items.length > 0);
}
exports.hasItems = hasItems;


/***/ }),

/***/ 32937:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.processOldBrowserDrag = void 0;
var constants_1 = __webpack_require__(86893);
var global_1 = __webpack_require__(17332);
var helpers_1 = __webpack_require__(40332);
var dom_1 = __webpack_require__(64968);
var index_1 = __webpack_require__(41566);
function processOldBrowserDrag(self, cData, handlerSuccess, handlerError, onFinally) {
    if (cData && (!cData.types.length || cData.types[0] !== constants_1.TEXT_PLAIN)) {
        var div_1 = self.j.c.div('', {
            tabindex: -1,
            style: 'left: -9999px; top: 0; width: 0; height: 100%;line-height: 140%; ' +
                'overflow: hidden; position: fixed; z-index: 2147483647; word-break: break-all;',
            contenteditable: true
        });
        (0, global_1.getContainer)(self.j, self.constructor).appendChild(div_1);
        var selection_1 = (0, helpers_1.isJoditObject)(self.j) ? self.j.s.save() : null, restore_1 = function () {
            return selection_1 && (0, helpers_1.isJoditObject)(self.j) && self.j.s.restore();
        };
        div_1.focus();
        self.j.async.setTimeout(function () {
            var child = div_1.firstChild;
            dom_1.Dom.safeRemove(div_1);
            if (child && child.hasAttribute('src')) {
                var src = (0, helpers_1.attr)(child, 'src') || '';
                restore_1();
                (0, index_1.sendFiles)(self, [(0, index_1.dataURItoBlob)(src)], handlerSuccess, handlerError).finally(onFinally);
            }
        }, self.j.defaultTimeout);
    }
}
exports.processOldBrowserDrag = processOldBrowserDrag;


/***/ }),

/***/ 20704:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sendFiles = void 0;
var tslib_1 = __webpack_require__(20255);
var helpers_1 = __webpack_require__(40332);
var send_1 = __webpack_require__(30863);
function sendFiles(uploader, files, handlerSuccess, handlerError, process) {
    if (!files) {
        return Promise.reject((0, helpers_1.error)('Need files'));
    }
    var o = uploader.o;
    var fileList = (0, helpers_1.toArray)(files);
    if (!fileList.length) {
        return Promise.reject((0, helpers_1.error)('Need files'));
    }
    var promises = [];
    if (o.insertImageAsBase64URI) {
        var file_1, i = void 0;
        var _loop_1 = function () {
            file_1 = fileList[i];
            if (file_1 && file_1.type) {
                var mime = file_1.type.match(/\/([a-z0-9]+)/i);
                var extension = mime[1] ? mime[1].toLowerCase() : '';
                if (o.imagesExtensions.includes(extension)) {
                    var reader_1 = new FileReader();
                    promises.push(uploader.j.async.promise(function (resolve, reject) {
                        reader_1.onerror = reject;
                        reader_1.onloadend = function () {
                            var resp = {
                                baseurl: '',
                                files: [reader_1.result],
                                isImages: [true]
                            };
                            var handler = (0, helpers_1.isFunction)(handlerSuccess)
                                ? handlerSuccess
                                : o.defaultHandlerSuccess;
                            handler.call(uploader, resp);
                            resolve(resp);
                        };
                        reader_1.readAsDataURL(file_1);
                    }));
                    fileList[i] = null;
                }
            }
        };
        for (i = 0; i < fileList.length; i += 1) {
            _loop_1();
        }
    }
    fileList = fileList.filter(function (a) { return a; });
    if (fileList.length) {
        var form_1 = new FormData();
        form_1.append(o.pathVariableName, uploader.path);
        form_1.append('source', uploader.source);
        var file = void 0;
        for (var i = 0; i < fileList.length; i += 1) {
            file = fileList[i];
            if (file) {
                var hasRealExtension = /\.[\d\w]+$/.test(file.name);
                var mime = file.type.match(/\/([a-z0-9]+)/i);
                var extension = mime && mime[1] ? mime[1].toLowerCase() : '';
                var newName = fileList[i].name ||
                    Math.random().toString().replace('.', '');
                if (!hasRealExtension && extension) {
                    var extForReg = extension;
                    if (['jpeg', 'jpg'].includes(extForReg)) {
                        extForReg = 'jpeg|jpg';
                    }
                    var reEnd = new RegExp('.(' + extForReg + ')$', 'i');
                    if (!reEnd.test(newName)) {
                        newName += '.' + extension;
                    }
                }
                var _a = tslib_1.__read(o.processFileName.call(uploader, o.filesVariableName(i), fileList[i], newName), 3), key = _a[0], iFile = _a[1], name = _a[2];
                form_1.append(key, iFile, name);
            }
        }
        if (process) {
            process(form_1);
        }
        if (o.data && (0, helpers_1.isPlainObject)(o.data)) {
            Object.keys(o.data).forEach(function (key) {
                form_1.append(key, o.data[key]);
            });
        }
        o.prepareData.call(uploader, form_1);
        promises.push((0, send_1.send)(uploader, form_1)
            .then(function (resp) {
            if (o.isSuccess.call(uploader, resp)) {
                var handler_1 = (0, helpers_1.isFunction)(handlerSuccess)
                    ? handlerSuccess
                    : o.defaultHandlerSuccess;
                handler_1.call(uploader, o.process.call(uploader, resp));
                return resp;
            }
            var handler = (0, helpers_1.isFunction)(handlerError)
                ? handlerError
                : o.defaultHandlerError;
            handler.call(uploader, (0, helpers_1.error)(o.getMessage.call(uploader, resp)));
            return resp;
        })
            .then(function () {
            uploader.j.events && uploader.j.e.fire('filesWereUploaded');
        }));
    }
    return Promise.all(promises);
}
exports.sendFiles = sendFiles;


/***/ }),

/***/ 30863:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.send = exports.ajaxInstances = void 0;
var request_1 = __webpack_require__(30056);
var helpers_1 = __webpack_require__(40332);
var build_data_1 = __webpack_require__(55778);
exports.ajaxInstances = new WeakMap();
function send(uploader, data) {
    var requestData = (0, build_data_1.buildData)(uploader, data);
    var sendData = function (request) {
        var ajax = new request_1.Ajax({
            xhr: function () {
                var xhr = new XMLHttpRequest();
                if (uploader.j.ow.FormData !== undefined &&
                    xhr.upload) {
                    uploader.j.progressbar.show().progress(10);
                    xhr.upload.addEventListener('progress', function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = evt.loaded / evt.total;
                            percentComplete *= 100;
                            console.log('progress', percentComplete);
                            uploader.j.progressbar
                                .show()
                                .progress(percentComplete);
                            if (percentComplete >= 100) {
                                uploader.j.progressbar.hide();
                            }
                        }
                    }, false);
                }
                else {
                    uploader.j.progressbar.hide();
                }
                return xhr;
            },
            method: uploader.o.method || 'POST',
            data: request,
            url: (0, helpers_1.isFunction)(uploader.o.url)
                ? uploader.o.url(request)
                : uploader.o.url,
            headers: uploader.o.headers,
            queryBuild: uploader.o.queryBuild,
            contentType: uploader.o.contentType.call(uploader, request),
            withCredentials: uploader.o.withCredentials || false
        });
        var instances = exports.ajaxInstances.get(uploader);
        if (!instances) {
            instances = new Set();
            exports.ajaxInstances.set(uploader, instances);
        }
        instances.add(ajax);
        uploader.j.e.one('beforeDestruct', ajax.destruct);
        return ajax
            .send()
            .then(function (resp) { return resp.json(); })
            .catch(function (error) {
            uploader.o.error.call(uploader, error);
        })
            .finally(function () {
            ajax.destruct();
            instances === null || instances === void 0 ? void 0 : instances.delete(ajax);
        });
    };
    if ((0, helpers_1.isPromise)(requestData)) {
        return requestData.then(sendData).catch(function (error) {
            uploader.o.error.call(uploader, error);
        });
    }
    return sendData(requestData);
}
exports.send = send;


/***/ }),

/***/ 50454:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Uploader = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(28654);
var config_1 = __webpack_require__(93166);
var constants_1 = __webpack_require__(86893);
var helpers_1 = __webpack_require__(40332);
var component_1 = __webpack_require__(56562);
var helpers_2 = __webpack_require__(41566);
__webpack_require__(36262);
var Uploader = (function (_super) {
    tslib_1.__extends(Uploader, _super);
    function Uploader(editor, options) {
        var _this = _super.call(this, editor) || this;
        _this.path = '';
        _this.source = 'default';
        _this.options = (0, helpers_1.ConfigProto)(options || {}, (0, helpers_1.ConfigProto)(config_1.Config.defaultOptions.uploader, (0, helpers_1.isJoditObject)(editor) ? editor.o.uploader : {}));
        return _this;
    }
    Object.defineProperty(Uploader.prototype, "j", {
        get: function () {
            return this.jodit;
        },
        enumerable: false,
        configurable: true
    });
    Uploader.prototype.className = function () {
        return 'Uploader';
    };
    Object.defineProperty(Uploader.prototype, "o", {
        get: function () {
            return this.options;
        },
        enumerable: false,
        configurable: true
    });
    Uploader.prototype.setPath = function (path) {
        this.path = path;
        return this;
    };
    Uploader.prototype.setSource = function (source) {
        this.source = source;
        return this;
    };
    Uploader.prototype.bind = function (form, handlerSuccess, handlerError) {
        var onFinally = function () {
            form.classList.remove('jodit_drag_hover');
        };
        var self = this, onPaste = function (e) {
            var i, file, extension;
            var cData = e.clipboardData;
            var process = function (formdata) {
                if (file) {
                    formdata.append('extension', extension);
                    formdata.append('mimetype', file.type);
                }
            };
            if (!constants_1.IS_IE && (0, helpers_2.hasFiles)(cData)) {
                (0, helpers_2.sendFiles)(self, cData.files, handlerSuccess, handlerError).finally(onFinally);
                return false;
            }
            if (constants_1.IS_IE && !false) {
                return (0, helpers_2.processOldBrowserDrag)(self, cData, handlerSuccess, handlerError, onFinally);
            }
            if ((0, helpers_2.hasItems)(cData)) {
                var items = cData.items;
                for (i = 0; i < items.length; i += 1) {
                    if (items[i].kind === 'file' &&
                        items[i].type === 'image/png') {
                        file = items[i].getAsFile();
                        if (file) {
                            var mime = file.type.match(/\/([a-z0-9]+)/i);
                            extension = mime[1]
                                ? mime[1].toLowerCase()
                                : '';
                            (0, helpers_2.sendFiles)(self, [file], handlerSuccess, handlerError, process).finally(onFinally);
                        }
                        e.preventDefault();
                        break;
                    }
                }
            }
        };
        if (self.j && self.j.editor !== form) {
            self.j.e.on(form, 'paste', onPaste);
        }
        else {
            self.j.e.on('beforePaste', onPaste);
        }
        this.attachEvents(form, handlerSuccess, handlerError, onFinally);
    };
    Uploader.prototype.attachEvents = function (form, handlerSuccess, handlerError, onFinally) {
        var self = this;
        self.j.e
            .on(form, 'dragend dragover dragenter dragleave drop', function (e) {
            e.preventDefault();
        })
            .on(form, 'dragover', function (event) {
            if ((0, helpers_2.hasFiles)(event.dataTransfer) ||
                (0, helpers_2.hasItems)(event.dataTransfer)) {
                form.classList.add('jodit_drag_hover');
                event.preventDefault();
            }
        })
            .on(form, 'dragend dragleave', function (event) {
            form.classList.remove('jodit_drag_hover');
            if ((0, helpers_2.hasFiles)(event.dataTransfer)) {
                event.preventDefault();
            }
        })
            .on(form, 'drop', function (event) {
            form.classList.remove('jodit_drag_hover');
            if ((0, helpers_2.hasFiles)(event.dataTransfer)) {
                event.preventDefault();
                event.stopImmediatePropagation();
                (0, helpers_2.sendFiles)(self, event.dataTransfer.files, handlerSuccess, handlerError).finally(onFinally);
            }
        });
        var inputFile = form.querySelector('input[type=file]');
        if (inputFile) {
            self.j.e.on(inputFile, 'change', function () {
                (0, helpers_2.sendFiles)(self, inputFile.files, handlerSuccess, handlerError)
                    .then(function () {
                    inputFile.value = '';
                    if (!/safari/i.test(navigator.userAgent)) {
                        inputFile.type = '';
                        inputFile.type = 'file';
                    }
                })
                    .finally(onFinally);
            });
        }
    };
    Uploader.prototype.uploadRemoteImage = function (url, handlerSuccess, handlerError) {
        var uploader = this, o = uploader.o;
        var handlerE = (0, helpers_1.isFunction)(handlerError)
            ? handlerError
            : o.defaultHandlerError;
        (0, helpers_2.send)(uploader, {
            action: 'fileUploadRemote',
            url: url
        })
            .then(function (resp) {
            if (o.isSuccess.call(uploader, resp)) {
                var handler = (0, helpers_1.isFunction)(handlerSuccess)
                    ? handlerSuccess
                    : o.defaultHandlerSuccess;
                handler.call(uploader, o.process.call(uploader, resp));
                return;
            }
            handlerE.call(uploader, (0, helpers_1.error)(o.getMessage.call(uploader, resp)));
        })
            .catch(function (e) { return handlerE.call(uploader, e); });
    };
    Uploader.prototype.destruct = function () {
        this.setStatus(component_1.STATUSES.beforeDestruct);
        var instances = helpers_2.ajaxInstances.get(this);
        if (instances) {
            instances.forEach(function (ajax) {
                try {
                    ajax.destruct();
                }
                catch (_a) { }
            });
            instances.clear();
        }
        _super.prototype.destruct.call(this);
    };
    return Uploader;
}(component_1.ViewComponent));
exports.Uploader = Uploader;


/***/ }),

/***/ 75243:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ColorPickerWidget = void 0;
__webpack_require__(60819);
var helpers_1 = __webpack_require__(40332);
var ui_1 = __webpack_require__(2074);
var dom_1 = __webpack_require__(64968);
ui_1.Icon.set('palette', __webpack_require__(95331));
var ColorPickerWidget = function (editor, callback, coldColor) {
    var cn = 'jodit-color-picker', valueHex = (0, helpers_1.normalizeColor)(coldColor), form = editor.c.div(cn), iconPalette = editor.o.textIcons
        ? "<span>".concat(editor.i18n('palette'), "</span>")
        : ui_1.Icon.get('palette'), eachColor = function (colors) {
        var stack = [];
        if ((0, helpers_1.isPlainObject)(colors)) {
            Object.keys(colors).forEach(function (key) {
                stack.push("<div class=\"".concat(cn, "__group ").concat(cn, "__group-").concat(key, "\">"));
                stack.push(eachColor(colors[key]));
                stack.push('</div>');
            });
        }
        else if ((0, helpers_1.isArray)(colors)) {
            colors.forEach(function (color) {
                stack.push("<span class='".concat(cn, "__color-item ").concat(valueHex === color
                    ? cn + '__color-item_active_true'
                    : '', "' title=\"").concat(color, "\" style=\"background-color:").concat(color, "\" data-color=\"").concat(color, "\"></span>"));
            });
        }
        return stack.join('');
    };
    form.appendChild(editor.c.fromHTML("<div class=\"".concat(cn, "__groups\">").concat(eachColor(editor.o.colors), "</div>")));
    form.appendChild(editor.c.fromHTML("<div data-ref=\"extra\" class=\"".concat(cn, "__extra\"></div>")));
    var extra = (0, helpers_1.refs)(form).extra;
    if (editor.o.showBrowserColorPicker && (0, helpers_1.hasBrowserColorPicker)()) {
        extra.appendChild(editor.c.fromHTML("<div class=\"".concat(cn, "__native\">").concat(iconPalette, "<input type=\"color\" value=\"#ffffff\"/></div>")));
        editor.e.on(form, 'change', function (e) {
            e.stopPropagation();
            var target = e.target;
            if (!target || !target.tagName || !dom_1.Dom.isTag(target, 'input')) {
                return;
            }
            var color = target.value || '';
            if ((0, helpers_1.isFunction)(callback)) {
                callback(color);
            }
            e.preventDefault();
        });
    }
    editor.e.on(form, 'mousedown touchend', function (e) {
        e.stopPropagation();
        e.preventDefault();
        var target = e.target;
        if ((!target ||
            !target.tagName ||
            dom_1.Dom.isTag(target, 'svg') ||
            dom_1.Dom.isTag(target, 'path')) &&
            target.parentNode) {
            target = dom_1.Dom.closest(target.parentNode, 'span', editor.editor);
        }
        if (!dom_1.Dom.isTag(target, 'span') ||
            !target.classList.contains(cn + '__color-item')) {
            return;
        }
        var color = (0, helpers_1.attr)(target, '-color') || '';
        if (callback && (0, helpers_1.isFunction)(callback)) {
            callback(color);
        }
    });
    editor.e.fire('afterGenerateColorPicker', form, extra, callback, valueHex);
    return form;
};
exports.ColorPickerWidget = ColorPickerWidget;


/***/ }),

/***/ 83029:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FileSelectorWidget = void 0;
var helpers_1 = __webpack_require__(40332);
var dom_1 = __webpack_require__(64968);
var ui_1 = __webpack_require__(2074);
var tabs_1 = __webpack_require__(60929);
var FileSelectorWidget = function (editor, callbacks, elm, close, isImage) {
    if (isImage === void 0) { isImage = true; }
    var currentImage;
    var tabs = [];
    if (callbacks.upload &&
        editor.o.uploader &&
        (editor.o.uploader.url || editor.o.uploader.insertImageAsBase64URI)) {
        var dragBox = editor.c.fromHTML('<div class="jodit-drag-and-drop__file-box">' +
            "<strong>".concat(editor.i18n(isImage ? 'Drop image' : 'Drop file'), "</strong>") +
            "<span><br>".concat(editor.i18n('or click'), "</span>") +
            "<input type=\"file\" accept=\"".concat(isImage ? 'image/*' : '*', "\" tabindex=\"-1\" dir=\"auto\" multiple=\"\"/>") +
            '</div>');
        editor.uploader.bind(dragBox, function (resp) {
            var handler = (0, helpers_1.isFunction)(callbacks.upload)
                ? callbacks.upload
                : editor.o.uploader.defaultHandlerSuccess;
            if ((0, helpers_1.isFunction)(handler)) {
                handler.call(editor, resp);
            }
            editor.e.fire('closeAllPopups');
        }, function (error) {
            editor.e.fire('errorMessage', error.message);
            editor.e.fire('closeAllPopups');
        });
        tabs.push({
            icon: 'upload',
            name: 'Upload',
            content: dragBox
        });
    }
    if (callbacks.filebrowser) {
        if (editor.o.filebrowser.ajax.url || editor.o.filebrowser.items.url) {
            tabs.push({
                icon: 'folder',
                name: 'Browse',
                content: function () {
                    close && close();
                    if (callbacks.filebrowser) {
                        editor.filebrowser.open(callbacks.filebrowser, isImage);
                    }
                }
            });
        }
    }
    if (callbacks.url) {
        var button = new ui_1.UIButton(editor, {
            type: 'submit',
            variant: 'primary',
            text: 'Insert'
        }), form = new ui_1.UIForm(editor, [
            new ui_1.UIInput(editor, {
                required: true,
                label: 'URL',
                name: 'url',
                type: 'text',
                placeholder: 'https://'
            }),
            new ui_1.UIInput(editor, {
                name: 'text',
                label: 'Alternative text'
            }),
            new ui_1.UIBlock(editor, [button])
        ]);
        currentImage = null;
        if (elm &&
            !dom_1.Dom.isText(elm) &&
            (dom_1.Dom.isTag(elm, 'img') || (0, helpers_1.$$)('img', elm).length)) {
            currentImage = elm.tagName === 'IMG' ? elm : (0, helpers_1.$$)('img', elm)[0];
            (0, helpers_1.val)(form.container, 'input[name=url]', (0, helpers_1.attr)(currentImage, 'src'));
            (0, helpers_1.val)(form.container, 'input[name=text]', (0, helpers_1.attr)(currentImage, 'alt'));
            button.state.text = 'Update';
        }
        if (elm && dom_1.Dom.isTag(elm, 'a')) {
            (0, helpers_1.val)(form.container, 'input[name=url]', (0, helpers_1.attr)(elm, 'href'));
            (0, helpers_1.val)(form.container, 'input[name=text]', (0, helpers_1.attr)(elm, 'title'));
            button.state.text = 'Update';
        }
        form.onSubmit(function (data) {
            if ((0, helpers_1.isFunction)(callbacks.url)) {
                callbacks.url.call(editor, data.url, data.text);
            }
        });
        tabs.push({
            icon: 'link',
            name: 'URL',
            content: form.container
        });
    }
    return (0, tabs_1.TabsWidget)(editor, tabs);
};
exports.FileSelectorWidget = FileSelectorWidget;


/***/ }),

/***/ 718:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(75243), exports);
tslib_1.__exportStar(__webpack_require__(60929), exports);
tslib_1.__exportStar(__webpack_require__(83029), exports);


/***/ }),

/***/ 60929:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TabsWidget = void 0;
__webpack_require__(96410);
var helpers_1 = __webpack_require__(40332);
var is_function_1 = __webpack_require__(42096);
var ui_1 = __webpack_require__(2074);
var component_1 = __webpack_require__(56562);
var dom_1 = __webpack_require__(24263);
var TabsWidget = function (jodit, tabs, state) {
    var box = jodit.c.div('jodit-tabs'), tabBox = jodit.c.div('jodit-tabs__wrapper'), buttons = jodit.c.div('jodit-tabs__buttons'), nameToTab = {}, buttonList = [];
    var firstTab = '', tabCount = 0;
    box.appendChild(buttons);
    box.appendChild(tabBox);
    var setActive = function (tab) {
        if (!nameToTab[tab]) {
            return;
        }
        buttonList.forEach(function (b) {
            b.state.activated = false;
        });
        (0, helpers_1.$$)('.jodit-tab', tabBox).forEach(function (a) {
            a.classList.remove('jodit-tab_active');
        });
        nameToTab[tab].button.state.activated = true;
        nameToTab[tab].tab.classList.add('jodit-tab_active');
    };
    tabs.forEach(function (_a) {
        var icon = _a.icon, name = _a.name, content = _a.content;
        var tab = jodit.c.div('jodit-tab'), button = (0, ui_1.Button)(jodit, icon || name, name);
        jodit.e.on(button.container, 'mousedown', function (e) {
            return e.preventDefault();
        });
        if (!firstTab) {
            firstTab = name;
        }
        buttons.appendChild(button.container);
        buttonList.push(button);
        button.container.classList.add('jodit-tabs__button', 'jodit-tabs__button_columns_' + tabs.length);
        if (!(0, is_function_1.isFunction)(content)) {
            tab.appendChild(component_1.Component.isInstanceOf(content, ui_1.UIElement)
                ? content.container
                : content);
        }
        else {
            tab.appendChild(jodit.c.div('jodit-tab_empty'));
        }
        tabBox.appendChild(tab);
        button.onAction(function () {
            setActive(name);
            if ((0, is_function_1.isFunction)(content) && !dom_1.Dom.isElement(content)) {
                content.call(jodit);
            }
            if (state) {
                state.__activeTab = name;
            }
            return false;
        });
        nameToTab[name] = {
            button: button,
            tab: tab
        };
        tabCount += 1;
    });
    if (!tabCount) {
        return box;
    }
    (0, helpers_1.$$)('a', buttons).forEach(function (a) {
        a.style.width = (100 / tabCount).toFixed(10) + '%';
    });
    var tab = !state || !state.__activeTab || !nameToTab[state.__activeTab]
        ? firstTab
        : state.__activeTab;
    setActive(tab);
    if (state) {
        var __activeTab_1 = state.__activeTab;
        Object.defineProperty(state, '__activeTab', {
            configurable: true,
            enumerable: false,
            get: function () {
                return __activeTab_1;
            },
            set: function (value) {
                __activeTab_1 = value;
                setActive(value);
            }
        });
    }
    return box;
};
exports.TabsWidget = TabsWidget;


/***/ }),

/***/ 55692:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
__webpack_require__(33126);
var config_1 = __webpack_require__(93166);
var helpers_1 = __webpack_require__(40332);
var constants = __webpack_require__(86893);
var global_1 = __webpack_require__(17332);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.controls.about = {
    exec: function (editor) {
        var dialog = editor.dlg(), i = editor.i18n.bind(editor);
        dialog
            .setMod('theme', editor.o.theme)
            .setHeader(i('About Jodit'))
            .setContent("<div class=\"jodit-about\">\n\t\t\t\t\t<div>".concat(i('Jodit Editor'), " v.").concat(editor.getVersion(), "</div>\n\t\t\t\t\t<div>").concat(i('License: %s', !(0, helpers_1.isLicense)(editor.o.license)
            ? 'MIT'
            : (0, helpers_1.normalizeLicense)(editor.o.license)), "</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href=\"").concat("https://xdsoft.net/jodit/", "\" target=\"_blank\">").concat("https://xdsoft.net/jodit/", "</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href=\"https://xdsoft.net/jodit/docs/\" target=\"_blank\">").concat(i("Jodit User's Guide"), "</a>\n\t\t\t\t\t\t").concat(i('contains detailed help for using'), "\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>").concat(i('Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.'), "</div>\n\t\t\t\t</div>"));
        (0, helpers_1.css)(dialog.dialog, {
            minHeight: 200,
            minWidth: 420
        });
        dialog.open(true);
    },
    tooltip: 'About Jodit',
    mode: constants.MODE_SOURCE + constants.MODE_WYSIWYG
};
function about(editor) {
    editor.registerButton({
        name: 'about',
        group: 'info'
    });
}
global_1.pluginSystem.add('about', about);
icon_1.Icon.set('about', __webpack_require__(84279));


/***/ }),

/***/ 66031:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addNewLine = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(30724);
var modules_1 = __webpack_require__(87837);
var helpers_1 = __webpack_require__(40332);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
__webpack_require__(46360);
var ns = 'addnewline';
var addNewLine = (function (_super) {
    tslib_1.__extends(addNewLine, _super);
    function addNewLine() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.line = _this.j.c.fromHTML("<div role=\"button\" tabindex=\"-1\" title=\"".concat(_this.j.i18n('Break'), "\" class=\"jodit-add-new-line\"><span>").concat(modules_1.Icon.get('enter'), "</span></div>"));
        _this.isMatchedTag = function (node) {
            return Boolean(node &&
                _this.j.o.addNewLineTagsTriggers.includes(node.nodeName.toLowerCase()));
        };
        _this.preview = false;
        _this.lineInFocus = false;
        _this.isShown = false;
        _this.hideForce = function () {
            if (!_this.isShown) {
                return;
            }
            _this.isShown = false;
            _this.j.async.clearTimeout(_this.timeout);
            _this.lineInFocus = false;
            modules_1.Dom.safeRemove(_this.line);
            _this.line.style.setProperty('--jd-offset-handle', '0');
        };
        _this.canGetFocus = function (elm) {
            return (elm != null &&
                modules_1.Dom.isBlock(elm) &&
                !/^(img|table|iframe|hr)$/i.test(elm.nodeName));
        };
        _this.onClickLine = function (e) {
            var editor = _this.j;
            var p = editor.createInside.element(editor.o.enter);
            if (_this.preview && _this.current && _this.current.parentNode) {
                if (_this.current === editor.editor) {
                    modules_1.Dom.prepend(editor.editor, p);
                }
                else {
                    _this.current.parentNode.insertBefore(p, _this.current);
                }
            }
            else {
                editor.editor.appendChild(p);
            }
            editor.s.setCursorIn(p);
            (0, helpers_1.scrollIntoViewIfNeeded)(p, editor.editor, editor.ed);
            editor.synchronizeValues();
            _this.hideForce();
            e.preventDefault();
        };
        return _this;
    }
    addNewLine.prototype.show = function () {
        if (this.isShown || this.j.o.readonly || this.j.isLocked) {
            return;
        }
        this.isShown = true;
        this.j.async.clearTimeout(this.timeout);
        this.line.classList.toggle('jodit-add-new-line_after', !this.preview);
        this.j.container.appendChild(this.line);
        this.line.style.width = this.j.container.clientWidth + 'px';
    };
    addNewLine.prototype.onLock = function (isLocked) {
        if (isLocked && this.isShown) {
            this.hideForce();
        }
    };
    addNewLine.prototype.hide = function () {
        if (!this.isShown || this.lineInFocus) {
            return;
        }
        this.timeout = this.j.async.setTimeout(this.hideForce, {
            timeout: 500,
            label: 'add-new-line-hide'
        });
    };
    addNewLine.prototype.afterInit = function (editor) {
        var _this = this;
        if (!editor.o.addNewLine) {
            return;
        }
        editor.e
            .on(this.line, 'mousemove', function (e) {
            e.stopPropagation();
        })
            .on(this.line, 'mousedown touchstart', this.onClickLine)
            .on('change', this.hideForce)
            .on(this.line, 'mouseenter', function () {
            _this.j.async.clearTimeout(_this.timeout);
            _this.lineInFocus = true;
        })
            .on(this.line, 'mouseleave', function () {
            _this.lineInFocus = false;
        })
            .on('changePlace', this.addEventListeners.bind(this));
        this.addEventListeners();
    };
    addNewLine.prototype.addEventListeners = function () {
        var editor = this.j;
        editor.e
            .off(editor.editor, '.' + ns)
            .off(editor.container, '.' + ns)
            .on([editor.ow, editor.ew, editor.editor], 'scroll' + '.' + ns, this.hideForce)
            .on(editor.editor, 'click' + '.' + ns, this.hide)
            .on(editor.container, 'mouseleave' + '.' + ns, this.hide)
            .on(editor.editor, 'mousemove' + '.' + ns, this.onMouseMove);
    };
    addNewLine.prototype.onDblClickEditor = function (e) {
        var editor = this.j;
        if (!editor.o.readonly &&
            editor.o.addNewLineOnDBLClick &&
            e.target === editor.editor &&
            editor.s.isCollapsed()) {
            var editorBound = (0, helpers_1.offset)(editor.editor, editor, editor.ed);
            var top = e.pageY - editor.ew.pageYOffset;
            var p = editor.createInside.element(editor.o.enter);
            if (Math.abs(top - editorBound.top) <
                Math.abs(top - (editorBound.height + editorBound.top)) &&
                editor.editor.firstChild) {
                editor.editor.insertBefore(p, editor.editor.firstChild);
            }
            else {
                editor.editor.appendChild(p);
            }
            editor.s.setCursorIn(p);
            editor.synchronizeValues();
            this.hideForce();
            e.preventDefault();
        }
    };
    addNewLine.prototype.onMouseMove = function (e) {
        var editor = this.j;
        var currentElement = editor.ed.elementFromPoint(e.clientX, e.clientY);
        if (!modules_1.Dom.isHTMLElement(currentElement) ||
            modules_1.Dom.isOrContains(this.line, currentElement)) {
            return;
        }
        if (!modules_1.Dom.isOrContains(editor.editor, currentElement)) {
            return;
        }
        if (editor.editor !== currentElement &&
            !this.isMatchedTag(currentElement)) {
            currentElement = modules_1.Dom.closest(currentElement, this.isMatchedTag, editor.editor);
        }
        if (!currentElement) {
            this.hide();
            return;
        }
        if (this.isMatchedTag(currentElement)) {
            var parentBox = modules_1.Dom.up(currentElement, modules_1.Dom.isBlock, editor.editor);
            if (parentBox && parentBox !== editor.editor) {
                currentElement = parentBox;
            }
        }
        var pos = (0, helpers_1.position)(currentElement, this.j);
        var top = false;
        var clientY = e.clientY, clientX = e.clientX;
        if (this.j.iframe) {
            var _a = (0, helpers_1.position)(this.j.iframe, this.j, true), top_1 = _a.top, left = _a.left;
            clientY += top_1;
            clientX += left;
        }
        var delta = this.j.o.addNewLineDeltaShow;
        if (Math.abs(clientY - pos.top) <= delta) {
            top = pos.top;
            this.preview = true;
        }
        if (Math.abs(clientY - (pos.top + pos.height)) <= delta) {
            top = pos.top + pos.height;
            this.preview = false;
        }
        if (top !== false &&
            ((editor.editor === currentElement && !this.preview) ||
                !(0, helpers_1.call)(this.preview ? modules_1.Dom.prev : modules_1.Dom.next, currentElement, this.canGetFocus, editor.editor))) {
            this.line.style.top = top + 'px';
            this.current = currentElement;
            this.show();
            this.line.style.setProperty('--jd-offset-handle', clientX - pos.left - 10 + 'px');
        }
        else {
            this.current = false;
            this.hide();
        }
    };
    addNewLine.prototype.beforeDestruct = function () {
        this.j.async.clearTimeout(this.timeout);
        this.j.e.off(this.line).off('changePlace', this.addEventListeners);
        modules_1.Dom.safeRemove(this.line);
        this.j.e
            .off([this.j.ow, this.j.ew, this.j.editor], '.' + ns)
            .off(this.j.container, '.' + ns);
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)(':lock')
    ], addNewLine.prototype, "onLock", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], addNewLine.prototype, "hide", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':dblclick')
    ], addNewLine.prototype, "onDblClickEditor", null);
    tslib_1.__decorate([
        (0, decorators_1.debounce)(function (ctx) { return ctx.defaultTimeout * 5; })
    ], addNewLine.prototype, "onMouseMove", null);
    return addNewLine;
}(modules_1.Plugin));
exports.addNewLine = addNewLine;
global_1.pluginSystem.add('addNewLine', addNewLine);


/***/ }),

/***/ 46360:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var ui_1 = __webpack_require__(2074);
config_1.Config.prototype.addNewLine = true;
config_1.Config.prototype.addNewLineOnDBLClick = true;
config_1.Config.prototype.addNewLineTagsTriggers = [
    'table',
    'iframe',
    'img',
    'hr',
    'pre',
    'jodit'
];
config_1.Config.prototype.addNewLineDeltaShow = 20;
ui_1.Icon.set('enter', __webpack_require__(11257));


/***/ }),

/***/ 91241:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.backspace = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var dom_1 = __webpack_require__(64968);
var constants_1 = __webpack_require__(86893);
var helpers_1 = __webpack_require__(40332);
var helpers_2 = __webpack_require__(10109);
var global_1 = __webpack_require__(17332);
var cases_1 = __webpack_require__(90089);
var check_not_collapsed_1 = __webpack_require__(95441);
__webpack_require__(48229);
var backspace = (function (_super) {
    tslib_1.__extends(backspace, _super);
    function backspace() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.requires = ['hotkeys'];
        return _this;
    }
    backspace.prototype.afterInit = function (jodit) {
        var _this = this;
        jodit.e.on('afterCommand.delete', function (command) {
            if (command === 'delete') {
                _this.afterDeleteCommand();
            }
        });
        jodit
            .registerCommand('deleteButton', {
            exec: function () { return _this.onDelete(false); },
            hotkeys: jodit.o.delete.hotkeys.delete
        }, {
            stopPropagation: false
        })
            .registerCommand('backspaceButton', {
            exec: function () { return _this.onDelete(true); },
            hotkeys: jodit.o.delete.hotkeys.backspace
        }, {
            stopPropagation: false
        })
            .registerCommand('deleteWordButton', {
            exec: function () { return _this.onDelete(false, 'word'); },
            hotkeys: jodit.o.delete.hotkeys.deleteWord
        })
            .registerCommand('backspaceWordButton', {
            exec: function () { return _this.onDelete(true, 'word'); },
            hotkeys: jodit.o.delete.hotkeys.backspaceWord
        })
            .registerCommand('deleteSentenceButton', {
            exec: function () { return _this.onDelete(false, 'sentence'); },
            hotkeys: jodit.o.delete.hotkeys.deleteSentence
        })
            .registerCommand('backspaceSentenceButton', {
            exec: function () { return _this.onDelete(true, 'sentence'); },
            hotkeys: jodit.o.delete.hotkeys.backspaceSentence
        });
    };
    backspace.prototype.beforeDestruct = function (jodit) {
        jodit.e.off('afterCommand.delete');
    };
    backspace.prototype.afterDeleteCommand = function () {
        var jodit = this.j;
        var current = jodit.s.current();
        if (current && dom_1.Dom.isTag(current.firstChild, 'br')) {
            jodit.s.removeNode(current.firstChild);
        }
        if (!(0, helpers_1.trim)(jodit.editor.textContent || '') &&
            !jodit.editor.querySelector('img,table,jodit,iframe,hr') &&
            (!current || !dom_1.Dom.closest(current, 'table', jodit.editor))) {
            jodit.editor.innerHTML = '';
            var node = jodit.s.setCursorIn(jodit.editor);
            jodit.s.removeNode(node);
        }
    };
    backspace.prototype.onDelete = function (backspace, mode) {
        if (mode === void 0) { mode = 'char'; }
        var jodit = this.j;
        var sel = jodit.selection;
        if (!sel.isFocused()) {
            sel.focus();
        }
        if ((0, check_not_collapsed_1.checkNotCollapsed)(jodit)) {
            return false;
        }
        var range = sel.range;
        var fakeNode = jodit.createInside.text(constants_1.INVISIBLE_SPACE);
        try {
            dom_1.Dom.safeInsertNode(range, fakeNode);
            if (!dom_1.Dom.isOrContains(jodit.editor, fakeNode)) {
                return;
            }
            if (jodit.e.fire('backSpaceBeforeCases', backspace, fakeNode)) {
                return false;
            }
            (0, helpers_2.moveNodeInsideStart)(jodit, fakeNode, backspace);
            if (cases_1.cases.some(function (func) {
                if ((0, helpers_1.isFunction)(func) &&
                    func(jodit, fakeNode, backspace, mode)) {
                    if (false) {}
                    return true;
                }
            })) {
                return false;
            }
        }
        catch (e) {
            if (false) {}
            throw e;
        }
        finally {
            jodit.e.fire('backSpaceAfterDelete', backspace, fakeNode);
            this.safeRemoveEmptyNode(fakeNode);
        }
        return false;
    };
    backspace.prototype.safeRemoveEmptyNode = function (fakeNode) {
        var _a, _b;
        var range = this.j.s.range;
        if (range.startContainer === fakeNode) {
            if (fakeNode.previousSibling) {
                if (dom_1.Dom.isText(fakeNode.previousSibling)) {
                    range.setStart(fakeNode.previousSibling, (_b = (_a = fakeNode.previousSibling.nodeValue) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);
                }
                else {
                    range.setStartAfter(fakeNode.previousSibling);
                }
            }
            else if (fakeNode.nextSibling) {
                if (dom_1.Dom.isText(fakeNode.nextSibling)) {
                    range.setStart(fakeNode.nextSibling, 0);
                }
                else {
                    range.setStartBefore(fakeNode.nextSibling);
                }
            }
            range.collapse(true);
            this.j.s.selectRange(range);
        }
        dom_1.Dom.safeRemove(fakeNode);
    };
    return backspace;
}(plugin_1.Plugin));
exports.backspace = backspace;
global_1.pluginSystem.add('backspace', backspace);


/***/ }),

/***/ 31078:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkJoinNeighbors = void 0;
var dom_1 = __webpack_require__(24263);
var helpers_1 = __webpack_require__(30861);
function checkJoinNeighbors(jodit, fakeNode, backspace) {
    var nextBox = fakeNode, mainClosestBox = nextBox;
    while (nextBox &&
        !dom_1.Dom.findNotEmptySibling(nextBox, backspace) &&
        nextBox.parentElement !== jodit.editor) {
        nextBox = nextBox.parentElement;
        mainClosestBox = nextBox;
    }
    if (dom_1.Dom.isElement(mainClosestBox) &&
        dom_1.Dom.isContentEditable(mainClosestBox, jodit.editor)) {
        var sibling = dom_1.Dom.findNotEmptySibling(mainClosestBox, backspace);
        if (sibling &&
            (checkMoveListContent(jodit, mainClosestBox, sibling, backspace) ||
                moveContentAndRemoveEmpty(jodit, mainClosestBox, sibling, backspace))) {
            jodit.s.setCursorBefore(fakeNode);
            return true;
        }
    }
    return false;
}
exports.checkJoinNeighbors = checkJoinNeighbors;
function checkMoveListContent(jodit, mainClosestBox, sibling, backspace) {
    var siblingIsList = dom_1.Dom.isTag(sibling, ['ol', 'ul']);
    var boxIsList = dom_1.Dom.isTag(mainClosestBox, ['ol', 'ul']);
    var elementChild = function (elm, side) {
        return side ? elm.firstElementChild : elm.lastElementChild;
    };
    if (boxIsList) {
        sibling = jodit.createInside.element(jodit.o.enterBlock);
        dom_1.Dom.before(mainClosestBox, sibling);
        return moveContentAndRemoveEmpty(jodit, elementChild(mainClosestBox, backspace), sibling, backspace);
    }
    if (sibling && siblingIsList && !boxIsList) {
        return moveContentAndRemoveEmpty(jodit, mainClosestBox, elementChild(sibling, !backspace), backspace);
    }
    return false;
}
function moveContentAndRemoveEmpty(jodit, mainClosestBox, sibling, backspace) {
    if (mainClosestBox && dom_1.Dom.isElement(sibling)) {
        dom_1.Dom.moveContent(mainClosestBox, sibling, !backspace, (0, helpers_1.getMoveFilter)(jodit));
        var remove = mainClosestBox;
        while (remove && remove !== jodit.editor && dom_1.Dom.isEmpty(remove)) {
            var parent = remove.parentElement;
            dom_1.Dom.safeRemove(remove);
            remove = parent;
        }
        return true;
    }
    return false;
}


/***/ }),

/***/ 92156:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkJoinTwoLists = void 0;
var dom_1 = __webpack_require__(24263);
var utils_1 = __webpack_require__(67309);
var helpers_1 = __webpack_require__(30861);
function checkJoinTwoLists(jodit, fakeNode, backspace) {
    var next = dom_1.Dom.findSibling(fakeNode, backspace), prev = dom_1.Dom.findSibling(fakeNode, !backspace);
    if (!dom_1.Dom.closest(fakeNode, dom_1.Dom.isElement, jodit.editor) &&
        dom_1.Dom.isTag(next, ['ul', 'ol']) &&
        dom_1.Dom.isTag(prev, ['ul', 'ol']) &&
        dom_1.Dom.isTag(next.lastElementChild, 'li') &&
        dom_1.Dom.isTag(prev.firstElementChild, 'li')) {
        var _a = jodit.s, setCursorBefore = _a.setCursorBefore, setCursorAfter = _a.setCursorAfter;
        var target = next.lastElementChild, second = prev.firstElementChild;
        (0, utils_1.call)(!backspace ? dom_1.Dom.append : dom_1.Dom.prepend, second, fakeNode);
        dom_1.Dom.moveContent(prev, next, !backspace, (0, helpers_1.getMoveFilter)(jodit));
        dom_1.Dom.safeRemove(prev);
        (0, utils_1.call)(backspace ? dom_1.Dom.append : dom_1.Dom.prepend, target, fakeNode);
        (0, utils_1.call)(backspace ? setCursorBefore : setCursorAfter, fakeNode);
        return true;
    }
    return false;
}
exports.checkJoinTwoLists = checkJoinTwoLists;


/***/ }),

/***/ 95441:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkNotCollapsed = void 0;
function checkNotCollapsed(jodit) {
    if (!jodit.s.isCollapsed()) {
        jodit.execCommand('Delete');
        return true;
    }
    return false;
}
exports.checkNotCollapsed = checkNotCollapsed;


/***/ }),

/***/ 13116:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkRemoveChar = void 0;
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var constants_1 = __webpack_require__(86893);
var helpers_2 = __webpack_require__(30861);
function checkRemoveChar(jodit, fakeNode, backspace, mode) {
    var _a, _b, _c;
    var step = backspace ? -1 : 1;
    var anotherSibling = dom_1.Dom.sibling(fakeNode, !backspace);
    var sibling = dom_1.Dom.sibling(fakeNode, backspace), removeNeighbor = null;
    var charRemoved = false, removed;
    var getNextInlineSibling = function (sibling) {
        var nextSibling = dom_1.Dom.sibling(sibling, backspace);
        if (!nextSibling &&
            sibling.parentNode &&
            sibling.parentNode !== jodit.editor) {
            nextSibling = (0, helpers_2.findMostNestedNeighbor)(sibling, !backspace, jodit.editor, true);
        }
        return nextSibling;
    };
    if (!sibling) {
        sibling = getNextInlineSibling(fakeNode);
    }
    while (sibling && (dom_1.Dom.isText(sibling) || dom_1.Dom.isInlineBlock(sibling))) {
        while (dom_1.Dom.isInlineBlock(sibling)) {
            sibling = (backspace ? sibling === null || sibling === void 0 ? void 0 : sibling.lastChild : sibling === null || sibling === void 0 ? void 0 : sibling.firstChild);
        }
        if (!sibling) {
            break;
        }
        if ((_a = sibling.nodeValue) === null || _a === void 0 ? void 0 : _a.length) {
            var value = (0, helpers_1.toArray)(sibling.nodeValue);
            var length = value.length;
            var index = backspace ? length - 1 : 0;
            if (value[index] === constants_1.INVISIBLE_SPACE) {
                while (value[index] === constants_1.INVISIBLE_SPACE) {
                    index += step;
                }
            }
            removed = value[index];
            if (value[index + step] === constants_1.INVISIBLE_SPACE) {
                index += step;
                while (value[index] === constants_1.INVISIBLE_SPACE) {
                    index += step;
                }
                index += backspace ? 1 : -1;
            }
            if (backspace && index < 0) {
                value = [];
            }
            else {
                value = value.slice(backspace ? 0 : index + 1, backspace ? index : length);
            }
            if (!anotherSibling ||
                !dom_1.Dom.isText(anotherSibling) ||
                (!backspace ? / $/ : /^ /).test((_b = anotherSibling.nodeValue) !== null && _b !== void 0 ? _b : '') ||
                !(0, helpers_1.trimInv)(anotherSibling.nodeValue || '').length) {
                for (var i = backspace ? value.length - 1 : 0; backspace ? i >= 0 : i < value.length; i += backspace ? -1 : 1) {
                    if (value[i] === ' ') {
                        value[i] = constants_1.NBSP_SPACE;
                    }
                    else {
                        break;
                    }
                }
            }
            sibling.nodeValue = value.join('');
        }
        if (!((_c = sibling.nodeValue) === null || _c === void 0 ? void 0 : _c.length)) {
            removeNeighbor = sibling;
        }
        if (!(0, helpers_1.isVoid)(removed) && removed !== constants_1.INVISIBLE_SPACE) {
            charRemoved = true;
            (0, helpers_1.call)(backspace ? dom_1.Dom.after : dom_1.Dom.before, sibling, fakeNode);
            if (mode === 'sentence' ||
                (mode === 'word' && removed !== ' ' && removed !== constants_1.NBSP_SPACE)) {
                checkRemoveChar(jodit, fakeNode, backspace, mode);
            }
            break;
        }
        var nextSibling = getNextInlineSibling(sibling);
        if (removeNeighbor) {
            dom_1.Dom.safeRemove(removeNeighbor);
            removeNeighbor = null;
        }
        sibling = nextSibling;
    }
    if (removeNeighbor) {
        dom_1.Dom.safeRemove(removeNeighbor);
        removeNeighbor = null;
    }
    if (charRemoved) {
        removeEmptyForParent(fakeNode, ['a']);
        addBRInsideEmptyBlock(jodit, fakeNode);
        jodit.s.setCursorBefore(fakeNode);
        if (dom_1.Dom.isTag(fakeNode.previousSibling, 'br') &&
            !dom_1.Dom.findNotEmptySibling(fakeNode, false)) {
            dom_1.Dom.after(fakeNode, jodit.createInside.element('br'));
        }
    }
    return charRemoved;
}
exports.checkRemoveChar = checkRemoveChar;
function removeEmptyForParent(node, tags) {
    var parent = node.parentElement;
    while (parent && dom_1.Dom.isInlineBlock(parent) && dom_1.Dom.isTag(parent, tags)) {
        var p = parent.parentElement;
        if (dom_1.Dom.isEmpty(parent)) {
            dom_1.Dom.after(parent, node);
            dom_1.Dom.safeRemove(parent);
        }
        parent = p;
    }
}
function addBRInsideEmptyBlock(jodit, node) {
    if (node.parentElement !== jodit.editor &&
        dom_1.Dom.isBlock(node.parentElement) &&
        dom_1.Dom.each(node.parentElement, dom_1.Dom.isEmptyTextNode)) {
        dom_1.Dom.after(node, jodit.createInside.element('br'));
    }
}


/***/ }),

/***/ 74217:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkRemoveContentNotEditable = void 0;
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var helpers_2 = __webpack_require__(10109);
function checkRemoveContentNotEditable(jodit, fakeNode, backspace) {
    var neighbor = dom_1.Dom.findSibling(fakeNode, backspace);
    if (!neighbor &&
        fakeNode.parentElement &&
        fakeNode.parentElement !== jodit.editor) {
        neighbor = dom_1.Dom.findSibling(fakeNode.parentElement, backspace);
    }
    if (dom_1.Dom.isElement(neighbor) &&
        !dom_1.Dom.isContentEditable(neighbor, jodit.editor)) {
        (0, helpers_1.call)(backspace ? dom_1.Dom.before : dom_1.Dom.after, neighbor, fakeNode);
        dom_1.Dom.safeRemove(neighbor);
        (0, helpers_2.moveNodeInsideStart)(jodit, fakeNode, backspace);
        (0, helpers_1.call)(backspace ? jodit.s.setCursorBefore : jodit.s.setCursorAfter, fakeNode);
        return true;
    }
    return false;
}
exports.checkRemoveContentNotEditable = checkRemoveContentNotEditable;


/***/ }),

/***/ 34181:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkRemoveEmptyNeighbor = void 0;
var dom_1 = __webpack_require__(24263);
function checkRemoveEmptyNeighbor(jodit, fakeNode, backspace) {
    var parent = dom_1.Dom.closest(fakeNode, dom_1.Dom.isElement, jodit.editor);
    if (!parent) {
        return false;
    }
    var neighbor = dom_1.Dom.findNotEmptySibling(parent, backspace);
    if (neighbor && dom_1.Dom.isEmpty(neighbor)) {
        dom_1.Dom.safeRemove(neighbor);
        jodit.s.setCursorBefore(fakeNode);
        return true;
    }
    return false;
}
exports.checkRemoveEmptyNeighbor = checkRemoveEmptyNeighbor;


/***/ }),

/***/ 13890:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkRemoveEmptyParent = void 0;
var dom_1 = __webpack_require__(64968);
var constants_1 = __webpack_require__(86893);
var check_join_two_lists_1 = __webpack_require__(92156);
function checkRemoveEmptyParent(jodit, fakeNode, backspace) {
    var found = false;
    var _a = jodit.s, setCursorBefore = _a.setCursorBefore, setCursorIn = _a.setCursorIn;
    var prn = dom_1.Dom.closest(fakeNode, dom_1.Dom.isElement, jodit.editor);
    if (!prn || !dom_1.Dom.isEmpty(prn)) {
        return false;
    }
    var neighbor = dom_1.Dom.findNotEmptyNeighbor(fakeNode, backspace, jodit.editor);
    do {
        if (prn && dom_1.Dom.isEmpty(prn) && !dom_1.Dom.isCell(prn)) {
            dom_1.Dom.after(prn, fakeNode);
            var tmp = dom_1.Dom.closest(prn, function (n) { return dom_1.Dom.isElement(n) && n !== prn; }, jodit.editor);
            dom_1.Dom.safeRemove(prn);
            found = true;
            prn = tmp;
        }
        else {
            break;
        }
    } while (prn);
    if (found && (0, check_join_two_lists_1.checkJoinTwoLists)(jodit, fakeNode, backspace)) {
        return true;
    }
    if (neighbor &&
        !dom_1.Dom.isText(neighbor) &&
        !dom_1.Dom.isTag(neighbor, constants_1.INSEPARABLE_TAGS)) {
        setCursorIn(neighbor, !backspace);
    }
    else {
        setCursorBefore(fakeNode);
    }
    return found;
}
exports.checkRemoveEmptyParent = checkRemoveEmptyParent;


/***/ }),

/***/ 8249:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkRemoveUnbreakableElement = void 0;
var dom_1 = __webpack_require__(24263);
var constants_1 = __webpack_require__(86893);
var check_remove_empty_parent_1 = __webpack_require__(13890);
function checkRemoveUnbreakableElement(jodit, fakeNode, backspace) {
    var neighbor = dom_1.Dom.findSibling(fakeNode, backspace);
    if (dom_1.Dom.isElement(neighbor) &&
        (dom_1.Dom.isTag(neighbor, constants_1.INSEPARABLE_TAGS) || dom_1.Dom.isEmpty(neighbor))) {
        dom_1.Dom.safeRemove(neighbor);
        if (dom_1.Dom.isTag(neighbor, 'br') &&
            !dom_1.Dom.findNotEmptySibling(fakeNode, false)) {
            dom_1.Dom.after(fakeNode, jodit.createInside.element('br'));
        }
        jodit.s.setCursorBefore(fakeNode);
        if (dom_1.Dom.isTag(neighbor, 'br')) {
            (0, check_remove_empty_parent_1.checkRemoveEmptyParent)(jodit, fakeNode, backspace);
        }
        return true;
    }
    return false;
}
exports.checkRemoveUnbreakableElement = checkRemoveUnbreakableElement;


/***/ }),

/***/ 58368:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkTableCell = void 0;
var dom_1 = __webpack_require__(24263);
function checkTableCell(jodit, fakeNode) {
    var cell = fakeNode.parentElement;
    if (dom_1.Dom.isCell(cell)) {
        return true;
    }
    return false;
}
exports.checkTableCell = checkTableCell;


/***/ }),

/***/ 6028:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkUnwrapFirstListItem = void 0;
var dom_1 = __webpack_require__(24263);
var utils_1 = __webpack_require__(76502);
function checkUnwrapFirstListItem(jodit, fakeNode, backspace) {
    var _a;
    var li = dom_1.Dom.closest(fakeNode, dom_1.Dom.isElement, jodit.editor);
    var s = jodit.s;
    if (dom_1.Dom.isTag(li, 'li') &&
        ((_a = li === null || li === void 0 ? void 0 : li.parentElement) === null || _a === void 0 ? void 0 : _a[backspace ? 'firstElementChild' : 'lastElementChild']) === li &&
        s.cursorInTheEdge(backspace, li)) {
        var ul = li.parentElement;
        var p = jodit.createInside.element(jodit.o.enterBlock);
        (0, utils_1.call)(backspace ? dom_1.Dom.before : dom_1.Dom.after, ul, p);
        dom_1.Dom.moveContent(li, p);
        dom_1.Dom.safeRemove(li);
        if (dom_1.Dom.isEmpty(ul)) {
            dom_1.Dom.safeRemove(ul);
        }
        (0, utils_1.call)(backspace ? s.setCursorBefore : s.setCursorAfter, fakeNode);
        return true;
    }
    return false;
}
exports.checkUnwrapFirstListItem = checkUnwrapFirstListItem;


/***/ }),

/***/ 90089:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cases = void 0;
var check_remove_unbreakable_element_1 = __webpack_require__(8249);
var check_remove_content_not_editable_1 = __webpack_require__(74217);
var check_remove_char_1 = __webpack_require__(13116);
var check_table_cell_1 = __webpack_require__(58368);
var check_remove_empty_parent_1 = __webpack_require__(13890);
var check_remove_empty_neighbor_1 = __webpack_require__(34181);
var check_join_two_lists_1 = __webpack_require__(92156);
var check_join_neighbors_1 = __webpack_require__(31078);
var check_unwrap_first_list_item_1 = __webpack_require__(6028);
exports.cases = [
    check_remove_unbreakable_element_1.checkRemoveUnbreakableElement,
    check_remove_content_not_editable_1.checkRemoveContentNotEditable,
    check_remove_char_1.checkRemoveChar,
    check_table_cell_1.checkTableCell,
    check_remove_empty_parent_1.checkRemoveEmptyParent,
    check_remove_empty_neighbor_1.checkRemoveEmptyNeighbor,
    check_join_two_lists_1.checkJoinTwoLists,
    check_join_neighbors_1.checkJoinNeighbors,
    check_unwrap_first_list_item_1.checkUnwrapFirstListItem
];


/***/ }),

/***/ 48229:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.delete = {
    hotkeys: {
        delete: ['delete', 'cmd+backspace'],
        deleteWord: ['ctrl+delete', 'cmd+alt+backspace', 'ctrl+alt+backspace'],
        deleteSentence: ['ctrl+shift+delete', 'cmd+shift+delete'],
        backspace: ['backspace'],
        backspaceWord: ['ctrl+backspace'],
        backspaceSentence: ['ctrl+shift+backspace', 'cmd+shift+backspace']
    }
};


/***/ }),

/***/ 30861:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getMoveFilter = exports.findMostNestedNeighbor = void 0;
var dom_1 = __webpack_require__(64968);
function findMostNestedNeighbor(node, right, root, onlyInlide) {
    if (onlyInlide === void 0) { onlyInlide = false; }
    var nextChild = function (node) {
        return right ? node.firstChild : node.lastChild;
    };
    var next = dom_1.Dom.findNotEmptyNeighbor(node, !right, root);
    if (onlyInlide && dom_1.Dom.isElement(next) && !dom_1.Dom.isInlineBlock(next)) {
        return null;
    }
    if (next) {
        do {
            if (nextChild(next)) {
                next = nextChild(next);
            }
            else {
                return next;
            }
        } while (next);
    }
    return null;
}
exports.findMostNestedNeighbor = findMostNestedNeighbor;
function getMoveFilter(jodit) {
    return function (node) {
        return jodit.e.fire('backSpaceIsMovedIgnore', node) !== true;
    };
}
exports.getMoveFilter = getMoveFilter;


/***/ }),

/***/ 87565:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bold = void 0;
var tslib_1 = __webpack_require__(20255);
var config_1 = __webpack_require__(93166);
var helpers_1 = __webpack_require__(40332);
var global_1 = __webpack_require__(17332);
var icon_1 = __webpack_require__(77904);
__webpack_require__(58334);
__webpack_require__(90740);
function bold(editor) {
    var callBack = function (command) {
        var control = config_1.Config.defaultOptions.controls[command], cssOptions = tslib_1.__assign({}, control.css);
        var cssRules;
        Object.keys(cssOptions).forEach(function (key) {
            if (!cssRules) {
                cssRules = {};
            }
            cssRules[key] = (0, helpers_1.isArray)(cssOptions[key])
                ? cssOptions[key][0]
                : cssOptions[key];
        });
        editor.s.applyStyle(cssRules, {
            element: control.tags ? control.tags[0] : undefined
        });
        editor.synchronizeValues();
        return false;
    };
    ['bold', 'italic', 'underline', 'strikethrough'].forEach(function (name) {
        editor.registerButton({
            name: name,
            group: 'font-style'
        });
    });
    ['superscript', 'subscript'].forEach(function (name) {
        editor.registerButton({
            name: name,
            group: 'script'
        });
    });
    editor
        .registerCommand('bold', {
        exec: callBack,
        hotkeys: ['ctrl+b', 'cmd+b']
    })
        .registerCommand('italic', {
        exec: callBack,
        hotkeys: ['ctrl+i', 'cmd+i']
    })
        .registerCommand('underline', {
        exec: callBack,
        hotkeys: ['ctrl+u', 'cmd+u']
    })
        .registerCommand('strikethrough', {
        exec: callBack
    })
        .registerCommand('subscript', {
        exec: callBack
    })
        .registerCommand('superscript', {
        exec: callBack
    });
}
exports.bold = bold;
global_1.pluginSystem.add('bold', bold);
icon_1.Icon.set('bold', __webpack_require__(25141))
    .set('italic', __webpack_require__(24557))
    .set('strikethrough', __webpack_require__(10859))
    .set('subscript', __webpack_require__(9813))
    .set('superscript', __webpack_require__(93395))
    .set('underline', __webpack_require__(98213));


/***/ }),

/***/ 90740:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.controls.subscript = {
    tags: ['sub'],
    tooltip: 'subscript'
};
config_1.Config.prototype.controls.superscript = {
    tags: ['sup'],
    tooltip: 'superscript'
};
config_1.Config.prototype.controls.bold = {
    tagRegExp: /^(strong|b)$/i,
    tags: ['strong', 'b'],
    css: {
        'font-weight': ['bold', '700']
    },
    tooltip: 'Bold'
};
config_1.Config.prototype.controls.italic = {
    tagRegExp: /^(em|i)$/i,
    tags: ['em', 'i'],
    css: {
        'font-style': 'italic'
    },
    tooltip: 'Italic'
};
config_1.Config.prototype.controls.underline = {
    tagRegExp: /^(u)$/i,
    tags: ['u'],
    css: {
        'text-decoration-line': 'underline'
    },
    tooltip: 'Underline'
};
config_1.Config.prototype.controls.strikethrough = {
    tagRegExp: /^(s)$/i,
    tags: ['s'],
    css: {
        'text-decoration-line': 'line-through'
    },
    tooltip: 'Strike through'
};


/***/ }),

/***/ 58334:
/***/ (function() {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/***/ }),

/***/ 60894:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.classSpan = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var config_1 = __webpack_require__(93166);
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var global_1 = __webpack_require__(17332);
var ui_1 = __webpack_require__(2074);
config_1.Config.prototype.controls.classSpan = {
    command: 'applyClassName',
    exec: helpers_1.memorizeExec,
    list: [
        'enabled',
        'disabled',
        'activated',
        'text-left',
        'text-center',
        'text-right',
        'warning',
        'error'
    ],
    isChildActive: function (editor, control) {
        var current = editor.s.current();
        if (current) {
            var currentBpx = dom_1.Dom.closest(current, dom_1.Dom.isElement, editor.editor) || editor.editor;
            return Boolean(control.args &&
                currentBpx.classList.contains(control.args[0].toString()));
        }
        return false;
    },
    isActive: function (editor, control) {
        var current = editor.s.current();
        if (current) {
            var currentBpx_1 = dom_1.Dom.closest(current, dom_1.Dom.isElement, editor.editor) || editor.editor;
            var present_1 = false;
            control.list &&
                Object.keys(control.list).forEach(function (className) {
                    if (currentBpx_1.classList.contains(className)) {
                        present_1 = true;
                    }
                });
            return Boolean(currentBpx_1 &&
                currentBpx_1 !== editor.editor &&
                control.list !== undefined &&
                present_1);
        }
        return false;
    },
    childTemplate: function (e, key, value) {
        return "<span class=\"".concat(key, "\">").concat(e.i18n(value), "</span>");
    },
    tooltip: 'Insert className'
};
var classSpan = (function (_super) {
    tslib_1.__extends(classSpan, _super);
    function classSpan() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.buttons = [
            {
                name: 'classSpan',
                group: 'font'
            }
        ];
        return _this;
    }
    classSpan.prototype.afterInit = function (jodit) {
        jodit.registerCommand('applyClassName', function (command, second, third) {
            jodit.s.applyStyle(undefined, {
                className: third
            });
            return false;
        });
    };
    classSpan.prototype.beforeDestruct = function () { };
    return classSpan;
}(plugin_1.Plugin));
exports.classSpan = classSpan;
global_1.pluginSystem.add('classSpan', classSpan);
ui_1.Icon.set('class-span', __webpack_require__(20026));


/***/ }),

/***/ 90302:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cleanHtml = void 0;
var tslib_1 = __webpack_require__(20255);
var safe_html_1 = __webpack_require__(67128);
var plugin_1 = __webpack_require__(85605);
var decorators_1 = __webpack_require__(43441);
var lazy_walker_1 = __webpack_require__(33841);
var global_1 = __webpack_require__(17332);
var dom_1 = __webpack_require__(24263);
var helpers_1 = __webpack_require__(57713);
__webpack_require__(98889);
var cleanHtml = (function (_super) {
    tslib_1.__extends(cleanHtml, _super);
    function cleanHtml() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.buttons = [
            {
                name: 'eraser',
                group: 'font-style'
            }
        ];
        _this.currentSelectionNode = null;
        _this.walker = new lazy_walker_1.LazyWalker(_this.j.async, {
            timeout: _this.j.o.cleanHTML.timeout
        });
        return _this;
    }
    cleanHtml.prototype.afterInit = function (jodit) { };
    Object.defineProperty(cleanHtml.prototype, "isEditMode", {
        get: function () {
            return !(this.j.isInDestruct ||
                !this.j.isEditorMode() ||
                this.j.getReadOnly());
        },
        enumerable: false,
        configurable: true
    });
    cleanHtml.prototype.onChangeCleanHTML = function () {
        if (!this.isEditMode) {
            return;
        }
        var editor = this.j;
        this.walker.setWork(editor.editor);
        this.currentSelectionNode = editor.s.current();
    };
    cleanHtml.prototype.startWalker = function () {
        var _this = this;
        var jodit = this.jodit;
        var allow = (0, helpers_1.getHash)(this.j.o.cleanHTML.allowTags);
        var deny = (0, helpers_1.getHash)(this.j.o.cleanHTML.denyTags);
        this.walker
            .on('visit', function (node) {
            return (0, helpers_1.visitNodeWalker)(jodit, node, allow, deny, _this.currentSelectionNode);
        })
            .on('end', function (affected) {
            _this.j.e.fire(affected
                ? 'internalChange finishedCleanHTMLWorker'
                : 'finishedCleanHTMLWorker');
        });
    };
    cleanHtml.prototype.beforeCommand = function (command) {
        if (command.toLowerCase() === 'removeformat') {
            if (this.j.s.isCollapsed()) {
                (0, helpers_1.removeFormatForCollapsedSelection)(this.j);
            }
            else {
                (0, helpers_1.removeFormatForSelection)(this.j);
            }
            return false;
        }
    };
    cleanHtml.prototype.onBeforeSetNativeEditorValue = function (data) {
        var sandBox = this.j.o.cleanHTML.useIframeSandbox
            ? this.j.createInside.sandbox()
            : this.j.createInside.div();
        sandBox.innerHTML = data.value;
        this.onSafeHTML(sandBox);
        data.value = sandBox.innerHTML;
        (0, safe_html_1.safeHTML)(sandBox, { safeJavaScriptLink: true, removeOnError: true });
        dom_1.Dom.safeRemove(sandBox);
        return false;
    };
    cleanHtml.prototype.onSafeHTML = function (sandBox) {
        (0, safe_html_1.safeHTML)(sandBox, this.j.o.cleanHTML);
    };
    cleanHtml.prototype.beforeDestruct = function () {
        this.walker.destruct();
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)([':change', ':afterSetMode', ':afterInit', ':mousedown', ':keydown'])
    ], cleanHtml.prototype, "onChangeCleanHTML", null);
    tslib_1.__decorate([
        (0, decorators_1.hook)('ready')
    ], cleanHtml.prototype, "startWalker", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':beforeCommand')
    ], cleanHtml.prototype, "beforeCommand", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':beforeSetNativeEditorValue')
    ], cleanHtml.prototype, "onBeforeSetNativeEditorValue", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':safeHTML')
    ], cleanHtml.prototype, "onSafeHTML", null);
    return cleanHtml;
}(plugin_1.Plugin));
exports.cleanHtml = cleanHtml;
global_1.pluginSystem.add('cleanHtml', cleanHtml);


/***/ }),

/***/ 98889:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.cleanHTML = {
    timeout: 300,
    removeEmptyElements: true,
    fillEmptyParagraph: true,
    replaceNBSP: true,
    replaceOldTags: {
        i: 'em',
        b: 'strong'
    },
    allowTags: false,
    denyTags: 'script',
    useIframeSandbox: false,
    removeOnError: true,
    safeJavaScriptLink: true,
    disableCleanFilter: null
};
config_1.Config.prototype.controls.eraser = {
    command: 'removeFormat',
    tooltip: 'Clear Formatting'
};
icon_1.Icon.set('eraser', __webpack_require__(66911));


/***/ }),

/***/ 38655:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getHash = void 0;
var trim_1 = __webpack_require__(33941);
var is_string_1 = __webpack_require__(24421);
function getHash(tags) {
    var attributesReg = /([^[]*)\[([^\]]+)]/;
    var separator = /[\s]*,[\s]*/, attrReg = /^(.*)[\s]*=[\s]*(.*)$/;
    var tagsHash = {};
    if ((0, is_string_1.isString)(tags)) {
        tags.split(separator).map(function (elm) {
            elm = (0, trim_1.trim)(elm);
            var attr = attributesReg.exec(elm), allowAttributes = {}, attributeMap = function (attrName) {
                attrName = (0, trim_1.trim)(attrName);
                var val = attrReg.exec(attrName);
                if (val) {
                    allowAttributes[val[1]] = val[2];
                }
                else {
                    allowAttributes[attrName] = true;
                }
            };
            if (attr) {
                var attr2 = attr[2].split(separator);
                if (attr[1]) {
                    attr2.forEach(attributeMap);
                    tagsHash[attr[1].toUpperCase()] = allowAttributes;
                }
            }
            else {
                tagsHash[elm.toUpperCase()] = true;
            }
        });
        return tagsHash;
    }
    if (tags) {
        Object.keys(tags).forEach(function (tagName) {
            tagsHash[tagName.toUpperCase()] = tags[tagName];
        });
        return tagsHash;
    }
    return false;
}
exports.getHash = getHash;


/***/ }),

/***/ 57713:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(38655), exports);
tslib_1.__exportStar(__webpack_require__(72170), exports);
tslib_1.__exportStar(__webpack_require__(87783), exports);
tslib_1.__exportStar(__webpack_require__(88972), exports);


/***/ }),

/***/ 72170:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isInlineBlock = exports.removeFormatForCollapsedSelection = void 0;
var dom_1 = __webpack_require__(24263);
var constants_1 = __webpack_require__(86893);
function removeFormatForCollapsedSelection(jodit, fake) {
    var s = jodit.s;
    var fakeNode = fake;
    if (!fakeNode) {
        fakeNode = jodit.createInside.fake();
        var range = s.range;
        dom_1.Dom.safeInsertNode(range, fakeNode);
        range.collapse();
    }
    var mainInline = dom_1.Dom.furthest(fakeNode, isInlineBlock, jodit.editor);
    if (mainInline) {
        if (s.cursorOnTheLeft(mainInline)) {
            dom_1.Dom.before(mainInline, fakeNode);
        }
        else if (s.cursorOnTheRight(mainInline)) {
            dom_1.Dom.after(mainInline, fakeNode);
        }
        else {
            var leftHand = s.splitSelection(mainInline);
            leftHand && dom_1.Dom.after(leftHand, fakeNode);
        }
    }
    if (!fake) {
        s.setCursorBefore(fakeNode);
        dom_1.Dom.safeRemove(fakeNode);
    }
}
exports.removeFormatForCollapsedSelection = removeFormatForCollapsedSelection;
function isInlineBlock(node) {
    return dom_1.Dom.isInlineBlock(node) && !dom_1.Dom.isTag(node, constants_1.INSEPARABLE_TAGS);
}
exports.isInlineBlock = isInlineBlock;


/***/ }),

/***/ 87783:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeFormatForSelection = void 0;
var dom_1 = __webpack_require__(24263);
var utils_1 = __webpack_require__(76502);
var remove_format_for_collapsed_selection_1 = __webpack_require__(72170);
function removeFormatForSelection(jodit) {
    var s = jodit.s, editor = jodit.editor, createInside = jodit.createInside, range = s.range, left = range.cloneRange(), right = range.cloneRange(), fakeLeft = createInside.fake(), fakeRight = createInside.fake();
    left.collapse(true);
    right.collapse(false);
    dom_1.Dom.safeInsertNode(left, fakeLeft);
    dom_1.Dom.safeInsertNode(right, fakeRight);
    range.setStartBefore(fakeLeft);
    range.collapse(true);
    s.selectRange(range);
    (0, remove_format_for_collapsed_selection_1.removeFormatForCollapsedSelection)(jodit, fakeLeft);
    range.setEndAfter(fakeRight);
    range.collapse(false);
    s.selectRange(range);
    (0, remove_format_for_collapsed_selection_1.removeFormatForCollapsedSelection)(jodit, fakeRight);
    var shouldUnwrap = [];
    dom_1.Dom.between(fakeLeft, fakeRight, function (node) {
        if ((0, remove_format_for_collapsed_selection_1.isInlineBlock)(node) && !dom_1.Dom.isTag(node, ['a'])) {
            shouldUnwrap.push(node);
        }
        if (dom_1.Dom.isElement(node) && (0, utils_1.attr)(node, 'style')) {
            (0, utils_1.attr)(node, 'style', null);
        }
    });
    shouldUnwrap.forEach(function (node) { return dom_1.Dom.unwrap(node); });
    var clearParent = function (node, left) {
        if (!dom_1.Dom.findNotEmptySibling(node, left)) {
            var pn = node.parentNode;
            if (pn && pn !== editor && (0, utils_1.attr)(pn, 'style')) {
                (0, utils_1.attr)(pn, 'style', null);
                clearParent(pn, left);
                return true;
            }
        }
    };
    clearParent(fakeLeft, true) && clearParent(fakeRight, false);
    range.setStartAfter(fakeLeft);
    range.setEndBefore(fakeRight);
    s.selectRange(range);
    dom_1.Dom.safeRemove(fakeLeft);
    dom_1.Dom.safeRemove(fakeRight);
}
exports.removeFormatForSelection = removeFormatForSelection;


/***/ }),

/***/ 9948:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.allowAttributes = void 0;
var dom_1 = __webpack_require__(24263);
function allowAttributes(jodit, nodeElm, hadEffect, allow) {
    if (allow && dom_1.Dom.isElement(nodeElm) && allow[nodeElm.nodeName] !== true) {
        var attrs = nodeElm.attributes;
        if (attrs && attrs.length) {
            var removeAttrs = [];
            for (var i = 0; i < attrs.length; i += 1) {
                var attr = allow[nodeElm.nodeName][attrs[i].name];
                if (!attr || (attr !== true && attr !== attrs[i].value)) {
                    removeAttrs.push(attrs[i].name);
                }
            }
            if (removeAttrs.length) {
                hadEffect = true;
            }
            removeAttrs.forEach(function (attr) {
                nodeElm.removeAttribute(attr);
            });
        }
    }
    return hadEffect;
}
exports.allowAttributes = allowAttributes;


/***/ }),

/***/ 74722:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fillEmptyParagraph = void 0;
var dom_1 = __webpack_require__(24263);
var constants_1 = __webpack_require__(86893);
function fillEmptyParagraph(jodit, nodeElm, hadEffect) {
    if (jodit.o.cleanHTML.fillEmptyParagraph &&
        dom_1.Dom.isBlock(nodeElm) &&
        dom_1.Dom.isEmpty(nodeElm, constants_1.INSEPARABLE_TAGS)) {
        var br = jodit.createInside.element('br');
        nodeElm.appendChild(br);
        return true;
    }
    return hadEffect;
}
exports.fillEmptyParagraph = fillEmptyParagraph;


/***/ }),

/***/ 2549:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(55901), exports);
tslib_1.__exportStar(__webpack_require__(9948), exports);
tslib_1.__exportStar(__webpack_require__(74722), exports);
tslib_1.__exportStar(__webpack_require__(75096), exports);
tslib_1.__exportStar(__webpack_require__(28194), exports);
tslib_1.__exportStar(__webpack_require__(94254), exports);
tslib_1.__exportStar(__webpack_require__(64701), exports);


/***/ }),

/***/ 28194:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeEmptyTextNode = void 0;
var dom_1 = __webpack_require__(24263);
function removeEmptyTextNode(jodit, node, hadEffect, arg, argi, currentNode) {
    if (dom_1.Dom.isText(node) && !node.nodeValue) {
        if (node === currentNode && jodit.s.isCollapsed()) {
            jodit.s.setCursorAfter(node);
        }
        dom_1.Dom.safeRemove(node);
        return true;
    }
    return hadEffect;
}
exports.removeEmptyTextNode = removeEmptyTextNode;


/***/ }),

/***/ 94254:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeInvTextNodes = void 0;
var constants_1 = __webpack_require__(86893);
var dom_1 = __webpack_require__(24263);
function removeInvTextNodes(jodit, node, hadEffect, arg, argi, currentNode) {
    if (currentNode === node || !dom_1.Dom.isText(node) || node.nodeValue == null) {
        return hadEffect;
    }
    if ((0, constants_1.INVISIBLE_SPACE_REG_EXP)().test(node.nodeValue)) {
        node.nodeValue = node.nodeValue.replace((0, constants_1.INVISIBLE_SPACE_REG_EXP)(), '');
        if (node === currentNode && jodit.s.isCollapsed()) {
            jodit.s.setCursorAfter(node);
        }
        if (!node.nodeValue) {
            dom_1.Dom.safeRemove(node);
        }
        return true;
    }
    return hadEffect;
}
exports.removeInvTextNodes = removeInvTextNodes;


/***/ }),

/***/ 55901:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.replaceOldTags = void 0;
var dom_1 = __webpack_require__(24263);
function replaceOldTags(jodit, nodeElm, hadEffect) {
    var newNodeElm = replaceIfMatched(jodit, nodeElm, jodit.o.cleanHTML.replaceOldTags);
    if (nodeElm !== newNodeElm) {
        nodeElm = newNodeElm;
        return true;
    }
    return hadEffect;
}
exports.replaceOldTags = replaceOldTags;
function replaceIfMatched(jodit, oldParent, list) {
    if (!list || !dom_1.Dom.isHTMLElement(oldParent)) {
        return oldParent;
    }
    var tagName = list[oldParent.nodeName.toLowerCase()] || list[oldParent.nodeName];
    if (tagName) {
        return dom_1.Dom.replace(oldParent, tagName, jodit.createInside, true, false);
    }
    return oldParent;
}


/***/ }),

/***/ 64701:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sanitizeAttributes = void 0;
var dom_1 = __webpack_require__(24263);
var helpers_1 = __webpack_require__(40332);
function sanitizeAttributes(jodit, nodeElm, hadEffect) {
    if (dom_1.Dom.isElement(nodeElm) &&
        (0, helpers_1.sanitizeHTMLElement)(nodeElm, {
            safeJavaScriptLink: jodit.options.cleanHTML.safeJavaScriptLink,
            removeOnError: jodit.options.cleanHTML.removeOnError
        })) {
        return true;
    }
    return hadEffect;
}
exports.sanitizeAttributes = sanitizeAttributes;


/***/ }),

/***/ 75096:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.tryRemoveNode = void 0;
var dom_1 = __webpack_require__(24263);
var constants_1 = __webpack_require__(86893);
var trim_1 = __webpack_require__(33941);
function tryRemoveNode(jodit, nodeElm, hadEffect, allowTags, denyTags, currentSelectionNode) {
    if (isRemovableNode(jodit, nodeElm, currentSelectionNode, allowTags, denyTags)) {
        dom_1.Dom.safeRemove(nodeElm);
        return true;
    }
    return hadEffect;
}
exports.tryRemoveNode = tryRemoveNode;
function isRemovableNode(jodit, node, current, allow, deny) {
    if (!dom_1.Dom.isText(node) &&
        ((allow && !allow[node.nodeName]) || (deny && deny[node.nodeName]))) {
        return true;
    }
    return (jodit.o.cleanHTML.removeEmptyElements &&
        dom_1.Dom.isElement(node) &&
        node.nodeName.match(constants_1.IS_INLINE) != null &&
        !dom_1.Dom.isTemporary(node) &&
        (0, trim_1.trim)(node.innerHTML).length === 0 &&
        (current == null || !dom_1.Dom.isOrContains(node, current)));
}


/***/ }),

/***/ 88972:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.visitNodeWalker = void 0;
var tslib_1 = __webpack_require__(20255);
var filters = __webpack_require__(2549);
var keys = Object.keys(filters);
function visitNodeWalker(jodit, nodeElm, allowTags, denyTags, currentSelectionNode) {
    var e_1, _a;
    var hadEffect = false;
    var dcf = jodit.o.cleanHTML.disableCleanFilter;
    try {
        for (var keys_1 = tslib_1.__values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {
            var key = keys_1_1.value;
            if (dcf && dcf.has(key)) {
                continue;
            }
            var filter = filters[key];
            var tmp = hadEffect;
            hadEffect = filter(jodit, nodeElm, hadEffect, allowTags, denyTags, currentSelectionNode);
            if (false) {}
            if (!nodeElm.isConnected) {
                return true;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return hadEffect;
}
exports.visitNodeWalker = visitNodeWalker;


/***/ }),

/***/ 92138:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.clipboard = void 0;
var constants_1 = __webpack_require__(86893);
var helpers_1 = __webpack_require__(40332);
var global_1 = __webpack_require__(17332);
__webpack_require__(31473);
var clipboard = (function () {
    function clipboard() {
        this.buttons = [
            {
                name: 'cut',
                group: 'clipboard'
            },
            {
                name: 'copy',
                group: 'clipboard'
            },
            {
                name: 'paste',
                group: 'clipboard'
            },
            {
                name: 'selectall',
                group: 'clipboard'
            }
        ];
    }
    clipboard.prototype.init = function (editor) {
        var _a;
        (_a = this.buttons) === null || _a === void 0 ? void 0 : _a.forEach(function (btn) { return editor.registerButton(btn); });
        editor.e
            .off("copy.".concat(constants_1.CLIPBOARD_ID, " cut.").concat(constants_1.CLIPBOARD_ID))
            .on("copy.".concat(constants_1.CLIPBOARD_ID, " cut.").concat(constants_1.CLIPBOARD_ID), function (event) {
            var _a;
            var selectedText = editor.s.html;
            var clipboardData = (0, helpers_1.getDataTransfer)(event) ||
                (0, helpers_1.getDataTransfer)(editor.ew) ||
                (0, helpers_1.getDataTransfer)(event.originalEvent);
            if (clipboardData) {
                clipboardData.setData(constants_1.TEXT_PLAIN, (0, helpers_1.stripTags)(selectedText));
                clipboardData.setData(constants_1.TEXT_HTML, selectedText);
            }
            editor.buffer.set(constants_1.CLIPBOARD_ID, selectedText);
            editor.e.fire('pasteStack', {
                html: selectedText,
                action: editor.o.defaultActionOnPaste ||
                    constants_1.INSERT_AS_HTML
            });
            if (event.type === 'cut') {
                editor.s.remove();
                editor.s.focus();
            }
            event.preventDefault();
            (_a = editor === null || editor === void 0 ? void 0 : editor.events) === null || _a === void 0 ? void 0 : _a.fire('afterCopy', selectedText);
        });
    };
    clipboard.prototype.destruct = function (editor) {
        var _a, _b;
        (_a = editor === null || editor === void 0 ? void 0 : editor.buffer) === null || _a === void 0 ? void 0 : _a.set(constants_1.CLIPBOARD_ID, '');
        (_b = editor === null || editor === void 0 ? void 0 : editor.events) === null || _b === void 0 ? void 0 : _b.off('.' + constants_1.CLIPBOARD_ID);
    };
    return clipboard;
}());
exports.clipboard = clipboard;
global_1.pluginSystem.add('clipboard', clipboard);


/***/ }),

/***/ 31473:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.controls.cut = {
    command: 'cut',
    isDisabled: function (editor) { return editor.s.isCollapsed(); },
    tooltip: 'Cut selection'
};
config_1.Config.prototype.controls.copy = {
    command: 'copy',
    isDisabled: function (editor) { return editor.s.isCollapsed(); },
    tooltip: 'Copy selection'
};
config_1.Config.prototype.controls.selectall = {
    icon: 'select-all',
    command: 'selectall',
    tooltip: 'Select all'
};
icon_1.Icon.set('copy', __webpack_require__(50018))
    .set('cut', __webpack_require__(99738))
    .set('paste', __webpack_require__(9185))
    .set('select-all', __webpack_require__(8619));


/***/ }),

/***/ 88412:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.color = void 0;
var helpers_1 = __webpack_require__(40332);
var global_1 = __webpack_require__(17332);
__webpack_require__(21924);
function color(editor) {
    editor.registerButton({
        name: 'brush',
        group: 'color'
    });
    var callback = function (command, second, third) {
        var colorHEX = (0, helpers_1.normalizeColor)(third);
        switch (command) {
            case 'background':
                editor.s.applyStyle({
                    backgroundColor: !colorHEX ? '' : colorHEX
                });
                break;
            case 'forecolor':
                editor.s.applyStyle({
                    color: !colorHEX ? '' : colorHEX
                });
                break;
        }
        editor.synchronizeValues();
        return false;
    };
    editor
        .registerCommand('forecolor', callback)
        .registerCommand('background', callback);
}
exports.color = color;
global_1.pluginSystem.add('color', color);


/***/ }),

/***/ 21924:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var helpers_1 = __webpack_require__(40332);
var widget_1 = __webpack_require__(718);
var icon_1 = __webpack_require__(77904);
var dom_1 = __webpack_require__(24263);
icon_1.Icon.set('brush', __webpack_require__(73894));
config_1.Config.prototype.controls.brush = {
    update: function (button, editor) {
        var color = (0, helpers_1.dataBind)(button, 'color');
        var update = function (key, value) {
            if (value && value !== (0, helpers_1.css)(editor.editor, key).toString()) {
                button.state.icon.fill = value;
                return;
            }
        };
        if (color) {
            var mode = (0, helpers_1.dataBind)(button, 'color');
            update(mode === 'color' ? mode : 'background-color', color);
            return;
        }
        var current = editor.s.current();
        if (current && !button.state.disabled) {
            var currentBpx = dom_1.Dom.closest(current, dom_1.Dom.isElement, editor.editor) || editor.editor;
            update('color', (0, helpers_1.css)(currentBpx, 'color').toString());
            update('background-color', (0, helpers_1.css)(currentBpx, 'background-color').toString());
        }
        button.state.icon.fill = '';
        button.state.activated = false;
    },
    popup: function (editor, current, self, close, button) {
        var colorHEX = '', bg_color = '', tabs = [], currentElement = null;
        if (current && current !== editor.editor && dom_1.Dom.isNode(current)) {
            if (dom_1.Dom.isElement(current) &&
                editor.s.isCollapsed() &&
                !dom_1.Dom.isTag(current, ['br', 'hr'])) {
                currentElement = current;
            }
            dom_1.Dom.up(current, function (node) {
                if (dom_1.Dom.isHTMLElement(node)) {
                    var color = (0, helpers_1.css)(node, 'color', true), background = (0, helpers_1.css)(node, 'background-color', true);
                    if (color) {
                        colorHEX = color.toString();
                        return true;
                    }
                    if (background) {
                        bg_color = background.toString();
                        return true;
                    }
                }
            }, editor.editor);
        }
        var backgroundTag = (0, widget_1.ColorPickerWidget)(editor, function (value) {
            if (!currentElement) {
                editor.execCommand('background', false, value);
            }
            else {
                currentElement.style.backgroundColor = value;
            }
            (0, helpers_1.dataBind)(button, 'color', value);
            (0, helpers_1.dataBind)(button, 'color-mode', 'background');
            close();
        }, bg_color);
        var colorTab = (0, widget_1.ColorPickerWidget)(editor, function (value) {
            if (!currentElement) {
                editor.execCommand('forecolor', false, value);
            }
            else {
                currentElement.style.color = value;
            }
            (0, helpers_1.dataBind)(button, 'color', value);
            (0, helpers_1.dataBind)(button, 'color-mode', 'color');
            close();
        }, colorHEX);
        tabs = [
            {
                name: 'Background',
                content: backgroundTag
            },
            {
                name: 'Text',
                content: colorTab
            }
        ];
        if (editor.o.colorPickerDefaultTab !== 'background') {
            tabs = tabs.reverse();
        }
        return (0, widget_1.TabsWidget)(editor, tabs, currentElement);
    },
    exec: function (jodit, current, _a) {
        var button = _a.button;
        var mode = (0, helpers_1.dataBind)(button, 'color-mode'), color = (0, helpers_1.dataBind)(button, 'color');
        if (!mode) {
            return false;
        }
        if (current &&
            current !== jodit.editor &&
            dom_1.Dom.isNode(current) &&
            dom_1.Dom.isElement(current)) {
            switch (mode) {
                case 'color':
                    current.style.color = color;
                    break;
                case 'background':
                    current.style.backgroundColor = color;
                    break;
            }
        }
        else {
            jodit.execCommand(mode === 'background' ? mode : 'forecolor', false, color);
        }
    },
    tooltip: 'Fill color or set the text color'
};


/***/ }),

/***/ 79308:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.copyFormat = void 0;
var config_1 = __webpack_require__(93166);
var dom_1 = __webpack_require__(24263);
var css_1 = __webpack_require__(26911);
var global_1 = __webpack_require__(17332);
var icon_1 = __webpack_require__(77904);
var pluginKey = 'copy-format';
var copyStyles = [
    'fontWeight',
    'fontStyle',
    'fontSize',
    'color',
    'margin',
    'padding',
    'borderWidth',
    'borderStyle',
    'borderColor',
    'borderRadius',
    'backgroundColor',
    'textDecorationLine',
    'fontFamily'
];
var getStyle = function (editor, key, box, defaultStyles) {
    var result = (0, css_1.css)(box, key);
    if (result === defaultStyles[key]) {
        if (box.parentNode &&
            box !== editor.editor &&
            box.parentNode !== editor.editor) {
            result = getStyle(editor, key, box.parentNode, defaultStyles);
        }
        else {
            result = undefined;
        }
    }
    return result;
};
var getStyles = function (editor, box, defaultStyles) {
    var result = {};
    if (box) {
        copyStyles.forEach(function (key) {
            result[key] = getStyle(editor, key, box, defaultStyles);
            if (key.match(/border(Style|Color)/) && !result.borderWidth) {
                result[key] = undefined;
            }
        });
    }
    return result;
};
config_1.Config.prototype.controls.copyformat = {
    exec: function (editor, current, _a) {
        var button = _a.button;
        if (!current) {
            return;
        }
        if (editor.buffer.exists(pluginKey)) {
            editor.buffer.delete(pluginKey);
            editor.e.off(editor.editor, 'mouseup.' + pluginKey);
        }
        else {
            var defaultStyles_1 = {}, box = dom_1.Dom.up(current, function (elm) { return elm && !dom_1.Dom.isText(elm); }, editor.editor) || editor.editor;
            var ideal_1 = editor.createInside.span();
            editor.editor.appendChild(ideal_1);
            copyStyles.forEach(function (key) {
                defaultStyles_1[key] = (0, css_1.css)(ideal_1, key);
            });
            if (ideal_1 !== editor.editor) {
                dom_1.Dom.safeRemove(ideal_1);
            }
            var format_1 = getStyles(editor, box, defaultStyles_1);
            var onMouseUp = function () {
                editor.buffer.delete(pluginKey);
                var currentNode = editor.s.current();
                if (currentNode) {
                    if (dom_1.Dom.isTag(currentNode, 'img')) {
                        (0, css_1.css)(currentNode, format_1);
                    }
                    else {
                        editor.s.applyStyle(format_1);
                    }
                }
                editor.e.off(editor.editor, 'mouseup.' + pluginKey);
            };
            editor.e.on(editor.editor, 'mouseup.' + pluginKey, onMouseUp);
            editor.buffer.set(pluginKey, true);
        }
        button.update();
    },
    isActive: function (editor) { return editor.buffer.exists(pluginKey); },
    tooltip: 'Paint format'
};
function copyFormat(editor) {
    editor.registerButton({
        name: 'copyformat',
        group: 'clipboard'
    });
    (0, global_1.extendLang)(__webpack_require__(9188));
}
exports.copyFormat = copyFormat;
global_1.pluginSystem.add('copyformat', copyFormat);
icon_1.Icon.set('copyformat', __webpack_require__(83301));


/***/ }),

/***/ 9188:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.zh_tw = exports.zh_cn = exports.tr = exports.ru = exports.pt_br = exports.pl = exports.nl = exports.mn = exports.ko = exports.ja = exports.it = exports.id = exports.hu = exports.he = exports.fr = exports.fa = exports.es = exports.de = exports.cs_cz = exports.ar = void 0;
var ar = __webpack_require__(80078);
exports.ar = ar;
var cs_cz = __webpack_require__(16986);
exports.cs_cz = cs_cz;
var de = __webpack_require__(59347);
exports.de = de;
var es = __webpack_require__(63640);
exports.es = es;
var fa = __webpack_require__(53434);
exports.fa = fa;
var fr = __webpack_require__(85638);
exports.fr = fr;
var he = __webpack_require__(31743);
exports.he = he;
var hu = __webpack_require__(66219);
exports.hu = hu;
var id = __webpack_require__(50331);
exports.id = id;
var it = __webpack_require__(25582);
exports.it = it;
var ja = __webpack_require__(82066);
exports.ja = ja;
var ko = __webpack_require__(71925);
exports.ko = ko;
var mn = __webpack_require__(12689);
exports.mn = mn;
var nl = __webpack_require__(65274);
exports.nl = nl;
var pl = __webpack_require__(58548);
exports.pl = pl;
var pt_br = __webpack_require__(82958);
exports.pt_br = pt_br;
var ru = __webpack_require__(52315);
exports.ru = ru;
var tr = __webpack_require__(87727);
exports.tr = tr;
var zh_cn = __webpack_require__(9396);
exports.zh_cn = zh_cn;
var zh_tw = __webpack_require__(28765);
exports.zh_tw = zh_tw;


/***/ }),

/***/ 9412:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.draggableTags = ['img', 'jodit-media', 'jodit'];


/***/ }),

/***/ 30598:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dragAndDropElement = void 0;
var tslib_1 = __webpack_require__(20255);
var helpers_1 = __webpack_require__(40332);
var plugin_1 = __webpack_require__(57549);
var dom_1 = __webpack_require__(64968);
var global_1 = __webpack_require__(17332);
var decorators_1 = __webpack_require__(43441);
__webpack_require__(9412);
var DragState;
(function (DragState) {
    DragState[DragState["IDLE"] = 0] = "IDLE";
    DragState[DragState["WAIT_DRAGGING"] = 1] = "WAIT_DRAGGING";
    DragState[DragState["DRAGGING"] = 2] = "DRAGGING";
})(DragState || (DragState = {}));
var dragAndDropElement = (function (_super) {
    tslib_1.__extends(dragAndDropElement, _super);
    function dragAndDropElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.dragList = [];
        _this.draggable = null;
        _this.isCopyMode = false;
        _this.diffStep = 10;
        _this.startX = 0;
        _this.startY = 0;
        _this.state = DragState.IDLE;
        return _this;
    }
    dragAndDropElement.prototype.afterInit = function () {
        this.dragList = this.j.o.draggableTags
            ? (0, helpers_1.splitArray)(this.j.o.draggableTags)
                .filter(Boolean)
                .map(function (item) { return item.toLowerCase(); })
            : [];
        if (!this.dragList.length) {
            return;
        }
        this.j.e.on('mousedown dragstart', this.onDragStart);
    };
    dragAndDropElement.prototype.onDragStart = function (event) {
        var _this = this;
        if (event.type === 'dragstart' && this.draggable) {
            return false;
        }
        if (this.state > DragState.IDLE) {
            return;
        }
        var target = event.target;
        if (!this.dragList.length || !target) {
            return;
        }
        var matched = function (node) {
            return Boolean(node && _this.dragList.includes(node.nodeName.toLowerCase()));
        };
        var lastTarget = dom_1.Dom.furthest(target, matched, this.j.editor) ||
            (matched(target) ? target : null);
        if (!lastTarget) {
            return;
        }
        if (dom_1.Dom.isTag(lastTarget.parentElement, 'a') &&
            lastTarget.parentElement.firstChild === lastTarget &&
            lastTarget.parentElement.lastChild === lastTarget) {
            lastTarget = lastTarget.parentElement;
        }
        this.startX = event.clientX;
        this.startY = event.clientY;
        this.isCopyMode = (0, helpers_1.ctrlKey)(event);
        this.draggable = lastTarget.cloneNode(true);
        (0, helpers_1.dataBind)(this.draggable, 'target', lastTarget);
        this.state = DragState.WAIT_DRAGGING;
        this.addDragListeners();
    };
    dragAndDropElement.prototype.onDrag = function (event) {
        var _a, _b;
        if (!this.draggable || this.state === DragState.IDLE) {
            return;
        }
        var x = event.clientX, y = event.clientY;
        if (this.state === DragState.WAIT_DRAGGING &&
            Math.sqrt(Math.pow(x - this.startX, 2) + Math.pow(y - this.startY, 2)) < this.diffStep) {
            return;
        }
        if (this.state === DragState.WAIT_DRAGGING) {
            this.j.lock('drag-and-drop-element');
            this.state = DragState.DRAGGING;
        }
        this.j.e.fire('hidePopup hideResizer');
        if (!this.draggable.parentNode) {
            var target = (0, helpers_1.dataBind)(this.draggable, 'target');
            (0, helpers_1.css)(this.draggable, {
                zIndex: 10000000000000,
                pointerEvents: 'none',
                pointer: 'drag',
                position: 'fixed',
                opacity: 0.7,
                display: 'inline-block',
                left: event.clientX,
                top: event.clientY,
                width: (_a = target === null || target === void 0 ? void 0 : target.offsetWidth) !== null && _a !== void 0 ? _a : 100,
                height: (_b = target === null || target === void 0 ? void 0 : target.offsetHeight) !== null && _b !== void 0 ? _b : 100
            });
            (0, global_1.getContainer)(this.j, dragAndDropElement).appendChild(this.draggable);
        }
        (0, helpers_1.css)(this.draggable, {
            left: event.clientX,
            top: event.clientY
        });
        this.j.s.insertCursorAtPoint(event.clientX, event.clientY);
    };
    dragAndDropElement.prototype.onDragEnd = function () {
        if (this.isInDestruct) {
            return;
        }
        this.removeDragListeners();
        this.j.unlock();
        this.state = DragState.IDLE;
        if (this.draggable) {
            dom_1.Dom.safeRemove(this.draggable);
            this.draggable = null;
        }
    };
    dragAndDropElement.prototype.onDrop = function () {
        if (!this.draggable || this.state < DragState.DRAGGING) {
            this.onDragEnd();
            return;
        }
        var fragment = (0, helpers_1.dataBind)(this.draggable, 'target');
        this.onDragEnd();
        if (this.isCopyMode) {
            fragment = fragment.cloneNode(true);
        }
        var parentElement = fragment.parentElement;
        this.j.s.insertNode(fragment, true, false);
        if (parentElement &&
            dom_1.Dom.isEmpty(parentElement) &&
            !dom_1.Dom.isTag(parentElement, ['td', 'th'])) {
            dom_1.Dom.safeRemove(parentElement);
        }
        if (dom_1.Dom.isTag(fragment, 'img') && this.j.e) {
            this.j.e.fire('afterInsertImage', fragment);
        }
        this.j.e.fire('synchro');
    };
    dragAndDropElement.prototype.addDragListeners = function () {
        this.j.e
            .on(this.j.editor, 'mousemove', this.onDrag)
            .on('mouseup', this.onDrop)
            .on([this.j.ew, this.ow], 'mouseup', this.onDragEnd);
    };
    dragAndDropElement.prototype.removeDragListeners = function () {
        this.j.e
            .off(this.j.editor, 'mousemove', this.onDrag)
            .off('mouseup', this.onDrop)
            .off([this.j.ew, this.ow], 'mouseup', this.onDragEnd);
    };
    dragAndDropElement.prototype.beforeDestruct = function () {
        this.onDragEnd();
        this.j.e.off('mousedown dragstart', this.onDragStart);
        this.removeDragListeners();
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], dragAndDropElement.prototype, "onDragStart", null);
    tslib_1.__decorate([
        (0, decorators_1.throttle)(function (ctx) { return ctx.defaultTimeout / 10; })
    ], dragAndDropElement.prototype, "onDrag", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], dragAndDropElement.prototype, "onDragEnd", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], dragAndDropElement.prototype, "onDrop", null);
    return dragAndDropElement;
}(plugin_1.Plugin));
exports.dragAndDropElement = dragAndDropElement;
global_1.pluginSystem.add('dragAndDropElement', dragAndDropElement);


/***/ }),

/***/ 19268:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dragAndDrop = void 0;
var tslib_1 = __webpack_require__(20255);
var constants_1 = __webpack_require__(86893);
var dom_1 = __webpack_require__(24263);
var helpers_1 = __webpack_require__(40332);
var plugin_1 = __webpack_require__(57549);
var decorators_1 = __webpack_require__(43441);
var file_browser_1 = __webpack_require__(63463);
var global_1 = __webpack_require__(17332);
var dragAndDrop = (function (_super) {
    tslib_1.__extends(dragAndDrop, _super);
    function dragAndDrop() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isFragmentFromEditor = false;
        _this.isCopyMode = false;
        _this.startDragPoint = { x: 0, y: 0 };
        _this.draggable = null;
        _this.bufferRange = null;
        _this.getText = function (event) {
            var dt = (0, helpers_1.getDataTransfer)(event);
            return dt ? dt.getData(constants_1.TEXT_HTML) || dt.getData(constants_1.TEXT_PLAIN) : null;
        };
        return _this;
    }
    dragAndDrop.prototype.afterInit = function () {
        this.j.e.on([window, this.j.ed, this.j.editor], 'dragstart.DragAndDrop', this.onDragStart);
    };
    dragAndDrop.prototype.onDragStart = function (event) {
        var target = event.target;
        this.onDragEnd();
        this.isFragmentFromEditor = dom_1.Dom.isOrContains(this.j.editor, target, true);
        this.isCopyMode = this.isFragmentFromEditor ? (0, helpers_1.ctrlKey)(event) : true;
        if (this.isFragmentFromEditor) {
            var sel = this.j.s.sel;
            var range = sel && sel.rangeCount ? sel.getRangeAt(0) : null;
            if (range) {
                this.bufferRange = range.cloneRange();
            }
        }
        else {
            this.bufferRange = null;
        }
        this.startDragPoint.x = event.clientX;
        this.startDragPoint.y = event.clientY;
        if ((0, file_browser_1.isFileBrowserFilesItem)(target)) {
            target = target.querySelector('img');
        }
        if (dom_1.Dom.isTag(target, 'img')) {
            this.draggable = target.cloneNode(true);
            (0, helpers_1.dataBind)(this.draggable, 'target', target);
        }
        this.addDragListeners();
    };
    dragAndDrop.prototype.addDragListeners = function () {
        this.j.e
            .on('dragover', this.onDrag)
            .on('drop.DragAndDrop', this.onDrop)
            .on(window, 'dragend.DragAndDrop drop.DragAndDrop mouseup.DragAndDrop', this.onDragEnd);
    };
    dragAndDrop.prototype.removeDragListeners = function () {
        this.j.e
            .off('dragover', this.onDrag)
            .off('drop.DragAndDrop', this.onDrop)
            .off(window, 'dragend.DragAndDrop drop.DragAndDrop mouseup.DragAndDrop', this.onDragEnd);
    };
    dragAndDrop.prototype.onDrag = function (event) {
        if (this.draggable) {
            this.j.e.fire('hidePopup');
            this.j.s.insertCursorAtPoint(event.clientX, event.clientY);
            event.preventDefault();
            event.stopPropagation();
        }
    };
    dragAndDrop.prototype.onDragEnd = function () {
        if (this.draggable) {
            dom_1.Dom.safeRemove(this.draggable);
            this.draggable = null;
        }
        this.isCopyMode = false;
        this.removeDragListeners();
    };
    dragAndDrop.prototype.onDrop = function (event) {
        if (!event.dataTransfer ||
            !event.dataTransfer.files ||
            !event.dataTransfer.files.length) {
            if (!this.isFragmentFromEditor && !this.draggable) {
                this.j.e.fire('paste', event);
                event.preventDefault();
                event.stopPropagation();
                return false;
            }
            var sel = this.j.s.sel;
            var range = this.bufferRange ||
                (sel && sel.rangeCount ? sel.getRangeAt(0) : null);
            var fragment = null;
            if (!this.draggable && range) {
                fragment = this.isCopyMode
                    ? range.cloneContents()
                    : range.extractContents();
            }
            else if (this.draggable) {
                if (this.isCopyMode) {
                    var _a = tslib_1.__read((0, helpers_1.attr)(this.draggable, '-is-file') === '1'
                        ? ['a', 'href']
                        : ['img', 'src'], 2), tagName = _a[0], field = _a[1];
                    fragment = this.j.createInside.element(tagName);
                    fragment.setAttribute(field, (0, helpers_1.attr)(this.draggable, 'data-src') ||
                        (0, helpers_1.attr)(this.draggable, 'src') ||
                        '');
                    if (tagName === 'a') {
                        fragment.textContent = (0, helpers_1.attr)(fragment, field) || '';
                    }
                }
                else {
                    fragment = (0, helpers_1.dataBind)(this.draggable, 'target');
                }
            }
            else if (this.getText(event)) {
                fragment = this.j.createInside.fromHTML(this.getText(event));
            }
            sel && sel.removeAllRanges();
            this.j.s.insertCursorAtPoint(event.clientX, event.clientY);
            if (fragment) {
                this.j.s.insertNode(fragment, false, false);
                if (range && fragment.firstChild && fragment.lastChild) {
                    range.setStartBefore(fragment.firstChild);
                    range.setEndAfter(fragment.lastChild);
                    this.j.s.selectRange(range);
                    this.j.e.fire('synchro');
                }
                if (dom_1.Dom.isTag(fragment, 'img') && this.j.events) {
                    this.j.e.fire('afterInsertImage', fragment);
                }
            }
            event.preventDefault();
            event.stopPropagation();
        }
        this.isFragmentFromEditor = false;
        this.removeDragListeners();
    };
    dragAndDrop.prototype.beforeDestruct = function () {
        this.onDragEnd();
        this.j.e
            .off(window, '.DragAndDrop')
            .off('.DragAndDrop')
            .off([window, this.j.ed, this.j.editor], 'dragstart.DragAndDrop', this.onDragStart);
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], dragAndDrop.prototype, "onDragStart", null);
    tslib_1.__decorate([
        (0, decorators_1.throttle)(function (ctx) { return ctx.defaultTimeout / 10; })
    ], dragAndDrop.prototype, "onDrag", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], dragAndDrop.prototype, "onDragEnd", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], dragAndDrop.prototype, "onDrop", null);
    return dragAndDrop;
}(plugin_1.Plugin));
exports.dragAndDrop = dragAndDrop;
global_1.pluginSystem.add('dragAndDrop', dragAndDrop);


/***/ }),

/***/ 95049:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(69516), exports);


/***/ }),

/***/ 69516:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeExtraBr = void 0;
var dom_1 = __webpack_require__(24263);
function removeExtraBr(jodit, node) {
    if (!jodit.o.dtd.removeExtraBr || dom_1.Dom.isTag(node, 'br')) {
        return;
    }
    var parent = dom_1.Dom.furthest(node, dom_1.Dom.isBlock, jodit.editor);
    if (parent && !dom_1.Dom.isTag(parent, ['table', 'pre', 'blockquote', 'code'])) {
        var br = dom_1.Dom.isTag(node, 'br')
            ? node
            : dom_1.Dom.findNotEmptySibling(node, false);
        if (!dom_1.Dom.isTag(br, 'br')) {
            return;
        }
        jodit.s.setCursorBefore(br);
        dom_1.Dom.safeRemove(br);
    }
}
exports.removeExtraBr = removeExtraBr;


/***/ }),

/***/ 73967:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkBlockNesting = void 0;
var dom_1 = __webpack_require__(24263);
function checkBlockNesting(jodit, node) {
    if (dom_1.Dom.isFragment(node)) {
        node = node.firstChild;
    }
    if (jodit.o.dtd.checkBlockNesting && dom_1.Dom.isBlock(node)) {
        var parent = dom_1.Dom.furthest(jodit.s.current(), dom_1.Dom.isBlock, jodit.editor);
        if (parent && !jodit.o.dtd.blockLimits[parent.tagName.toLowerCase()]) {
            jodit.s.setCursorAfter(parent);
            if (dom_1.Dom.isEmpty(parent)) {
                dom_1.Dom.safeRemove(parent);
            }
        }
    }
}
exports.checkBlockNesting = checkBlockNesting;


/***/ }),

/***/ 73690:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(73967), exports);


/***/ }),

/***/ 20173:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.dtd = {
    removeExtraBr: true,
    checkBlockNesting: true,
    blockLimits: {
        article: 1,
        aside: 1,
        audio: 1,
        body: 1,
        caption: 1,
        details: 1,
        dir: 1,
        div: 1,
        dl: 1,
        fieldset: 1,
        figcaption: 1,
        figure: 1,
        footer: 1,
        form: 1,
        header: 1,
        hgroup: 1,
        main: 1,
        menu: 1,
        nav: 1,
        ol: 1,
        section: 1,
        table: 1,
        td: 1,
        th: 1,
        tr: 1,
        ul: 1,
        video: 1
    }
};


/***/ }),

/***/ 96899:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var global_1 = __webpack_require__(17332);
var watch_1 = __webpack_require__(46163);
__webpack_require__(20173);
var beforeInsertCases = __webpack_require__(73690);
var afterInsertCases = __webpack_require__(95049);
var dtd = (function (_super) {
    tslib_1.__extends(dtd, _super);
    function dtd() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    dtd.prototype.afterInit = function (jodit) { };
    dtd.prototype.beforeDestruct = function (jodit) { };
    dtd.prototype.__onBeforeInsertNode = function (node) {
        var _this = this;
        var casesKeys = Object.keys(beforeInsertCases);
        casesKeys.forEach(function (key) {
            beforeInsertCases[key](_this.j, node);
        });
    };
    dtd.prototype.__onAfterInsertNode = function (node) {
        var _this = this;
        var casesKeys = Object.keys(afterInsertCases);
        casesKeys.forEach(function (key) {
            afterInsertCases[key](_this.j, node);
        });
    };
    tslib_1.__decorate([
        (0, watch_1.watch)(':beforeInsertNode')
    ], dtd.prototype, "__onBeforeInsertNode", null);
    tslib_1.__decorate([
        (0, watch_1.watch)(':afterInsertNode')
    ], dtd.prototype, "__onAfterInsertNode", null);
    return dtd;
}(plugin_1.Plugin));
global_1.pluginSystem.add('dtd', dtd);


/***/ }),

/***/ 33122:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.enter = void 0;
var tslib_1 = __webpack_require__(20255);
var dom_1 = __webpack_require__(24263);
var plugin_1 = __webpack_require__(85605);
var constants_1 = __webpack_require__(86893);
var decorators_1 = __webpack_require__(43441);
var is_boolean_1 = __webpack_require__(67749);
var helpers_1 = __webpack_require__(23217);
var global_1 = __webpack_require__(17332);
__webpack_require__(26231);
var enter = (function (_super) {
    tslib_1.__extends(enter, _super);
    function enter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    enter.prototype.afterInit = function (editor) {
        var _this = this;
        var defaultTag = editor.o.enter.toLowerCase();
        var brMode = defaultTag === constants_1.BR.toLowerCase();
        if (!editor.o.enterBlock) {
            editor.o.enterBlock = brMode
                ? constants_1.PARAGRAPH
                : defaultTag;
        }
        editor.registerCommand('enter', function (command, value, event) {
            if (event === void 0) { event = {}; }
            return _this.onEnter(event);
        });
    };
    enter.prototype.onEnterKeyDown = function (event) {
        if (event.key === constants_1.KEY_ENTER) {
            var editor = this.j;
            var beforeEnter = editor.e.fire('beforeEnter', event);
            if (beforeEnter !== undefined) {
                return beforeEnter;
            }
            if (!editor.s.isCollapsed()) {
                editor.execCommand('Delete');
            }
            editor.s.focus();
            this.onEnter(event);
            editor.e.fire('afterEnter', event);
            editor.synchronizeValues();
            return false;
        }
    };
    enter.prototype.onEnter = function (event) {
        var jodit = this.jodit;
        var fake = jodit.createInside.fake();
        try {
            dom_1.Dom.safeInsertNode(jodit.s.range, fake);
            (0, helpers_1.moveCursorOutFromSpecialTags)(jodit, fake, ['a']);
            var block = (0, helpers_1.getBlockWrapper)(fake, jodit);
            var isLi = dom_1.Dom.isTag(block, 'li');
            if ((!isLi || (event === null || event === void 0 ? void 0 : event.shiftKey)) &&
                (0, helpers_1.checkBR)(fake, jodit, event === null || event === void 0 ? void 0 : event.shiftKey)) {
                return false;
            }
            if (!block && !(0, helpers_1.hasPreviousBlock)(fake, jodit)) {
                block = (0, helpers_1.wrapText)(fake, jodit);
            }
            if (!block) {
                (0, helpers_1.insertParagraph)(fake, jodit, isLi ? 'li' : jodit.o.enter);
                return false;
            }
            if (!(0, helpers_1.checkUnsplittableBox)(fake, jodit, block)) {
                return false;
            }
            if (isLi && this.__isEmptyListLeaf(block)) {
                (0, helpers_1.processEmptyLILeaf)(fake, jodit, block);
                return false;
            }
            (0, helpers_1.splitFragment)(fake, jodit, block);
        }
        finally {
            fake.isConnected && jodit.s.setCursorBefore(fake);
            dom_1.Dom.safeRemove(fake);
        }
    };
    enter.prototype.__isEmptyListLeaf = function (li) {
        var result = this.j.e.fire('enterIsEmptyListLeaf', li);
        return (0, is_boolean_1.isBoolean)(result) ? result : dom_1.Dom.isEmpty(li);
    };
    enter.prototype.beforeDestruct = function (editor) {
        editor.e.off('keydown.enter');
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)(':keydown.enter')
    ], enter.prototype, "onEnterKeyDown", null);
    return enter;
}(plugin_1.Plugin));
exports.enter = enter;
global_1.pluginSystem.add('enter', enter);


/***/ }),

/***/ 94149:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkBR = void 0;
var dom_1 = __webpack_require__(24263);
var scroll_into_view_1 = __webpack_require__(9005);
var constants_1 = __webpack_require__(86893);
function checkBR(fake, jodit, shiftKeyPressed) {
    var isMultiLineBlock = Boolean(dom_1.Dom.closest(fake, ['pre', 'blockquote'], jodit.editor));
    var isBRMode = jodit.o.enter.toLowerCase() === constants_1.BR.toLowerCase();
    if (isBRMode ||
        (shiftKeyPressed && !isMultiLineBlock) ||
        (!shiftKeyPressed && isMultiLineBlock)) {
        if (isMultiLineBlock && checkSeveralBR(fake)) {
            return false;
        }
        var br = jodit.createInside.element('br');
        dom_1.Dom.before(fake, br);
        if (!dom_1.Dom.findNotEmptySibling(br, false)) {
            var clone = br.cloneNode();
            dom_1.Dom.after(br, clone);
            dom_1.Dom.before(clone, fake);
        }
        (0, scroll_into_view_1.scrollIntoViewIfNeeded)(br, jodit.editor, jodit.ed);
        return true;
    }
    return false;
}
exports.checkBR = checkBR;
function checkSeveralBR(fake) {
    var preBr = brBefore(brBefore(fake));
    if (preBr) {
        dom_1.Dom.safeRemove(brBefore(fake));
        dom_1.Dom.safeRemove(preBr);
        return true;
    }
    return false;
}
function brBefore(start) {
    if (!start) {
        return false;
    }
    var prev = dom_1.Dom.findSibling(start, true);
    if (!prev || !dom_1.Dom.isTag(prev, 'br')) {
        return false;
    }
    return prev;
}


/***/ }),

/***/ 58921:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkUnsplittableBox = void 0;
var dom_1 = __webpack_require__(24263);
function checkUnsplittableBox(fake, jodit, currentBox) {
    if (!dom_1.Dom.canSplitBlock(currentBox)) {
        dom_1.Dom.before(fake, jodit.createInside.element('br'));
        return false;
    }
    return true;
}
exports.checkUnsplittableBox = checkUnsplittableBox;


/***/ }),

/***/ 70638:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getBlockWrapper = void 0;
var consts = __webpack_require__(86893);
var dom_1 = __webpack_require__(24263);
function getBlockWrapper(fake, jodit, tagReg) {
    if (tagReg === void 0) { tagReg = consts.IS_BLOCK; }
    var node = fake;
    var root = jodit.editor;
    do {
        if (!node || node === root) {
            break;
        }
        if (tagReg.test(node.nodeName)) {
            if (dom_1.Dom.isTag(node, 'li')) {
                return node;
            }
            return (getBlockWrapper(node.parentNode, jodit, /^li$/i) ||
                node);
        }
        node = node.parentNode;
    } while (node && node !== root);
    return null;
}
exports.getBlockWrapper = getBlockWrapper;


/***/ }),

/***/ 50781:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasPreviousBlock = void 0;
var dom_1 = __webpack_require__(24263);
function hasPreviousBlock(fake, jodit) {
    return Boolean(dom_1.Dom.prev(fake, function (elm) { return dom_1.Dom.isBlock(elm) || dom_1.Dom.isImage(elm); }, jodit.editor));
}
exports.hasPreviousBlock = hasPreviousBlock;


/***/ }),

/***/ 23217:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(94149), exports);
tslib_1.__exportStar(__webpack_require__(58921), exports);
tslib_1.__exportStar(__webpack_require__(92291), exports);
tslib_1.__exportStar(__webpack_require__(70638), exports);
tslib_1.__exportStar(__webpack_require__(50781), exports);
tslib_1.__exportStar(__webpack_require__(90443), exports);
tslib_1.__exportStar(__webpack_require__(52521), exports);
tslib_1.__exportStar(__webpack_require__(81512), exports);
tslib_1.__exportStar(__webpack_require__(29575), exports);


/***/ }),

/***/ 90443:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.insertParagraph = void 0;
var dom_1 = __webpack_require__(24263);
var scroll_into_view_1 = __webpack_require__(9005);
function insertParagraph(fake, editor, wrapperTag, style) {
    var isBR = wrapperTag.toLowerCase() === 'br', createInside = editor.createInside, p = createInside.element(wrapperTag), br = createInside.element('br');
    if (!isBR) {
        p.appendChild(br);
    }
    if (style && style.cssText) {
        p.setAttribute('style', style.cssText);
    }
    dom_1.Dom.after(fake, p);
    dom_1.Dom.before(isBR ? p : br, fake);
    (0, scroll_into_view_1.scrollIntoViewIfNeeded)(p, editor.editor, editor.ed);
    return p;
}
exports.insertParagraph = insertParagraph;


/***/ }),

/***/ 29575:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.moveCursorOutFromSpecialTags = void 0;
var dom_1 = __webpack_require__(24263);
function moveCursorOutFromSpecialTags(jodit, fake, tags) {
    var s = jodit.s;
    var link = dom_1.Dom.closest(fake, tags, jodit.editor);
    if (link) {
        if (s.cursorOnTheRight(link, fake)) {
            dom_1.Dom.after(link, fake);
        }
        else if (s.cursorOnTheLeft(link, fake)) {
            dom_1.Dom.before(link, fake);
        }
    }
}
exports.moveCursorOutFromSpecialTags = moveCursorOutFromSpecialTags;


/***/ }),

/***/ 92291:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.processEmptyLILeaf = void 0;
var dom_1 = __webpack_require__(24263);
var selector_1 = __webpack_require__(54188);
var insert_paragraph_1 = __webpack_require__(90443);
function processEmptyLILeaf(fake, jodit, li) {
    var list = dom_1.Dom.closest(li, ['ol', 'ul'], jodit.editor);
    if (!list) {
        return;
    }
    var parentLi = list.parentElement, listInsideLeaf = dom_1.Dom.isTag(parentLi, 'li');
    var container = listInsideLeaf ? parentLi : list;
    var leftRange = jodit.s.createRange();
    leftRange.setStartAfter(li);
    leftRange.setEndAfter(list);
    var rightPart = leftRange.extractContents();
    dom_1.Dom.after(container, fake);
    dom_1.Dom.safeRemove(li);
    if (!(0, selector_1.$$)('li', list).length) {
        dom_1.Dom.safeRemove(list);
    }
    var newLi = (0, insert_paragraph_1.insertParagraph)(fake, jodit, listInsideLeaf ? 'li' : jodit.o.enter);
    if (!rightPart.querySelector('li')) {
        return;
    }
    if (listInsideLeaf) {
        newLi.appendChild(rightPart);
    }
    else {
        dom_1.Dom.after(newLi, rightPart);
    }
}
exports.processEmptyLILeaf = processEmptyLILeaf;


/***/ }),

/***/ 52521:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.splitFragment = void 0;
var scroll_into_view_1 = __webpack_require__(9005);
var dom_1 = __webpack_require__(24263);
var insert_paragraph_1 = __webpack_require__(90443);
function splitFragment(fake, jodit, block) {
    var sel = jodit.s, enter = jodit.o.enter;
    var defaultTag = enter.toLowerCase();
    var isLi = dom_1.Dom.isTag(block, 'li');
    var canSplit = block.tagName.toLowerCase() === defaultTag || isLi;
    var cursorOnTheRight = sel.cursorOnTheRight(block, fake);
    var cursorOnTheLeft = sel.cursorOnTheLeft(block, fake);
    if (!canSplit && (cursorOnTheRight || cursorOnTheLeft)) {
        if (cursorOnTheRight) {
            dom_1.Dom.after(block, fake);
        }
        else {
            dom_1.Dom.before(block, fake);
        }
        (0, insert_paragraph_1.insertParagraph)(fake, jodit, defaultTag);
        if (cursorOnTheLeft && !cursorOnTheRight) {
            dom_1.Dom.prepend(block, fake);
        }
        return;
    }
    var newP = sel.splitSelection(block, fake);
    (0, scroll_into_view_1.scrollIntoViewIfNeeded)(newP, jodit.editor, jodit.ed);
}
exports.splitFragment = splitFragment;


/***/ }),

/***/ 81512:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.wrapText = void 0;
var dom_1 = __webpack_require__(24263);
function wrapText(fake, jodit) {
    var needWrap = fake;
    dom_1.Dom.up(needWrap, function (node) {
        if (node && node.hasChildNodes() && node !== jodit.editor) {
            needWrap = node;
        }
    }, jodit.editor);
    var currentBox = dom_1.Dom.wrapInline(needWrap, jodit.o.enter, jodit);
    if (dom_1.Dom.isEmpty(currentBox)) {
        var br = jodit.createInside.element('br');
        currentBox.appendChild(br);
        dom_1.Dom.before(br, fake);
    }
    return currentBox;
}
exports.wrapText = wrapText;


/***/ }),

/***/ 26231:
/***/ (function() {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/***/ }),

/***/ 10135:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.file = void 0;
var config_1 = __webpack_require__(93166);
var dom_1 = __webpack_require__(24263);
var widget_1 = __webpack_require__(718);
var global_1 = __webpack_require__(17332);
config_1.Config.prototype.controls.file = {
    popup: function (editor, current, self, close) {
        var insert = function (url, title) {
            if (title === void 0) { title = ''; }
            editor.s.insertNode(editor.createInside.fromHTML("<a href=\"".concat(url, "\" title=\"").concat(title, "\">").concat(title || url, "</a>")));
        };
        var sourceAnchor = null;
        if (current &&
            (dom_1.Dom.isTag(current, 'a') ||
                dom_1.Dom.closest(current, 'a', editor.editor))) {
            sourceAnchor = dom_1.Dom.isTag(current, 'a')
                ? current
                : dom_1.Dom.closest(current, 'a', editor.editor);
        }
        return (0, widget_1.FileSelectorWidget)(editor, {
            filebrowser: function (data) {
                data.files &&
                    data.files.forEach(function (file) { return insert(data.baseurl + file); });
                close();
            },
            upload: true,
            url: function (url, text) {
                if (sourceAnchor) {
                    sourceAnchor.setAttribute('href', url);
                    sourceAnchor.setAttribute('title', text);
                }
                else {
                    insert(url, text);
                }
                close();
            }
        }, sourceAnchor, close, false);
    },
    tags: ['a'],
    tooltip: 'Insert file'
};
function file(editor) {
    editor.registerButton({
        name: 'file',
        group: 'media'
    });
}
exports.file = file;
global_1.pluginSystem.add('file', file);


/***/ }),

/***/ 66994:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.focus = void 0;
var config_1 = __webpack_require__(93166);
var dom_1 = __webpack_require__(64968);
var global_1 = __webpack_require__(17332);
config_1.Config.prototype.autofocus = false;
config_1.Config.prototype.cursorAfterAutofocus = 'end';
config_1.Config.prototype.saveSelectionOnBlur = true;
function focus(editor) {
    if (editor.o.saveSelectionOnBlur) {
        editor.e
            .on('blur', function () {
            if (editor.isEditorMode()) {
                editor.s.save(true);
            }
        })
            .on('focus', function () {
            editor.s.restore();
        });
    }
    var focus = function () {
        editor.s.focus();
        if (editor.o.cursorAfterAutofocus === 'end') {
            var lastTextNode = dom_1.Dom.last(editor.editor, function (node) {
                return dom_1.Dom.isText(node);
            });
            if (lastTextNode) {
                editor.s.setCursorIn(lastTextNode, false);
            }
        }
    };
    editor.e.on('afterInit', function () {
        if (editor.o.autofocus) {
            if (editor.defaultTimeout) {
                editor.async.setTimeout(focus, 300);
            }
            else {
                focus();
            }
        }
    });
    editor.e.on('afterInit afterAddPlace', function () {
        editor.e
            .off(editor.editor, 'mousedown.autofocus')
            .on(editor.editor, 'mousedown.autofocus', function (e) {
            if (editor.isEditorMode() &&
                e.target &&
                dom_1.Dom.isBlock(e.target) &&
                !e.target.childNodes.length) {
                if (editor.editor === e.target) {
                    editor.s.focus();
                }
                else {
                    editor.s.setCursorIn(e.target);
                }
            }
        });
    });
}
exports.focus = focus;
global_1.pluginSystem.add('focus', focus);


/***/ }),

/***/ 8082:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
var config_1 = __webpack_require__(93166);
var dom_1 = __webpack_require__(24263);
var utils_1 = __webpack_require__(76502);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.defaultFontSizePoints = 'px';
icon_1.Icon.set('font', __webpack_require__(84142)).set('fontsize', __webpack_require__(57292));
config_1.Config.prototype.controls.fontsize = {
    command: 'fontsize',
    data: {
        cssRule: 'font-size'
    },
    list: [
        '8',
        '9',
        '10',
        '11',
        '12',
        '14',
        '16',
        '18',
        '24',
        '30',
        '36',
        '48',
        '60',
        '72',
        '96'
    ],
    exec: function (editor, event, _a) {
        var control = _a.control;
        return (0, utils_1.memorizeExec)(editor, event, { control: control }, function (value) {
            var _a;
            if (((_a = control.command) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'fontsize') {
                return "".concat(value).concat(editor.o.defaultFontSizePoints);
            }
            return value;
        });
    },
    childTemplate: function (editor, key, value) {
        return "".concat(value).concat(editor.o.defaultFontSizePoints);
    },
    tooltip: 'Font size',
    isChildActive: function (editor, control) {
        var _a, _b;
        var current = editor.s.current(), cssKey = ((_a = control.data) === null || _a === void 0 ? void 0 : _a.cssRule) || 'font-size', normalize = ((_b = control.data) === null || _b === void 0 ? void 0 : _b.normalize) ||
            (function (v) {
                if (/pt$/i.test(v) &&
                    editor.o.defaultFontSizePoints === 'pt') {
                    return v.replace(/pt$/i, '');
                }
                return v;
            });
        if (current) {
            var currentBpx = dom_1.Dom.closest(current, dom_1.Dom.isElement, editor.editor) || editor.editor;
            var value = (0, utils_1.css)(currentBpx, cssKey);
            return Boolean(value &&
                control.args &&
                normalize(control.args[0].toString()) ===
                    normalize(value.toString()));
        }
        return false;
    }
};
config_1.Config.prototype.controls.font = tslib_1.__assign(tslib_1.__assign({}, config_1.Config.prototype.controls.fontsize), { command: 'fontname', list: {
        '': 'Default',
        'helvetica,sans-serif': 'Helvetica',
        'arial,helvetica,sans-serif': 'Arial',
        'georgia,palatino,serif': 'Georgia',
        'impact,charcoal,sans-serif': 'Impact',
        'tahoma,geneva,sans-serif': 'Tahoma',
        'times new roman,times,serif': 'Times New Roman',
        'verdana,geneva,sans-serif': 'Verdana'
    }, childTemplate: function (editor, key, value) {
        var isAvailable = false;
        try {
            isAvailable =
                key.indexOf('dings') === -1 &&
                    document.fonts.check("16px ".concat(key), value);
        }
        catch (_a) { }
        return "<span data-style=\"".concat(key, "\" style=\"").concat(isAvailable ? "font-family: ".concat(key, "!important;") : '', "\">").concat(value, "</span>");
    }, data: {
        cssRule: 'font-family',
        normalize: function (v) {
            return v
                .toLowerCase()
                .replace(/['"]+/g, '')
                .replace(/[^a-z0-9]+/g, ',');
        }
    }, tooltip: 'Font family' });


/***/ }),

/***/ 54798:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.font = void 0;
var helpers_1 = __webpack_require__(40332);
var global_1 = __webpack_require__(17332);
__webpack_require__(8082);
function font(editor) {
    editor
        .registerButton({
        name: 'font',
        group: 'font'
    })
        .registerButton({
        name: 'fontsize',
        group: 'font'
    });
    var callback = function (command, second, third) {
        switch (command) {
            case 'fontsize':
                editor.s.applyStyle({
                    fontSize: (0, helpers_1.normalizeSize)(third)
                });
                break;
            case 'fontname':
                editor.s.applyStyle({
                    fontFamily: third
                });
                break;
        }
        editor.synchronizeValues();
        return false;
    };
    editor
        .registerCommand('fontsize', callback)
        .registerCommand('fontname', callback);
}
exports.font = font;
global_1.pluginSystem.add('font', font);


/***/ }),

/***/ 12908:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.formatBlock = void 0;
var config_1 = __webpack_require__(93166);
var modules_1 = __webpack_require__(87837);
var helpers_1 = __webpack_require__(40332);
var global_1 = __webpack_require__(17332);
var icon_1 = __webpack_require__(77904);
icon_1.Icon.set('paragraph', __webpack_require__(18019));
config_1.Config.prototype.controls.paragraph = {
    command: 'formatBlock',
    update: function (button, editor) {
        var control = button.control, current = editor.s.current();
        if (current && editor.o.textIcons) {
            var currentBox = modules_1.Dom.closest(current, modules_1.Dom.isBlock, editor.editor) ||
                editor.editor, currentValue = currentBox.nodeName.toLowerCase(), list = control.list;
            if (button &&
                control.data &&
                control.data.currentValue !== currentValue &&
                list &&
                list[currentValue]) {
                if (editor.o.textIcons) {
                    button.state.text = currentValue;
                }
                else {
                    button.state.icon.name = currentValue;
                }
                control.data.currentValue = currentValue;
            }
        }
        return false;
    },
    exec: helpers_1.memorizeExec,
    data: {
        currentValue: 'left'
    },
    list: {
        p: 'Normal',
        h1: 'Heading 1',
        h2: 'Heading 2',
        h3: 'Heading 3',
        h4: 'Heading 4',
        blockquote: 'Quote',
        pre: 'Code'
    },
    isChildActive: function (editor, control) {
        var current = editor.s.current();
        if (current) {
            var currentBox = modules_1.Dom.closest(current, modules_1.Dom.isBlock, editor.editor);
            return Boolean(currentBox &&
                currentBox !== editor.editor &&
                control.args !== undefined &&
                currentBox.nodeName.toLowerCase() === control.args[0]);
        }
        return false;
    },
    isActive: function (editor, control) {
        var current = editor.s.current();
        if (current) {
            var currentBpx = modules_1.Dom.closest(current, modules_1.Dom.isBlock, editor.editor);
            return Boolean(currentBpx &&
                currentBpx !== editor.editor &&
                control.list !== undefined &&
                !modules_1.Dom.isTag(currentBpx, 'p') &&
                control.list[currentBpx.nodeName.toLowerCase()] !== undefined);
        }
        return false;
    },
    childTemplate: function (e, key, value) {
        return "<".concat(key, " style=\"margin:0;padding:0\"><span>").concat(e.i18n(value), "</span></").concat(key, ">");
    },
    tooltip: 'Insert format block'
};
function formatBlock(editor) {
    editor.registerButton({
        name: 'paragraph',
        group: 'font'
    });
    editor.registerCommand('formatblock', function (command, second, third) {
        editor.s.applyStyle(undefined, {
            element: third
        });
        editor.synchronizeValues();
        return false;
    });
}
exports.formatBlock = formatBlock;
global_1.pluginSystem.add('formatBlock', formatBlock);


/***/ }),

/***/ 15045:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
__webpack_require__(14320);
var config_1 = __webpack_require__(93166);
var consts = __webpack_require__(86893);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.fullsize = false;
config_1.Config.prototype.globalFullSize = true;
icon_1.Icon.set('fullsize', __webpack_require__(45146)).set('shrink', __webpack_require__(53576));
config_1.Config.prototype.controls.fullsize = {
    exec: function (editor) {
        editor.toggleFullSize();
    },
    update: function (button, editor) {
        var mode = editor.isFullSize ? 'shrink' : 'fullsize';
        button.state.activated = editor.isFullSize;
        if (editor.o.textIcons) {
            button.state.text = mode;
        }
        else {
            button.state.icon.name = mode;
        }
    },
    tooltip: 'Open in fullsize',
    mode: consts.MODE_SOURCE + consts.MODE_WYSIWYG
};


/***/ }),

/***/ 65123:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fullsize = void 0;
__webpack_require__(14320);
var css_1 = __webpack_require__(26911);
var is_jodit_object_1 = __webpack_require__(77892);
var global_1 = __webpack_require__(17332);
__webpack_require__(15045);
var fullsizeStack = new Set();
function fullsize(editor) {
    editor.registerButton({
        name: 'fullsize'
    });
    var isEnabled = false, oldHeight = 0, oldWidth = 0, wasToggled = false;
    var resize = function () {
        var container = editor.container, events = editor.events;
        if (events) {
            if (isEnabled) {
                oldHeight = (0, css_1.css)(container, 'height', true);
                oldWidth = (0, css_1.css)(container, 'width', true);
                (0, css_1.css)(container, {
                    height: editor.ow.innerHeight,
                    width: editor.ow.innerWidth
                });
                wasToggled = true;
            }
            else if (wasToggled) {
                (0, css_1.css)(container, {
                    height: oldHeight || 'auto',
                    width: oldWidth || 'auto'
                });
            }
        }
    }, toggle = function (enable) {
        var container = editor.container, events = editor.events;
        if (!container) {
            return;
        }
        if (enable === undefined) {
            enable = !container.classList.contains('jodit_fullsize');
        }
        editor.setMod('fullsize', enable);
        editor.o.fullsize = enable;
        isEnabled = enable;
        container.classList.toggle('jodit_fullsize', enable);
        if (editor.toolbar) {
            (0, is_jodit_object_1.isJoditObject)(editor) &&
                editor.toolbarContainer.appendChild(editor.toolbar.container);
            (0, css_1.css)(editor.toolbar.container, 'width', 'auto');
        }
        enable
            ? fullsizeStack.add(container)
            : fullsizeStack.delete(container);
        var shouldToggleGlobalFullsize = editor.o.globalFullSize &&
            ((fullsizeStack.size === 1 && enable) ||
                (fullsizeStack.size === 0 && !enable));
        if (shouldToggleGlobalFullsize) {
            var node = container.parentNode;
            while (node &&
                node.nodeType !== Node.DOCUMENT_NODE &&
                node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                node.classList.toggle('jodit_fullsize-box_true', enable);
                node = node.parentNode;
            }
            resize();
        }
        events.fire('afterResize');
    };
    if (editor.o.globalFullSize) {
        editor.e.on(editor.ow, 'resize', resize);
    }
    editor.e
        .on('afterInit afterOpen', function () {
        var _a;
        editor.toggleFullSize((_a = editor === null || editor === void 0 ? void 0 : editor.options) === null || _a === void 0 ? void 0 : _a.fullsize);
    })
        .on('toggleFullSize', toggle)
        .on('beforeDestruct', function () {
        isEnabled && toggle(false);
    })
        .on('beforeDestruct', function () {
        editor.events && editor.e.off(editor.ow, 'resize', resize);
    });
}
exports.fullsize = fullsize;
global_1.pluginSystem.add('fullsize', fullsize);


/***/ }),

/***/ 16829:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.commandToHotkeys = {
    removeFormat: ['ctrl+shift+m', 'cmd+shift+m'],
    insertOrderedList: ['ctrl+shift+7', 'cmd+shift+7'],
    insertUnorderedList: ['ctrl+shift+8, cmd+shift+8'],
    selectall: ['ctrl+a', 'cmd+a']
};


/***/ }),

/***/ 83228:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hotkeys = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var helpers_1 = __webpack_require__(40332);
var constants_1 = __webpack_require__(86893);
var global_1 = __webpack_require__(17332);
__webpack_require__(16829);
var hotkeys = (function (_super) {
    tslib_1.__extends(hotkeys, _super);
    function hotkeys() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onKeyPress = function (event) {
            var special = _this.specialKeys[event.which], character = (event.key || String.fromCharCode(event.which)).toLowerCase();
            var modif = [special || character];
            ['alt', 'ctrl', 'shift', 'meta'].forEach(function (specialKey) {
                if (event[specialKey + 'Key'] && special !== specialKey) {
                    modif.push(specialKey);
                }
            });
            return (0, helpers_1.normalizeKeyAliases)(modif.join('+'));
        };
        _this.specialKeys = {
            8: 'backspace',
            9: 'tab',
            10: 'return',
            13: 'return',
            16: 'shift',
            17: 'ctrl',
            18: 'alt',
            19: 'pause',
            20: 'capslock',
            27: 'esc',
            32: 'space',
            33: 'pageup',
            34: 'pagedown',
            35: 'end',
            36: 'home',
            37: 'left',
            38: 'up',
            39: 'right',
            40: 'down',
            45: 'insert',
            46: 'del',
            59: ';',
            61: '=',
            91: 'meta',
            96: '0',
            97: '1',
            98: '2',
            99: '3',
            100: '4',
            101: '5',
            102: '6',
            103: '7',
            104: '8',
            105: '9',
            106: '*',
            107: '+',
            109: '-',
            110: '.',
            111: '/',
            112: 'f1',
            113: 'f2',
            114: 'f3',
            115: 'f4',
            116: 'f5',
            117: 'f6',
            118: 'f7',
            119: 'f8',
            120: 'f9',
            121: 'f10',
            122: 'f11',
            123: 'f12',
            144: 'numlock',
            145: 'scroll',
            173: '-',
            186: ';',
            187: '=',
            188: ',',
            189: '-',
            190: '.',
            191: '/',
            192: '`',
            219: '[',
            220: '\\',
            221: ']',
            222: "'"
        };
        return _this;
    }
    hotkeys.prototype.afterInit = function (editor) {
        var _this = this;
        (0, helpers_1.keys)(editor.o.commandToHotkeys, false).forEach(function (commandName) {
            var shortcuts = editor.o.commandToHotkeys[commandName];
            if (shortcuts && ((0, helpers_1.isArray)(shortcuts) || (0, helpers_1.isString)(shortcuts))) {
                editor.registerHotkeyToCommand(shortcuts, commandName);
            }
        });
        var itIsHotkey = false;
        editor.e
            .off('.hotkeys')
            .on([editor.ow, editor.ew], 'keydown.hotkeys', function (e) {
            if (e.key === constants_1.KEY_ESC) {
                return _this.j.e.fire('escape', e);
            }
        })
            .on('keydown.hotkeys', function (event) {
            var shortcut = _this.onKeyPress(event), stop = {
                shouldStop: true
            };
            var resultOfFire = _this.j.e.fire(shortcut + '.hotkey', event.type, stop);
            if (resultOfFire === false) {
                if (stop.shouldStop) {
                    itIsHotkey = true;
                    editor.e.stopPropagation('keydown');
                    return false;
                }
                else {
                    event.preventDefault();
                }
            }
        }, { top: true })
            .on('keyup.hotkeys', function () {
            if (itIsHotkey) {
                itIsHotkey = false;
                editor.e.stopPropagation('keyup');
                return false;
            }
        }, { top: true });
    };
    hotkeys.prototype.beforeDestruct = function (jodit) {
        if (jodit.events) {
            jodit.e.off('.hotkeys');
        }
    };
    return hotkeys;
}(plugin_1.Plugin));
exports.hotkeys = hotkeys;
global_1.pluginSystem.add('hotkeys', hotkeys);


/***/ }),

/***/ 43889:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hr = void 0;
var config_1 = __webpack_require__(93166);
var dom_1 = __webpack_require__(64968);
var global_1 = __webpack_require__(17332);
var icon_1 = __webpack_require__(77904);
icon_1.Icon.set('hr', __webpack_require__(14655));
config_1.Config.prototype.controls.hr = {
    command: 'insertHorizontalRule',
    tags: ['hr'],
    tooltip: 'Insert Horizontal Line'
};
function hr(editor) {
    editor.registerButton({
        name: 'hr',
        group: 'insert'
    });
    editor.registerCommand('insertHorizontalRule', function () {
        var elm = editor.createInside.element('hr');
        editor.s.insertNode(elm, false, false);
        var block = dom_1.Dom.closest(elm.parentElement, dom_1.Dom.isBlock, editor.editor);
        if (block && dom_1.Dom.isEmpty(block) && block !== editor.editor) {
            dom_1.Dom.after(block, elm);
            dom_1.Dom.safeRemove(block);
        }
        var p = dom_1.Dom.next(elm, dom_1.Dom.isBlock, editor.editor, false);
        if (!p) {
            p = editor.createInside.element(editor.o.enter);
            dom_1.Dom.after(elm, p);
        }
        editor.s.setCursorIn(p);
        return false;
    });
}
exports.hr = hr;
global_1.pluginSystem.add('hr', hr);


/***/ }),

/***/ 2509:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.iframeBaseUrl = '';
config_1.Config.prototype.iframeTitle = 'Jodit Editor';
config_1.Config.prototype.iframeDoctype = '<!DOCTYPE html>';
config_1.Config.prototype.iframeDefaultSrc = 'about:blank';
config_1.Config.prototype.iframeStyle =
    'html{' +
        'margin:0;' +
        'padding:0;' +
        'min-height: 100%;' +
        '}' +
        'body{' +
        'box-sizing:border-box;' +
        'font-size:13px;' +
        'line-height:1.6;' +
        'padding:10px;' +
        'margin:0;' +
        'background:transparent;' +
        'color:#000;' +
        'position:' +
        'relative;' +
        'z-index:2;' +
        'user-select:auto;' +
        'margin:0px;' +
        'overflow:auto;' +
        'outline:none;' +
        '}' +
        'table{' +
        'width:100%;' +
        'border:none;' +
        'border-collapse:collapse;' +
        'empty-cells: show;' +
        'max-width: 100%;' +
        '}' +
        'th,td{' +
        'padding: 2px 5px;' +
        'border:1px solid #ccc;' +
        '-webkit-user-select:text;' +
        '-moz-user-select:text;' +
        '-ms-user-select:text;' +
        'user-select:text' +
        '}' +
        'p{' +
        'margin-top:0;' +
        '}' +
        '.jodit_editor .jodit_iframe_wrapper{' +
        'display: block;' +
        'clear: both;' +
        'user-select: none;' +
        'position: relative;' +
        '}' +
        '.jodit_editor .jodit_iframe_wrapper:after {' +
        'position:absolute;' +
        'content:"";' +
        'z-index:1;' +
        'top:0;' +
        'left:0;' +
        'right: 0;' +
        'bottom: 0;' +
        'cursor: pointer;' +
        'display: block;' +
        'background: rgba(0, 0, 0, 0);' +
        '} ' +
        '.jodit_disabled{' +
        'user-select: none;' +
        '-o-user-select: none;' +
        '-moz-user-select: none;' +
        '-khtml-user-select: none;' +
        '-webkit-user-select: none;' +
        '-ms-user-select: none' +
        '}';
config_1.Config.prototype.iframeCSSLinks = [];


/***/ }),

/***/ 93300:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.iframe = void 0;
var helpers_1 = __webpack_require__(40332);
var helpers_2 = __webpack_require__(40332);
var constants_1 = __webpack_require__(86893);
var global_1 = __webpack_require__(17332);
__webpack_require__(2509);
function iframe(editor) {
    var opt = editor.options;
    editor.e
        .on('afterSetMode', function () {
        if (editor.isEditorMode()) {
            editor.s.focus();
        }
    })
        .on('generateDocumentStructure.iframe', function (__doc, jodit) {
        var doc = __doc ||
            jodit.iframe
                .contentWindow.document;
        doc.open();
        doc.write(opt.iframeDoctype +
            "<html dir=\"".concat(opt.direction, "\" class=\"jodit\" lang=\"").concat((0, helpers_1.defaultLanguage)(opt.language), "\">") +
            '<head>' +
            "<title>".concat(opt.iframeTitle, "</title>") +
            (opt.iframeBaseUrl
                ? "<base href=\"".concat(opt.iframeBaseUrl, "\"/>")
                : '') +
            '</head>' +
            '<body class="jodit-wysiwyg"></body>' +
            '</html>');
        doc.close();
        if (opt.iframeCSSLinks) {
            opt.iframeCSSLinks.forEach(function (href) {
                var link = doc.createElement('link');
                link.setAttribute('rel', 'stylesheet');
                link.setAttribute('href', href);
                doc.head && doc.head.appendChild(link);
            });
        }
        if (opt.iframeStyle) {
            var style = doc.createElement('style');
            style.innerHTML = opt.iframeStyle;
            doc.head && doc.head.appendChild(style);
        }
    })
        .on('createEditor', function () {
        if (!opt.iframe) {
            return;
        }
        var iframe = editor.c.element('iframe');
        iframe.style.display = 'block';
        iframe.src = 'about:blank';
        iframe.className = 'jodit-wysiwyg_iframe';
        iframe.setAttribute('allowtransparency', 'true');
        iframe.setAttribute('tabindex', opt.tabIndex.toString());
        iframe.setAttribute('frameborder', '0');
        editor.workplace.appendChild(iframe);
        editor.iframe = iframe;
        var result = editor.e.fire('generateDocumentStructure.iframe', null, editor);
        var init = function () {
            if (!editor.iframe) {
                return false;
            }
            var doc = editor.iframe.contentWindow.document;
            editor.editorWindow = editor.iframe.contentWindow;
            var docMode = opt.editHTMLDocumentMode;
            var toggleEditable = function () {
                (0, helpers_1.attr)(doc.body, 'contenteditable', (editor.getMode() !== constants_1.MODE_SOURCE &&
                    !editor.getReadOnly()) ||
                    null);
            };
            var clearMarkers = function (html) {
                var bodyReg = /<body.*<\/body>/im, bodyMarker = '{%%BODY%%}', body = bodyReg.exec(html);
                if (body) {
                    html = html
                        .replace(bodyReg, bodyMarker)
                        .replace(/<span([^>]*?)>(.*?)<\/span>/gim, '')
                        .replace(/&lt;span([^&]*?)&gt;(.*?)&lt;\/span&gt;/gim, '')
                        .replace(bodyMarker, body[0]
                        .replace(/(<body[^>]+?)min-height["'\s]*:[\s"']*[0-9]+(px|%)/im, '$1')
                        .replace(/(<body[^>]+?)([\s]*["'])?contenteditable["'\s]*=[\s"']*true["']?/im, '$1')
                        .replace(/<(style|script|span)[^>]+jodit[^>]+>.*?<\/\1>/g, ''))
                        .replace(/(class\s*=\s*)(['"])([^"']*)(jodit-wysiwyg|jodit)([^"']*\2)/g, '$1$2$3$5')
                        .replace(/(<[^<]+?)\sclass="[\s]*"/gim, '$1')
                        .replace(/(<[^<]+?)\sstyle="[\s;]*"/gim, '$1')
                        .replace(/(<[^<]+?)\sdir="[\s]*"/gim, '$1');
                }
                return html;
            };
            if (docMode) {
                var tag = editor.element.tagName;
                if (tag !== 'TEXTAREA' && tag !== 'INPUT') {
                    throw (0, helpers_2.error)('If enable `editHTMLDocumentMode` - source element should be INPUT or TEXTAREA');
                }
                editor.e
                    .on('beforeGetNativeEditorValue', function () {
                    return clearMarkers(editor.o.iframeDoctype +
                        doc.documentElement.outerHTML);
                })
                    .on('beforeSetNativeEditorValue', function (_a) {
                    var value = _a.value;
                    if (editor.isLocked) {
                        return false;
                    }
                    if (/<(html|body)/i.test(value)) {
                        var old = doc.documentElement.outerHTML;
                        if (clearMarkers(old) !==
                            clearMarkers(value)) {
                            doc.open();
                            doc.write(editor.o.iframeDoctype +
                                clearMarkers(value));
                            doc.close();
                            editor.editor = doc.body;
                            editor.e.fire('safeHTML', editor.editor);
                            toggleEditable();
                            editor.e.fire('prepareWYSIWYGEditor');
                            editor.e.stopPropagation('beforeSetNativeEditorValue');
                        }
                    }
                    else {
                        doc.body.innerHTML = value;
                    }
                    return true;
                }, { top: true });
            }
            editor.editor = doc.body;
            editor.e.on('afterSetMode afterInit afterAddPlace', toggleEditable);
            if (opt.height === 'auto') {
                doc.documentElement &&
                    (doc.documentElement.style.overflowY = 'hidden');
                var resizeIframe = editor.async.throttle(function () {
                    if (editor.editor &&
                        editor.iframe &&
                        opt.height === 'auto') {
                        var style = editor.ew.getComputedStyle(editor.editor), marginOffset = parseInt(style.marginTop || '0', 10) +
                            parseInt(style.marginBottom || '0', 10);
                        (0, helpers_1.css)(editor.iframe, 'height', editor.editor.offsetHeight + marginOffset);
                    }
                }, editor.defaultTimeout / 2);
                editor.e
                    .on('change afterInit afterSetMode resize', resizeIframe)
                    .on([editor.iframe, editor.ew, doc.documentElement], 'load', resizeIframe)
                    .on(doc, 'readystatechange DOMContentLoaded', resizeIframe);
                if (typeof ResizeObserver === 'function') {
                    var resizeObserver_1 = new ResizeObserver(resizeIframe);
                    resizeObserver_1.observe(doc.body);
                    editor.e.on('beforeDestruct', function () {
                        resizeObserver_1.unobserve(doc.body);
                    });
                }
            }
            if (doc.documentElement) {
                editor.e
                    .on(doc.documentElement, 'mousedown touchend', function () {
                    if (!editor.s.isFocused()) {
                        editor.s.focus();
                        if (editor.editor === doc.body) {
                            editor.s.setCursorIn(doc.body);
                        }
                    }
                })
                    .on(editor.ew, 'mousedown touchstart keydown keyup touchend click mouseup mousemove scroll', function (e) {
                    var _a;
                    (_a = editor.events) === null || _a === void 0 ? void 0 : _a.fire(editor.ow, e);
                });
            }
            return false;
        };
        return (0, helpers_1.callPromise)(result, init);
    });
}
exports.iframe = iframe;
global_1.pluginSystem.add('iframe', iframe);


/***/ }),

/***/ 18226:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.imageProcessor = {
    replaceDataURIToBlobIdInView: true
};


/***/ }),

/***/ 92575:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.imageProcessor = void 0;
var tslib_1 = __webpack_require__(20255);
var helpers_1 = __webpack_require__(40332);
var plugin_1 = __webpack_require__(57549);
var decorators_1 = __webpack_require__(43441);
var constants_1 = __webpack_require__(86893);
var global_1 = __webpack_require__(17332);
__webpack_require__(18226);
var JODIT_IMAGE_PROCESSOR_BINDED = '__jodit_imageprocessor_binded';
var JODIT_IMAGE_BLOB_ID = JODIT_IMAGE_PROCESSOR_BINDED + 'blob-id';
var imageProcessor = (function (_super) {
    tslib_1.__extends(imageProcessor, _super);
    function imageProcessor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    imageProcessor.prototype.afterInit = function (jodit) { };
    imageProcessor.prototype.beforeDestruct = function (jodit) {
        var e_1, _a;
        var list = jodit.buffer.get(JODIT_IMAGE_BLOB_ID);
        if (list) {
            var keys = Object.keys(list);
            try {
                for (var keys_1 = tslib_1.__values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {
                    var uri = keys_1_1.value;
                    URL.revokeObjectURL(uri);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            jodit.buffer.delete(JODIT_IMAGE_BLOB_ID);
        }
    };
    imageProcessor.prototype.onAfterGetValueFromEditor = function (data, consumer) {
        if (consumer !== constants_1.SOURCE_CONSUMER) {
            return this.onBeforeSetElementValue(data);
        }
    };
    imageProcessor.prototype.onBeforeSetElementValue = function (data) {
        var e_2, _a;
        var editor = this.jodit;
        if (!editor.o.imageProcessor.replaceDataURIToBlobIdInView) {
            return;
        }
        var list = editor.buffer.get(JODIT_IMAGE_BLOB_ID);
        if (list) {
            var keys = Object.keys(list);
            try {
                for (var keys_2 = tslib_1.__values(keys), keys_2_1 = keys_2.next(); !keys_2_1.done; keys_2_1 = keys_2.next()) {
                    var uri = keys_2_1.value;
                    while (data.value.includes(uri)) {
                        data.value = data.value.replace(uri, list[uri]);
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (keys_2_1 && !keys_2_1.done && (_a = keys_2.return)) _a.call(keys_2);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    };
    imageProcessor.prototype.afterChange = function (data) {
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            var editor;
            return tslib_1.__generator(this, function (_a) {
                editor = this.jodit;
                if (!editor.editor) {
                    return [2];
                }
                (0, helpers_1.$$)('img', editor.editor).forEach(function (elm) {
                    if (!(0, helpers_1.dataBind)(elm, JODIT_IMAGE_PROCESSOR_BINDED)) {
                        (0, helpers_1.dataBind)(elm, JODIT_IMAGE_PROCESSOR_BINDED, true);
                        if (!elm.complete) {
                            editor.e.on(elm, 'load', function ElementOnLoad() {
                                var _a;
                                !editor.isInDestruct && ((_a = editor.e) === null || _a === void 0 ? void 0 : _a.fire('resize'));
                                editor.e.off(elm, 'load', ElementOnLoad);
                            });
                        }
                        if (elm.src && /^data:/.test(elm.src)) {
                            replaceDataURIToBlobUUID(editor, elm);
                        }
                        editor.e.on(elm, 'mousedown touchstart', function () {
                            editor.s.select(elm);
                        });
                    }
                });
                return [2];
            });
        });
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)(':afterGetValueFromEditor')
    ], imageProcessor.prototype, "onAfterGetValueFromEditor", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':beforeSetElementValue')
    ], imageProcessor.prototype, "onBeforeSetElementValue", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)([':change', ':afterInit', ':changePlace']),
        (0, decorators_1.debounce)()
    ], imageProcessor.prototype, "afterChange", null);
    return imageProcessor;
}(plugin_1.Plugin));
exports.imageProcessor = imageProcessor;
function replaceDataURIToBlobUUID(editor, elm) {
    if (!editor.o.imageProcessor.replaceDataURIToBlobIdInView) {
        return;
    }
    if (typeof ArrayBuffer === 'undefined' || typeof URL === 'undefined') {
        return;
    }
    var dataUri = elm.src, blob = dataURItoBlob(dataUri);
    elm.src = URL.createObjectURL(blob);
    editor.e.fire('internalUpdate');
    var buffer = editor.buffer;
    var list = buffer.get(JODIT_IMAGE_BLOB_ID) || {};
    list[elm.src] = dataUri;
    editor.buffer.set(JODIT_IMAGE_BLOB_ID, list);
}
function dataURItoBlob(dataURI) {
    var byteString = atob(dataURI.split(',')[1]);
    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
    var ab = new ArrayBuffer(byteString.length);
    var ia = new Uint8Array(ab);
    for (var i = 0; i < byteString.length; i++) {
        ia[i] = byteString.charCodeAt(i);
    }
    return new Blob([ab], { type: mimeString });
}
global_1.pluginSystem.add('imageProcessor', imageProcessor);


/***/ }),

/***/ 1601:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.image = {
    dialogWidth: 600,
    openOnDblClick: true,
    editSrc: true,
    useImageEditor: true,
    editTitle: true,
    editAlt: true,
    editLink: true,
    editSize: true,
    editBorderRadius: true,
    editMargins: true,
    editClass: true,
    availableClasses: [],
    editStyle: true,
    editId: true,
    editAlign: true,
    showPreview: true,
    selectImageAfterClose: true
};


/***/ }),

/***/ 15747:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.imageProperties = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(9947);
var modules_1 = __webpack_require__(87837);
var helpers_1 = __webpack_require__(40332);
var widget_1 = __webpack_require__(718);
var button_1 = __webpack_require__(96516);
var decorators_1 = __webpack_require__(43441);
var image_editor_1 = __webpack_require__(35503);
var global_1 = __webpack_require__(17332);
var form_1 = __webpack_require__(49391);
var main_tab_1 = __webpack_require__(27506);
var position_tab_1 = __webpack_require__(50109);
__webpack_require__(1601);
var normalSizeToString = function (value) {
    value = (0, helpers_1.trim)(value);
    return /^[0-9]+$/.test(value) ? value + 'px' : value;
};
var normalSizeFromString = function (value) {
    return /^[-+]?[0-9.]+px$/.test(value.toString())
        ? parseFloat(value.toString())
        : value;
};
var imageProperties = (function (_super) {
    tslib_1.__extends(imageProperties, _super);
    function imageProperties() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            image: new Image(),
            get ratio() {
                return this.image.naturalWidth / this.image.naturalHeight || 1;
            },
            sizeIsLocked: true,
            marginIsLocked: true
        };
        _this.activeTabState = {
            __activeTab: 'Image'
        };
        return _this;
    }
    imageProperties.prototype.onChangeMarginIsLocked = function () {
        var _this = this;
        if (!this.form) {
            return;
        }
        var _a = (0, helpers_1.refs)(this.form), marginRight = _a.marginRight, marginBottom = _a.marginBottom, marginLeft = _a.marginLeft, lockMargin = _a.lockMargin;
        [marginRight, marginBottom, marginLeft].forEach(function (elm) {
            (0, helpers_1.attr)(elm, 'disabled', _this.state.marginIsLocked || null);
        });
        lockMargin.innerHTML = modules_1.Icon.get(this.state.marginIsLocked ? 'lock' : 'unlock');
    };
    imageProperties.prototype.onChangeSizeIsLocked = function () {
        if (!this.form) {
            return;
        }
        var _a = (0, helpers_1.refs)(this.form), lockSize = _a.lockSize, imageWidth = _a.imageWidth;
        lockSize.innerHTML = modules_1.Icon.get(this.state.sizeIsLocked ? 'lock' : 'unlock');
        lockSize.classList.remove('jodit-properties__lock');
        lockSize.classList.remove('jodit-properties__unlock');
        lockSize.classList.add(this.state.sizeIsLocked
            ? 'jodit-properties__lock'
            : 'jodit-properties__unlock');
        this.j.e.fire(imageWidth, 'change');
    };
    imageProperties.prototype.open = function () {
        this.makeForm();
        this.activeTabState.__activeTab = 'Image';
        this.j.e.fire('hidePopup');
        (0, helpers_1.markOwner)(this.j, this.dialog.container);
        this.state.marginIsLocked = true;
        this.state.sizeIsLocked = true;
        this.onChangeMarginIsLocked();
        this.onChangeSizeIsLocked();
        this.updateValues();
        this.dialog.open().setModal(true).setPosition();
        return false;
    };
    imageProperties.prototype.makeForm = function () {
        var _this = this;
        if (this.dialog) {
            return;
        }
        this.dialog = this.j.dlg({
            minWidth: Math.min(400, screen.width),
            minHeight: 590,
            buttons: ['fullsize', 'dialog.close']
        });
        var editor = this.j, opt = editor.o, i18n = editor.i18n.bind(editor), buttons = {
            check: (0, button_1.Button)(editor, 'ok', 'Apply', 'primary'),
            remove: (0, button_1.Button)(editor, 'bin', 'Delete')
        };
        editor.e.on(this.dialog, 'afterClose', function () {
            if (_this.state.image.parentNode &&
                opt.image.selectImageAfterClose) {
                editor.s.select(_this.state.image);
            }
        });
        buttons.remove.onAction(function () {
            editor.s.removeNode(_this.state.image);
            _this.dialog.close();
        });
        var dialog = this.dialog;
        dialog.setHeader(i18n('Image properties'));
        var mainForm = (0, form_1.form)(editor);
        this.form = mainForm;
        dialog.setContent(mainForm);
        var tabsBox = (0, helpers_1.refs)(this.form).tabsBox;
        if (tabsBox) {
            tabsBox.appendChild((0, widget_1.TabsWidget)(editor, [
                { name: 'Image', content: (0, main_tab_1.mainTab)(editor) },
                { name: 'Advanced', content: (0, position_tab_1.positionTab)(editor) }
            ], this.activeTabState));
        }
        buttons.check.onAction(this.onApply);
        var _a = (0, helpers_1.refs)(this.form), changeImage = _a.changeImage, editImage = _a.editImage;
        editor.e.on(changeImage, 'click', this.openImagePopup);
        if (opt.image.useImageEditor) {
            editor.e.on(editImage, 'click', this.openImageEditor);
        }
        var _b = (0, helpers_1.refs)(mainForm), lockSize = _b.lockSize, lockMargin = _b.lockMargin, imageWidth = _b.imageWidth, imageHeight = _b.imageHeight;
        if (lockSize) {
            editor.e.on(lockSize, 'click', function () {
                _this.state.sizeIsLocked = !_this.state.sizeIsLocked;
            });
        }
        editor.e.on(lockMargin, 'click', function (e) {
            _this.state.marginIsLocked = !_this.state.marginIsLocked;
            e.preventDefault();
        });
        var changeSizes = function (event) {
            if (!(0, helpers_1.isNumeric)(imageWidth.value) || !(0, helpers_1.isNumeric)(imageHeight.value)) {
                return;
            }
            var w = parseFloat(imageWidth.value), h = parseFloat(imageHeight.value);
            if (event.target === imageWidth) {
                imageHeight.value = Math.round(w / _this.state.ratio).toString();
            }
            else {
                imageWidth.value = Math.round(h * _this.state.ratio).toString();
            }
        };
        editor.e.on([imageWidth, imageHeight], 'change keydown mousedown paste', function (event) {
            if (!_this.state.sizeIsLocked) {
                return;
            }
            editor.async.setTimeout(changeSizes.bind(_this, event), {
                timeout: editor.defaultTimeout,
                label: 'image-properties-changeSize'
            });
        });
        dialog.setFooter([buttons.remove, buttons.check]);
        dialog.setSize(this.j.o.image.dialogWidth);
    };
    imageProperties.prototype.updateValues = function () {
        var _this = this;
        var opt = this.j.o;
        var image = this.state.image;
        var _a = (0, helpers_1.refs)(this.form), marginTop = _a.marginTop, marginRight = _a.marginRight, marginBottom = _a.marginBottom, marginLeft = _a.marginLeft, lockMargin = _a.lockMargin, imageSrc = _a.imageSrc, id = _a.id, classes = _a.classes, align = _a.align, style = _a.style, imageTitle = _a.imageTitle, imageAlt = _a.imageAlt, borderRadius = _a.borderRadius, imageLink = _a.imageLink, imageWidth = _a.imageWidth, imageHeight = _a.imageHeight, imageLinkOpenInNewTab = _a.imageLinkOpenInNewTab, imageViewSrc = _a.imageViewSrc, lockSize = _a.lockSize;
        var updateLock = function () {
            lockMargin.checked = _this.state.marginIsLocked;
            lockSize.checked = _this.state.sizeIsLocked;
        }, updateAlign = function () {
            if (image.style.cssFloat &&
                ['left', 'right'].indexOf(image.style.cssFloat.toLowerCase()) !== -1) {
                align.value = (0, helpers_1.css)(image, 'float');
            }
            else {
                if ((0, helpers_1.css)(image, 'display') === 'block' &&
                    image.style.marginLeft === 'auto' &&
                    image.style.marginRight === 'auto') {
                    align.value = 'center';
                }
            }
        }, updateBorderRadius = function () {
            borderRadius.value = (parseInt(image.style.borderRadius || '0', 10) || '0').toString();
        }, updateId = function () {
            id.value = (0, helpers_1.attr)(image, 'id') || '';
        }, updateStyle = function () {
            style.value = (0, helpers_1.attr)(image, 'style') || '';
        }, updateClasses = function () {
            classes.value = ((0, helpers_1.attr)(image, 'class') || '').replace(/jodit_focused_image[\s]*/, '');
        }, updateMargins = function () {
            if (!opt.image.editMargins) {
                return;
            }
            var equal = true, wasEmptyField = false;
            [marginTop, marginRight, marginBottom, marginLeft].forEach(function (elm) {
                var id = (0, helpers_1.attr)(elm, 'data-ref') || '';
                var value = image.style.getPropertyValue((0, helpers_1.kebabCase)(id));
                if (!value) {
                    wasEmptyField = true;
                    elm.value = '';
                    return;
                }
                if (/^[0-9]+(px)?$/.test(value)) {
                    value = parseInt(value, 10);
                }
                elm.value = value.toString() || '';
                if ((wasEmptyField && elm.value) ||
                    (equal &&
                        id !== 'marginTop' &&
                        elm.value !== marginTop.value)) {
                    equal = false;
                }
            });
            _this.state.marginIsLocked = equal;
        }, updateSizes = function () {
            var width = (0, helpers_1.attr)(image, 'width') ||
                (0, helpers_1.css)(image, 'width', true) ||
                false, height = (0, helpers_1.attr)(image, 'height') ||
                (0, helpers_1.css)(image, 'height', true) ||
                false;
            imageWidth.value =
                width !== false
                    ? normalSizeFromString(width).toString()
                    : image.offsetWidth.toString();
            imageHeight.value =
                height !== false
                    ? normalSizeFromString(height).toString()
                    : image.offsetHeight.toString();
            _this.state.sizeIsLocked = (function () {
                if (!(0, helpers_1.isNumeric)(imageWidth.value) ||
                    !(0, helpers_1.isNumeric)(imageHeight.value)) {
                    return false;
                }
                var w = parseFloat(imageWidth.value), h = parseFloat(imageHeight.value);
                return Math.abs(w - h * _this.state.ratio) < 1;
            })();
        }, updateText = function () {
            imageTitle.value = (0, helpers_1.attr)(image, 'title') || '';
            imageAlt.value = (0, helpers_1.attr)(image, 'alt') || '';
            var a = modules_1.Dom.closest(image, 'a', _this.j.editor);
            if (a) {
                imageLink.value = (0, helpers_1.attr)(a, 'href') || '';
                imageLinkOpenInNewTab.checked =
                    (0, helpers_1.attr)(a, 'target') === '_blank';
            }
            else {
                imageLink.value = '';
                imageLinkOpenInNewTab.checked = false;
            }
        }, updateSrc = function () {
            imageSrc.value = (0, helpers_1.attr)(image, 'src') || '';
            if (imageViewSrc) {
                (0, helpers_1.attr)(imageViewSrc, 'src', (0, helpers_1.attr)(image, 'src') || '');
            }
        };
        updateLock();
        updateSrc();
        updateText();
        updateSizes();
        updateMargins();
        updateClasses();
        updateId();
        updateBorderRadius();
        updateAlign();
        updateStyle();
    };
    imageProperties.prototype.onApply = function () {
        var _a = (0, helpers_1.refs)(this.form), style = _a.style, imageSrc = _a.imageSrc, borderRadius = _a.borderRadius, imageTitle = _a.imageTitle, imageAlt = _a.imageAlt, imageLink = _a.imageLink, imageWidth = _a.imageWidth, imageHeight = _a.imageHeight, marginTop = _a.marginTop, marginRight = _a.marginRight, marginBottom = _a.marginBottom, marginLeft = _a.marginLeft, imageLinkOpenInNewTab = _a.imageLinkOpenInNewTab, align = _a.align, classes = _a.classes, id = _a.id;
        var opt = this.j.o;
        var image = this.state.image;
        if (opt.image.editStyle) {
            (0, helpers_1.attr)(image, 'style', style.value || null);
        }
        if (imageSrc.value) {
            (0, helpers_1.attr)(image, 'src', imageSrc.value);
        }
        else {
            modules_1.Dom.safeRemove(image);
            this.dialog.close();
            return;
        }
        if (borderRadius.value !== '0' && /^[0-9]+$/.test(borderRadius.value)) {
            image.style.borderRadius = borderRadius.value + 'px';
        }
        else {
            image.style.borderRadius = '';
        }
        (0, helpers_1.attr)(image, 'title', imageTitle.value || null);
        (0, helpers_1.attr)(image, 'alt', imageAlt.value || null);
        var link = modules_1.Dom.closest(image, 'a', this.j.editor);
        if (imageLink.value) {
            if (!link) {
                link = modules_1.Dom.wrap(image, 'a', this.j.createInside);
            }
            (0, helpers_1.attr)(link, 'href', imageLink.value);
            (0, helpers_1.attr)(link, 'target', imageLinkOpenInNewTab.checked ? '_blank' : null);
        }
        else {
            if (link && link.parentNode) {
                link.parentNode.replaceChild(image, link);
            }
        }
        if (imageWidth.value !== image.offsetWidth.toString() ||
            imageHeight.value !== image.offsetHeight.toString()) {
            var updatedtWidth = (0, helpers_1.trim)(imageWidth.value)
                ? normalSizeToString(imageWidth.value)
                : null;
            var updatedHeight = (0, helpers_1.trim)(imageHeight.value)
                ? normalSizeToString(imageHeight.value)
                : null;
            (0, helpers_1.css)(image, {
                width: updatedtWidth,
                height: updatedHeight
            });
            (0, helpers_1.attr)(image, 'width', (0, helpers_1.attr)(image, 'width') ? updatedtWidth : null);
            (0, helpers_1.attr)(image, 'height', (0, helpers_1.attr)(image, 'height') ? updatedHeight : null);
        }
        var margins = [marginTop, marginRight, marginBottom, marginLeft];
        if (opt.image.editMargins) {
            if (!this.state.marginIsLocked) {
                margins.forEach(function (margin) {
                    var side = (0, helpers_1.attr)(margin, 'data-ref') || '';
                    (0, helpers_1.css)(image, side, normalSizeToString(margin.value));
                });
            }
            else {
                (0, helpers_1.css)(image, 'margin', normalSizeToString(marginTop.value));
            }
        }
        if (opt.image.editClass) {
            (0, helpers_1.attr)(image, 'class', classes.value || null);
        }
        if (opt.image.editId) {
            (0, helpers_1.attr)(image, 'id', id.value || null);
        }
        if (opt.image.editAlign) {
            (0, helpers_1.hAlignElement)(image, align.value);
        }
        this.j.synchronizeValues();
        this.dialog.close();
    };
    imageProperties.prototype.openImageEditor = function () {
        var _this = this;
        var url = (0, helpers_1.attr)(this.state.image, 'src') || '', a = this.j.c.element('a'), loadExternal = function () {
            if (a.host !== location.host) {
                _this.j.confirm('You can only edit your own images. Download this image on the host?', function (yes) {
                    if (yes && _this.j.uploader) {
                        _this.j.uploader.uploadRemoteImage(a.href.toString(), function (resp) {
                            _this.j.alert('The image has been successfully uploaded to the host!', function () {
                                if ((0, helpers_1.isString)(resp.newfilename)) {
                                    (0, helpers_1.attr)(_this.state.image, 'src', resp.baseurl +
                                        resp.newfilename);
                                    _this.updateValues();
                                }
                            });
                        }, function (error) {
                            _this.j.alert('There was an error loading %s', error.message);
                        });
                    }
                });
                return;
            }
        };
        a.href = url;
        this.j.filebrowser.dataProvider
            .getPathByUrl(a.href.toString())
            .then(function (resp) {
            image_editor_1.openImageEditor.call(_this.j.filebrowser, a.href, resp.name, resp.path, resp.source, function () {
                var timestamp = new Date().getTime();
                (0, helpers_1.attr)(_this.state.image, 'src', url +
                    (url.indexOf('?') !== -1 ? '' : '?') +
                    '&_tmp=' +
                    timestamp.toString());
                _this.updateValues();
            }, function (error) {
                _this.j.alert(error.message);
            });
        })
            .catch(function (error) {
            _this.j.alert(error.message, loadExternal);
        });
    };
    imageProperties.prototype.openImagePopup = function (event) {
        var _this = this;
        var popup = new modules_1.Popup(this.j), changeImage = (0, helpers_1.refs)(this.form).changeImage;
        popup.setZIndex(this.dialog.getZIndex() + 1);
        popup
            .setContent((0, widget_1.FileSelectorWidget)(this.j, {
            upload: function (data) {
                if (data.files && data.files.length) {
                    (0, helpers_1.attr)(_this.state.image, 'src', data.baseurl + data.files[0]);
                }
                _this.updateValues();
                popup.close();
            },
            filebrowser: function (data) {
                if (data &&
                    (0, helpers_1.isArray)(data.files) &&
                    data.files.length) {
                    (0, helpers_1.attr)(_this.state.image, 'src', data.files[0]);
                    popup.close();
                    _this.updateValues();
                }
            }
        }, this.state.image, popup.close))
            .open(function () { return (0, helpers_1.position)(changeImage); });
        event.stopPropagation();
    };
    imageProperties.prototype.afterInit = function (editor) {
        var _this = this;
        var self = this;
        editor.e
            .on('afterConstructor changePlace', function () {
            editor.e
                .off(editor.editor, '.imageproperties')
                .on(editor.editor, 'dblclick.imageproperties', function (e) {
                var image = e.target;
                if (!modules_1.Dom.isTag(image, 'img')) {
                    return;
                }
                if (editor.o.image.openOnDblClick) {
                    if (_this.j.e.fire('openOnDblClick', image) ===
                        false) {
                        return;
                    }
                    self.state.image = image;
                    if (!editor.o.readonly) {
                        e.stopImmediatePropagation();
                        e.preventDefault();
                        self.open();
                    }
                }
                else {
                    e.stopImmediatePropagation();
                    editor.s.select(image);
                }
            });
        })
            .on('openImageProperties.imageproperties', function (image) {
            _this.state.image = image;
            _this.open();
        });
    };
    imageProperties.prototype.beforeDestruct = function (editor) {
        this.dialog && this.dialog.destruct();
        editor.e.off(editor.editor, '.imageproperties').off('.imageproperties');
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.marginIsLocked')
    ], imageProperties.prototype, "onChangeMarginIsLocked", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('state.sizeIsLocked')
    ], imageProperties.prototype, "onChangeSizeIsLocked", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], imageProperties.prototype, "onApply", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], imageProperties.prototype, "openImageEditor", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], imageProperties.prototype, "openImagePopup", null);
    return imageProperties;
}(modules_1.Plugin));
exports.imageProperties = imageProperties;
global_1.pluginSystem.add('imageProperties', imageProperties);


/***/ }),

/***/ 49391:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.form = void 0;
var icon_1 = __webpack_require__(77904);
function form(editor) {
    var _a = editor.o.image, showPreview = _a.showPreview, editSize = _a.editSize, gi = icon_1.Icon.get.bind(icon_1.Icon);
    return editor.c.fromHTML("<form class=\"jodit-properties\">\n\t\t<div class=\"jodit-grid jodit-grid_xs-column\">\n\t\t\t<div class=\"jodit_col-lg-2-5 jodit_col-xs-5-5\">\n\t\t\t\t<div class=\"jodit-properties_view_box\">\n\t\t\t\t\t<div style=\"".concat(!showPreview ? 'display:none' : '', "\" class=\"jodit-properties_image_view\">\n\t\t\t\t\t\t<img data-ref=\"imageViewSrc\" src=\"\" alt=\"\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style=\"").concat(!editSize ? 'display:none' : '', "\" class=\"jodit-form__group jodit-properties_image_sizes\">\n\t\t\t\t\t\t<input data-ref=\"imageWidth\" type=\"text\" class=\"jodit-input\"/>\n\t\t\t\t\t\t<a data-ref=\"lockSize\" class=\"jodit-properties__lock\">").concat(gi('lock'), "</a>\n\t\t\t\t\t\t<input data-ref=\"imageHeight\" type=\"text\" class=\"imageHeight jodit-input\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div data-ref=\"tabsBox\" class=\"jodit_col-lg-3-5 jodit_col-xs-5-5\"></div>\n\t\t</div>\n\t</form>"));
}
exports.form = form;


/***/ }),

/***/ 27506:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mainTab = void 0;
var icon_1 = __webpack_require__(77904);
function mainTab(editor) {
    var opt = editor.o, i18n = editor.i18n.bind(editor), gi = icon_1.Icon.get.bind(icon_1.Icon), hasFbUrl = opt.filebrowser.ajax.url || opt.uploader.url, hasEditor = opt.image.useImageEditor;
    return editor.c.fromHTML("<div style=\"".concat(!opt.image.editSrc ? 'display:none' : '', "\" class=\"jodit-form__group\">\n\t\t\t<label>").concat(i18n('Src'), "</label>\n\t\t\t<div class=\"jodit-input_group\">\n\t\t\t\t<input data-ref=\"imageSrc\" class=\"jodit-input\" type=\"text\"/>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"jodit-input_group-buttons\"\n\t\t\t\t\tstyle=\"").concat(hasFbUrl ? '' : 'display: none', "\"\n\t\t\t\t>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tdata-ref=\"changeImage\"\n\t\t\t\t\t\t\tclass=\"jodit-button\"\n\t\t\t\t\t\t>").concat(gi('image'), "</a>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tdata-ref=\"editImage\"\n\t\t\t\t\t\t\tclass=\"jodit-button\"\n\t\t\t\t\t\t\tstyle=\"").concat(hasEditor ? '' : 'display: none', "\"\n\t\t\t\t\t\t>").concat(gi('crop'), "</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div style=\"").concat(!opt.image.editTitle ? 'display:none' : '', "\" class=\"jodit-form__group\">\n\t\t\t<label>").concat(i18n('Title'), "</label>\n\t\t\t<input data-ref=\"imageTitle\" type=\"text\" class=\"jodit-input\"/>\n\t\t</div>\n\t\t<div style=\"").concat(!opt.image.editAlt ? 'display:none' : '', "\" class=\"jodit-form__group\">\n\t\t\t<label>").concat(i18n('Alternative'), "</label>\n\t\t\t<input data-ref=\"imageAlt\" type=\"text\" class=\"jodit-input\"/>\n\t\t</div>\n\t\t<div style=\"").concat(!opt.image.editLink ? 'display:none' : '', "\" class=\"jodit-form__group\">\n\t\t\t<label>").concat(i18n('Link'), "</label>\n\t\t\t<input data-ref=\"imageLink\" type=\"text\" class=\"jodit-input\"/>\n\t\t</div>\n\t\t<div style=\"").concat(!opt.image.editLink ? 'display:none' : '', "\" class=\"jodit-form__group\">\n\t\t\t<label class=\"jodit_vertical_middle\">\n\t\t\t\t<input data-ref=\"imageLinkOpenInNewTab\" type=\"checkbox\" class=\"jodit-checkbox\"/>\n\t\t\t\t<span>").concat(i18n('Open link in new tab'), "</span>\n\t\t\t</label>\n\t\t</div>"));
}
exports.mainTab = mainTab;


/***/ }),

/***/ 50109:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.positionTab = void 0;
var icon_1 = __webpack_require__(77904);
function positionTab(editor) {
    var opt = editor.o, i18n = editor.i18n.bind(editor), gi = icon_1.Icon.get.bind(icon_1.Icon);
    var classInput = [];
    if (opt.image.availableClasses.length > 0) {
        classInput.push('<select data-ref="classes" class="jodit-input jodit-select">');
        opt.image.availableClasses.forEach(function (item) {
            if (typeof item === 'string') {
                classInput.push("<option value=\"".concat(item, "\">").concat(item, "</option>"));
            }
            else {
                classInput.push("<option value=\"".concat(item[0], "\">").concat(item[1], "</option>"));
            }
        });
        classInput.push('</select>');
    }
    else {
        classInput.push('<input data-ref="classes" type="text" class="jodit-input"/>');
    }
    return editor.c.fromHTML("<div style=\"".concat(!opt.image.editMargins ? 'display:none' : '', "\" class=\"jodit-form__group\">\n\t\t\t<label>").concat(i18n('Margins'), "</label>\n\t\t\t<div class=\"jodit-grid jodit_vertical_middle\">\n\t\t\t\t<input class=\"jodit_col-lg-1-5 jodit-input\" data-ref=\"marginTop\" type=\"text\" placeholder=\"").concat(i18n('top'), "\"/>\n\t\t\t\t<a style=\"text-align: center;\" data-ref=\"lockMargin\" class=\"jodit-properties__lock jodit_col-lg-1-5\">").concat(gi('lock'), "</a>\n\t\t\t\t<input disabled=\"true\" class=\"jodit_col-lg-1-5 jodit-input\" data-ref=\"marginRight\" type=\"text\" placeholder=\"").concat(i18n('right'), "\"/>\n\t\t\t\t<input disabled=\"true\" class=\"jodit_col-lg-1-5 jodit-input\" data-ref=\"marginBottom\" type=\"text\" placeholder=\"").concat(i18n('bottom'), "\"/>\n\t\t\t\t<input disabled=\"true\" class=\"jodit_col-lg-1-5 jodit-input\" data-ref=\"marginLeft\" type=\"text\" placeholder=\"").concat(i18n('left'), "\"/>\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tstyle=\"").concat(!opt.image.editAlign ? 'display:none' : '', "\"\n\t\t\tclass=\"jodit-form__group\"\n\t\t>\n\t\t\t<label>").concat(i18n('Align'), "</label>\n\t\t\t<select data-ref=\"align\" class=\"jodit-select\">\n\t\t\t\t<option value=\"\">").concat(i18n('--Not Set--'), "</option>\n\t\t\t\t<option value=\"left\">").concat(i18n('Left'), "</option>\n\t\t\t\t<option value=\"center\">").concat(i18n('Center'), "</option>\n\t\t\t\t<option value=\"right\">").concat(i18n('Right'), "</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div style=\"").concat(!opt.image.editStyle ? 'display:none' : '', "\" class=\"jodit-form__group\">\n\t\t\t<label>").concat(i18n('Styles'), "</label>\n\t\t\t<input data-ref=\"style\" type=\"text\" class=\"jodit-input\"/>\n\t\t</div>\n\t\t<div style=\"").concat(!opt.image.editClass ? 'display:none' : '', "\" class=\"jodit-form__group\">\n\t\t\t<label>").concat(i18n('Classes'), "</label>\n\t\t\t").concat(classInput.join(''), "\n\t\t</div>\n\t\t<div style=\"").concat(!opt.image.editId ? 'display:none' : '', "\" class=\"jodit-form__group\">\n\t\t\t<label>Id</label>\n\t\t\t<input data-ref=\"id\" type=\"text\" class=\"jodit-input\"/>\n\t\t</div>\n\t\t<div\n\t\t\tstyle=\"").concat(!opt.image.editBorderRadius ? 'display:none' : '', "\"\n\t\t\tclass=\"jodit-form__group\"\n\t\t>\n\t\t\t<label>").concat(i18n('Border radius'), "</label>\n\t\t\t\t<input data-ref=\"borderRadius\" type=\"number\" class=\"jodit-input\"/>\n\t\t</div>"));
}
exports.positionTab = positionTab;


/***/ }),

/***/ 67547:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.image = void 0;
var tslib_1 = __webpack_require__(20255);
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var widget_1 = __webpack_require__(718);
var config_1 = __webpack_require__(93166);
var global_1 = __webpack_require__(17332);
var icon_1 = __webpack_require__(77904);
icon_1.Icon.set('image', __webpack_require__(53477));
config_1.Config.prototype.controls.image = {
    popup: function (editor, current, ignore, close) {
        var sourceImage = null;
        if (current &&
            !dom_1.Dom.isText(current) &&
            dom_1.Dom.isHTMLElement(current) &&
            (dom_1.Dom.isTag(current, 'img') || (0, helpers_1.$$)('img', current).length)) {
            sourceImage = dom_1.Dom.isTag(current, 'img')
                ? current
                : (0, helpers_1.$$)('img', current)[0];
        }
        editor.s.save();
        return (0, widget_1.FileSelectorWidget)(editor, {
            filebrowser: function (data) {
                editor.s.restore();
                data.files &&
                    data.files.forEach(function (file) {
                        return editor.s.insertImage(data.baseurl + file, null, editor.o.imageDefaultWidth);
                    });
                close();
            },
            upload: true,
            url: function (url, text) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
                var image;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            editor.s.restore();
                            if (/^[a-z\d_-]+(\.[a-z\d_-]+)+/i.test(url)) {
                                url = '//' + url;
                            }
                            image = sourceImage || editor.createInside.element('img');
                            image.setAttribute('src', url);
                            image.setAttribute('alt', text);
                            if (!!sourceImage) return [3, 2];
                            return [4, editor.s.insertImage(image, null, editor.o.imageDefaultWidth)];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2:
                            close();
                            return [2];
                    }
                });
            }); }
        }, sourceImage, close);
    },
    tags: ['img'],
    tooltip: 'Insert Image'
};
function image(editor) {
    editor.registerButton({
        name: 'image',
        group: 'media'
    });
}
exports.image = image;
global_1.pluginSystem.add('image', image);


/***/ }),

/***/ 2916:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var dom_1 = __webpack_require__(64968);
var icon_1 = __webpack_require__(77904);
var helpers_1 = __webpack_require__(26011);
icon_1.Icon.set('indent', __webpack_require__(90053)).set('outdent', __webpack_require__(72230));
config_1.Config.prototype.controls.indent = {
    tooltip: 'Increase Indent'
};
config_1.Config.prototype.controls.outdent = {
    isDisabled: function (editor) {
        var current = editor.s.current();
        if (current) {
            var currentBox = dom_1.Dom.closest(current, dom_1.Dom.isBlock, editor.editor);
            if (currentBox) {
                var arrow = (0, helpers_1.getKey)(editor.o.direction, currentBox);
                return (!currentBox.style[arrow] ||
                    parseInt(currentBox.style[arrow], 10) <= 0);
            }
        }
        return true;
    },
    tooltip: 'Decrease Indent'
};
config_1.Config.prototype.indentMargin = 10;


/***/ }),

/***/ 26011:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getKey = void 0;
var dom_1 = __webpack_require__(24263);
var getKey = function (direction, box) {
    return "".concat(dom_1.Dom.isCell(box) ? 'padding' : 'margin').concat(direction === 'rtl' ? 'Right' : 'Left');
};
exports.getKey = getKey;


/***/ }),

/***/ 71838:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.indent = void 0;
var constants_1 = __webpack_require__(86893);
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var global_1 = __webpack_require__(17332);
__webpack_require__(2916);
var helpers_2 = __webpack_require__(26011);
function indent(editor) {
    editor
        .registerButton({
        name: 'indent',
        group: 'indent'
    })
        .registerButton({
        name: 'outdent',
        group: 'indent'
    });
    var callback = function (command) {
        var processedElements = [];
        editor.s.eachSelection(function (current) {
            editor.s.save();
            var currentBox = current
                ? dom_1.Dom.up(current, dom_1.Dom.isBlock, editor.editor)
                : false;
            var enter = editor.o.enter;
            if (!currentBox && current) {
                currentBox = dom_1.Dom.wrapInline(current, enter !== constants_1.BR ? enter : constants_1.PARAGRAPH, editor);
            }
            if (!currentBox) {
                editor.s.restore();
                return false;
            }
            var alreadyIndented = processedElements.includes(currentBox);
            if (currentBox && !alreadyIndented) {
                var key = (0, helpers_2.getKey)(editor.o.direction, currentBox);
                processedElements.push(currentBox);
                var value = currentBox.style[key]
                    ? parseInt(currentBox.style[key], 10)
                    : 0;
                value +=
                    editor.o.indentMargin * (command === 'outdent' ? -1 : 1);
                currentBox.style[key] = value > 0 ? value + 'px' : '';
                if (!(0, helpers_1.attr)(currentBox, 'style')) {
                    (0, helpers_1.attr)(currentBox, 'style', null);
                }
            }
            editor.s.restore();
        });
        editor.synchronizeValues();
        return false;
    };
    editor.registerCommand('indent', {
        exec: callback,
        hotkeys: ['ctrl+]', 'cmd+]']
    });
    editor.registerCommand('outdent', {
        exec: callback,
        hotkeys: ['ctrl+[', 'cmd+[']
    });
}
exports.indent = indent;
global_1.pluginSystem.add('indent', indent);


/***/ }),

/***/ 70022:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
__webpack_require__(55692);
__webpack_require__(66031);
__webpack_require__(91241);
__webpack_require__(87565);
__webpack_require__(60894);
__webpack_require__(90302);
__webpack_require__(92138);
__webpack_require__(88412);
__webpack_require__(79308);
__webpack_require__(19268);
__webpack_require__(30598);
__webpack_require__(33122);
__webpack_require__(10135);
__webpack_require__(66994);
__webpack_require__(54798);
__webpack_require__(12908);
__webpack_require__(65123);
__webpack_require__(83228);
__webpack_require__(43889);
__webpack_require__(93300);
__webpack_require__(67547);
__webpack_require__(92575);
__webpack_require__(15747);
__webpack_require__(71838);
__webpack_require__(54752);
__webpack_require__(54452);
__webpack_require__(46324);
__webpack_require__(27738);
__webpack_require__(61421);
__webpack_require__(27582);
__webpack_require__(76303);
__webpack_require__(19806);
__webpack_require__(52598);
__webpack_require__(19483);
__webpack_require__(15428);
__webpack_require__(47224);
__webpack_require__(83211);
__webpack_require__(88297);
__webpack_require__(72930);
__webpack_require__(51197);
__webpack_require__(2327);
__webpack_require__(47608);
__webpack_require__(90523);
__webpack_require__(69257);
__webpack_require__(14889);
__webpack_require__(95323);
__webpack_require__(37458);
__webpack_require__(71003);
__webpack_require__(86030);
__webpack_require__(17002);
__webpack_require__(1557);
__webpack_require__(82808);
__webpack_require__(48560);
__webpack_require__(32246);
__webpack_require__(45842);
__webpack_require__(23308);
__webpack_require__(19889);
__webpack_require__(20728);
__webpack_require__(96899);
__webpack_require__(18238);


/***/ }),

/***/ 35387:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.toolbarInline = true;
config_1.Config.prototype.toolbarInlineForSelection = false;
config_1.Config.prototype.toolbarInlineDisableFor = [];
config_1.Config.prototype.toolbarInlineDisabledButtons = ['source'];
icon_1.Icon.set('addcolumn', __webpack_require__(78321))
    .set('addrow', __webpack_require__(77654))
    .set('merge', __webpack_require__(43371))
    .set('th', __webpack_require__(52242))
    .set('splitg', __webpack_require__(44563))
    .set('splitv', __webpack_require__(53183))
    .set('th-list', __webpack_require__(18548));
config_1.Config.prototype.popup = {
    a: (__webpack_require__(27487)/* ["default"] */ .Z),
    img: (__webpack_require__(97425)["default"]),
    cells: (__webpack_require__(59500)/* ["default"] */ .Z),
    toolbar: (__webpack_require__(55350)/* ["default"] */ .Z),
    jodit: (__webpack_require__(66686)/* ["default"] */ .Z),
    iframe: (__webpack_require__(66686)/* ["default"] */ .Z),
    'jodit-media': (__webpack_require__(66686)/* ["default"] */ .Z),
    selection: [
        'bold',
        'underline',
        'italic',
        'ul',
        'ol',
        '\n',
        'outdent',
        'indent',
        'fontsize',
        'brush',
        'cut',
        '\n',
        'paragraph',
        'link',
        'align',
        'dots'
    ]
};


/***/ }),

/***/ 27487:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
__webpack_unused_export__ = ({ value: true });
var utils_1 = __webpack_require__(76502);
exports.Z = [
    {
        name: 'eye',
        tooltip: 'Open link',
        exec: function (editor, current) {
            var href = (0, utils_1.attr)(current, 'href');
            if (current && href) {
                editor.ow.open(href);
            }
        }
    },
    {
        name: 'link',
        tooltip: 'Edit link',
        icon: 'pencil'
    },
    'unlink',
    'brush',
    'file'
];


/***/ }),

/***/ 59500:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
__webpack_unused_export__ = ({ value: true });
var checker_1 = __webpack_require__(10172);
var css_1 = __webpack_require__(26911);
var widget_1 = __webpack_require__(718);
var cmd = function (control) {
    return control.args && (0, checker_1.isString)(control.args[0])
        ? control.args[0].toLowerCase()
        : '';
};
exports.Z = [
    {
        name: 'brush',
        popup: function (editor, _, _1, close) {
            if (!(0, checker_1.isJoditObject)(editor)) {
                return;
            }
            var tableModule = editor.getInstance('Table', editor.o), selected = tableModule.getAllSelectedCells();
            if (!selected.length) {
                return false;
            }
            var makeColorPicker = function (key) {
                return (0, widget_1.ColorPickerWidget)(editor, function (value) {
                    selected.forEach(function (cell) {
                        (0, css_1.css)(cell, key, value);
                    });
                    editor.lock();
                    editor.synchronizeValues();
                    close();
                    editor.unlock();
                }, (0, css_1.css)(selected[0], key));
            };
            return (0, widget_1.TabsWidget)(editor, [
                {
                    name: 'Background',
                    content: makeColorPicker('background-color')
                },
                { name: 'Text', content: makeColorPicker('color') },
                { name: 'Border', content: makeColorPicker('border-color') }
            ]);
        },
        tooltip: 'Background'
    },
    {
        name: 'valign',
        list: ['Top', 'Middle', 'Bottom', 'Normal'],
        childTemplate: function (_, __, value) { return value; },
        exec: function (editor, table, _a) {
            var control = _a.control;
            var command = cmd(control);
            editor
                .getInstance('Table', editor.o)
                .getAllSelectedCells()
                .forEach(function (cell) {
                (0, css_1.css)(cell, 'vertical-align', command === 'normal' ? '' : command);
            });
        },
        tooltip: 'Vertical align'
    },
    {
        name: 'splitv',
        list: {
            tablesplitv: 'Split vertical',
            tablesplitg: 'Split horizontal'
        },
        tooltip: 'Split'
    },
    {
        name: 'align',
        icon: 'left'
    },
    '\n',
    {
        name: 'merge',
        command: 'tablemerge',
        tooltip: 'Merge'
    },
    {
        name: 'addcolumn',
        list: {
            tableaddcolumnbefore: 'Insert column before',
            tableaddcolumnafter: 'Insert column after'
        },
        exec: function (editor, table, _a) {
            var control = _a.control;
            if (!(0, checker_1.isJoditObject)(editor)) {
                return;
            }
            var command = cmd(control);
            editor.execCommand(command, false, table);
        },
        tooltip: 'Add column'
    },
    {
        name: 'addrow',
        list: {
            tableaddrowbefore: 'Insert row above',
            tableaddrowafter: 'Insert row below'
        },
        exec: function (editor, table, _a) {
            var control = _a.control;
            if (!(0, checker_1.isJoditObject)(editor)) {
                return;
            }
            var command = cmd(control);
            editor.execCommand(command, false, table);
        },
        tooltip: 'Add row'
    },
    {
        name: 'delete',
        icon: 'bin',
        list: {
            tablebin: 'Delete table',
            tablebinrow: 'Delete row',
            tablebincolumn: 'Delete column',
            tableempty: 'Empty cell'
        },
        exec: function (editor, table, _a) {
            var control = _a.control;
            if (!(0, checker_1.isJoditObject)(editor)) {
                return;
            }
            var command = cmd(control);
            editor.execCommand(command, false, table);
            editor.e.fire('hidePopup');
        },
        tooltip: 'Delete'
    }
];


/***/ }),

/***/ 66686:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
__webpack_unused_export__ = ({ value: true });
var img_1 = __webpack_require__(97425);
exports.Z = [
    {
        name: 'bin',
        tooltip: 'Delete',
        exec: function (editor, image) {
            image && editor.s.removeNode(image);
        }
    },
    img_1.align
];


/***/ }),

/***/ 97425:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.align = void 0;
var dom_1 = __webpack_require__(64968);
var is_string_1 = __webpack_require__(24421);
var css_1 = __webpack_require__(26911);
var align_1 = __webpack_require__(60303);
exports.align = {
    name: 'left',
    childTemplate: function (_, __, value) { return value; },
    list: ['Left', 'Right', 'Center', 'Normal'],
    exec: function (editor, elm, _a) {
        var control = _a.control;
        if (!dom_1.Dom.isTag(elm, ['img', 'jodit', 'jodit-media'])) {
            return;
        }
        var command = control.args && (0, is_string_1.isString)(control.args[0])
            ? control.args[0].toLowerCase()
            : '';
        if (!command) {
            return false;
        }
        (0, align_1.hAlignElement)(elm, command);
        if (dom_1.Dom.isTag(elm, ['jodit', 'jodit-media']) && elm.firstElementChild) {
            (0, align_1.hAlignElement)(elm.firstElementChild, command);
        }
        editor.synchronizeValues();
        editor.e.fire('recalcPositionPopup');
    },
    tooltip: 'Horizontal align'
};
exports["default"] = [
    {
        name: 'delete',
        icon: 'bin',
        tooltip: 'Delete',
        exec: function (editor, image) {
            image && editor.s.removeNode(image);
        }
    },
    {
        name: 'pencil',
        exec: function (editor, current) {
            var tagName = current.tagName.toLowerCase();
            if (tagName === 'img') {
                editor.e.fire('openImageProperties', current);
            }
        },
        tooltip: 'Edit'
    },
    {
        name: 'valign',
        list: ['Top', 'Middle', 'Bottom', 'Normal'],
        tooltip: 'Vertical align',
        exec: function (editor, image, _a) {
            var control = _a.control;
            if (!dom_1.Dom.isTag(image, 'img')) {
                return;
            }
            var command = control.args && (0, is_string_1.isString)(control.args[0])
                ? control.args[0].toLowerCase()
                : '';
            if (!command) {
                return false;
            }
            (0, css_1.css)(image, 'vertical-align', command === 'normal' ? '' : command);
            editor.e.fire('recalcPositionPopup');
        }
    },
    exports.align
];


/***/ }),

/***/ 55350:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
__webpack_unused_export__ = ({ value: true });
exports.Z = [
    'bold',
    'italic',
    '|',
    'ul',
    'ol',
    'eraser',
    '|',
    'fontsize',
    'brush',
    'paragraph',
    '---',
    'image',
    'table',
    '\n',
    'link',
    '|',
    'align',
    '|',
    'undo',
    'redo',
    '|',
    'copyformat',
    'fullsize',
    '---',
    'dots'
];


/***/ }),

/***/ 54752:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.inlinePopup = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(45109);
var plugin_1 = __webpack_require__(57549);
var factory_1 = __webpack_require__(81438);
var popup_1 = __webpack_require__(35799);
var helpers_1 = __webpack_require__(40332);
var dom_1 = __webpack_require__(64968);
var ui_1 = __webpack_require__(2074);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
__webpack_require__(35387);
var inlinePopup = (function (_super) {
    tslib_1.__extends(inlinePopup, _super);
    function inlinePopup() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.requires = ['select'];
        _this.type = null;
        _this.popup = new popup_1.Popup(_this.jodit, false);
        _this.toolbar = (0, factory_1.makeCollection)(_this.jodit, _this.popup);
        _this.snapRange = null;
        _this.elmsList = (0, helpers_1.keys)(_this.j.o.popup, false).filter(function (s) { return !_this.isExcludedTarget(s); });
        return _this;
    }
    inlinePopup.prototype.onClick = function (node) {
        var _this = this;
        var elements = this.elmsList, target = dom_1.Dom.isTag(node, 'img')
            ? node
            : dom_1.Dom.closest(node, elements, this.j.editor);
        if (target && this.canShowPopupForType(target.nodeName.toLowerCase())) {
            this.showPopup(function () { return (0, helpers_1.position)(target, _this.j); }, target.nodeName.toLowerCase(), target);
            return false;
        }
    };
    inlinePopup.prototype.showPopup = function (rect, type, target) {
        type = type.toLowerCase();
        if (!this.canShowPopupForType(type)) {
            return false;
        }
        if (this.type !== type || target !== this.previousTarget) {
            this.previousTarget = target;
            var data = this.j.o.popup[type];
            var content = void 0;
            if ((0, helpers_1.isFunction)(data)) {
                content = data(this.j, target, this.popup.close);
            }
            else {
                content = data;
            }
            if ((0, helpers_1.isArray)(content)) {
                this.toolbar.build(content, target);
                this.toolbar.buttonSize = this.j.o.toolbarButtonSize;
                content = this.toolbar.container;
            }
            this.popup.setContent(content);
            this.type = type;
        }
        this.popup.open(rect);
        return true;
    };
    inlinePopup.prototype.hidePopup = function (type) {
        if (!(0, helpers_1.isString)(type) || type === this.type) {
            this.popup.close();
        }
    };
    inlinePopup.prototype.onOutsideClick = function () {
        this.popup.close();
    };
    inlinePopup.prototype.canShowPopupForType = function (type) {
        var data = this.j.o.popup[type.toLowerCase()];
        if (this.j.o.readonly || !this.j.o.toolbarInline || !data) {
            return false;
        }
        return !this.isExcludedTarget(type);
    };
    inlinePopup.prototype.isExcludedTarget = function (type) {
        return (0, helpers_1.splitArray)(this.j.o.toolbarInlineDisableFor)
            .map(function (a) { return a.toLowerCase(); })
            .includes(type.toLowerCase());
    };
    inlinePopup.prototype.afterInit = function (jodit) {
        var _this = this;
        this.j.e
            .on('getDiffButtons.mobile', function (toolbar) {
            if (_this.toolbar === toolbar) {
                var names_1 = _this.toolbar.getButtonsNames();
                return (0, helpers_1.toArray)(jodit.registeredButtons)
                    .filter(function (btn) {
                    return !_this.j.o.toolbarInlineDisabledButtons.includes(btn.name);
                })
                    .filter(function (item) {
                    var name = (0, helpers_1.isString)(item) ? item : item.name;
                    return (name &&
                        name !== '|' &&
                        name !== '\n' &&
                        !names_1.includes(name));
                });
            }
        })
            .on('hidePopup', this.hidePopup)
            .on('showInlineToolbar', this.showInlineToolbar)
            .on('showPopup', function (elm, rect, type) {
            _this.showPopup(rect, type || ((0, helpers_1.isString)(elm) ? elm : elm.nodeName), (0, helpers_1.isString)(elm) ? undefined : elm);
        })
            .on('mousedown keydown', this.onSelectionStart)
            .on('change', function () {
            if (_this.popup.isOpened &&
                _this.previousTarget &&
                !_this.previousTarget.parentNode) {
                _this.hidePopup();
                _this.previousTarget = undefined;
            }
        })
            .on([this.j.ew, this.j.ow], 'mouseup keyup', this.onSelectionEnd);
        this.addListenersForElements();
    };
    inlinePopup.prototype.onSelectionStart = function () {
        this.snapRange = this.j.s.range.cloneRange();
    };
    inlinePopup.prototype.onSelectionEnd = function (e) {
        if (e &&
            e.target &&
            ui_1.UIElement.closestElement(e.target, popup_1.Popup)) {
            return;
        }
        var snapRange = this.snapRange, range = this.j.s.range;
        if (!snapRange ||
            range.collapsed ||
            range.startContainer !== snapRange.startContainer ||
            range.startOffset !== snapRange.startOffset ||
            range.endContainer !== snapRange.endContainer ||
            range.endOffset !== snapRange.endOffset) {
            this.onSelectionChange();
        }
    };
    inlinePopup.prototype.onSelectionChange = function () {
        if (!this.j.o.toolbarInlineForSelection) {
            return;
        }
        var type = 'selection', sel = this.j.s.sel, range = this.j.s.range;
        if ((sel === null || sel === void 0 ? void 0 : sel.isCollapsed) ||
            this.isSelectedTarget(range) ||
            this.tableModule.getAllSelectedCells().length) {
            if (this.type === type && this.popup.isOpened) {
                this.hidePopup();
            }
            return;
        }
        var node = this.j.s.current();
        if (!node) {
            return;
        }
        this.showPopup(function () { return range.getBoundingClientRect(); }, type);
    };
    inlinePopup.prototype.isSelectedTarget = function (r) {
        var sc = r.startContainer;
        return (dom_1.Dom.isElement(sc) &&
            sc === r.endContainer &&
            dom_1.Dom.isTag(sc.childNodes[r.startOffset], (0, helpers_1.keys)(this.j.o.popup, false)) &&
            r.startOffset === r.endOffset - 1);
    };
    Object.defineProperty(inlinePopup.prototype, "tableModule", {
        get: function () {
            return this.j.getInstance('Table', this.j.o);
        },
        enumerable: false,
        configurable: true
    });
    inlinePopup.prototype.beforeDestruct = function (jodit) {
        jodit.e
            .off('showPopup')
            .off([this.j.ew, this.j.ow], 'mouseup keyup', this.onSelectionEnd);
        this.removeListenersForElements();
    };
    inlinePopup.prototype._eventsList = function () {
        var el = this.elmsList;
        return el
            .map(function (e) { return (0, helpers_1.camelCase)("click_".concat(e)); })
            .concat(el.map(function (e) { return (0, helpers_1.camelCase)("touchstart_".concat(e)); }))
            .join(' ');
    };
    inlinePopup.prototype.addListenersForElements = function () {
        this.j.e.on(this._eventsList(), this.onClick);
    };
    inlinePopup.prototype.removeListenersForElements = function () {
        this.j.e.off(this._eventsList(), this.onClick);
    };
    inlinePopup.prototype.showInlineToolbar = function (bound) {
        var _this = this;
        this.showPopup(function () {
            if (bound) {
                return bound;
            }
            var range = _this.j.s.range;
            return range.getBoundingClientRect();
        }, 'toolbar');
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], inlinePopup.prototype, "onClick", null);
    tslib_1.__decorate([
        (0, decorators_1.wait)(function (ctx) { return !ctx.j.isLocked; })
    ], inlinePopup.prototype, "showPopup", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':clickEditor'),
        decorators_1.autobind
    ], inlinePopup.prototype, "hidePopup", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':outsideClick')
    ], inlinePopup.prototype, "onOutsideClick", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], inlinePopup.prototype, "onSelectionStart", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], inlinePopup.prototype, "onSelectionEnd", null);
    tslib_1.__decorate([
        (0, decorators_1.debounce)(function (ctx) { return ctx.defaultTimeout; })
    ], inlinePopup.prototype, "onSelectionChange", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], inlinePopup.prototype, "showInlineToolbar", null);
    return inlinePopup;
}(plugin_1.Plugin));
exports.inlinePopup = inlinePopup;
global_1.pluginSystem.add('inlinePopup', inlinePopup);


/***/ }),

/***/ 54452:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.justify = void 0;
var config_1 = __webpack_require__(93166);
var dom_1 = __webpack_require__(24263);
var css_1 = __webpack_require__(26911);
var align_1 = __webpack_require__(60303);
var global_1 = __webpack_require__(17332);
var icon_1 = __webpack_require__(77904);
icon_1.Icon.set('justify', __webpack_require__(87498));
config_1.Config.prototype.controls.align = {
    name: 'left',
    tooltip: 'Align',
    update: function (button, editor) {
        var control = button.control, current = editor.s.current();
        if (current) {
            var currentBox = dom_1.Dom.closest(current, dom_1.Dom.isBlock, editor.editor) ||
                editor.editor;
            var currentValue = (0, css_1.css)(currentBox, 'text-align').toString();
            if (control.defaultValue &&
                control.defaultValue.indexOf(currentValue) !== -1) {
                currentValue = 'left';
            }
            if (control.data &&
                control.data.currentValue !== currentValue &&
                control.list &&
                control.list.indexOf(currentValue) !== -1) {
                if (editor.o.textIcons) {
                    button.state.text = currentValue;
                }
                else {
                    button.state.icon.name = currentValue;
                }
                control.data.currentValue = currentValue;
            }
        }
    },
    isActive: function (editor, btn) {
        var current = editor.s.current();
        if (current && btn.defaultValue) {
            var currentBox = dom_1.Dom.closest(current, dom_1.Dom.isBlock, editor.editor) || editor.editor;
            return (btn.defaultValue.indexOf((0, css_1.css)(currentBox, 'text-align').toString()) === -1);
        }
        return false;
    },
    defaultValue: ['left', 'start', 'inherit'],
    data: {
        currentValue: 'left'
    },
    list: ['center', 'left', 'right', 'justify']
};
config_1.Config.prototype.controls.center = {
    command: 'justifyCenter',
    css: {
        'text-align': 'center'
    },
    tooltip: 'Align Center'
};
config_1.Config.prototype.controls.justify = {
    command: 'justifyFull',
    css: {
        'text-align': 'justify'
    },
    tooltip: 'Align Justify'
};
config_1.Config.prototype.controls.left = {
    command: 'justifyLeft',
    css: {
        'text-align': 'left'
    },
    tooltip: 'Align Left'
};
config_1.Config.prototype.controls.right = {
    command: 'justifyRight',
    css: {
        'text-align': 'right'
    },
    tooltip: 'Align Right'
};
function justify(editor) {
    editor.registerButton({
        name: 'align',
        group: 'indent'
    });
    var callback = function (command) {
        editor.s.focus();
        editor.s.eachSelection(function (current) {
            if (!current) {
                return;
            }
            var currentBox = dom_1.Dom.up(current, dom_1.Dom.isBlock, editor.editor);
            if (!currentBox) {
                currentBox = dom_1.Dom.wrapInline(current, editor.o.enterBlock, editor);
            }
            (0, align_1.alignElement)(command, currentBox);
        });
        return false;
    };
    editor.registerCommand('justifyfull', callback);
    editor.registerCommand('justifyright', callback);
    editor.registerCommand('justifyleft', callback);
    editor.registerCommand('justifycenter', callback);
}
exports.justify = justify;
global_1.pluginSystem.add('justify', justify);


/***/ }),

/***/ 46324:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keyArrowOutside = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var decorators_1 = __webpack_require__(43441);
var constants_1 = __webpack_require__(86893);
var dom_1 = __webpack_require__(24263);
var global_1 = __webpack_require__(17332);
var keyArrowOutside = (function (_super) {
    tslib_1.__extends(keyArrowOutside, _super);
    function keyArrowOutside() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    keyArrowOutside.prototype.afterInit = function (jodit) { };
    keyArrowOutside.prototype.beforeDestruct = function (jodit) { };
    keyArrowOutside.prototype.onKeyDownArrow = function (e) {
        var _a;
        if (e.key !== constants_1.KEY_RIGHT || !this.j.selection.isCollapsed()) {
            return;
        }
        var _b = this.j.selection.range, endContainer = _b.endContainer, endOffset = _b.endOffset;
        if (!dom_1.Dom.isText(endContainer)) {
            return;
        }
        if (((_a = endContainer.nodeValue) === null || _a === void 0 ? void 0 : _a.length) === endOffset) {
            var parentNode = endContainer.parentNode;
            if (dom_1.Dom.isInlineBlock(parentNode) &&
                !dom_1.Dom.findNotEmptyNeighbor(parentNode, false, this.j.editor)) {
                dom_1.Dom.after(parentNode, this.j.createInside.text(constants_1.NBSP_SPACE));
            }
        }
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)(':keydown')
    ], keyArrowOutside.prototype, "onKeyDownArrow", null);
    return keyArrowOutside;
}(plugin_1.Plugin));
exports.keyArrowOutside = keyArrowOutside;
global_1.pluginSystem.add('keyArrowOutside', keyArrowOutside);


/***/ }),

/***/ 19250:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.limitWords = false;
config_1.Config.prototype.limitChars = false;
config_1.Config.prototype.limitHTML = false;


/***/ }),

/***/ 27738:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.limit = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var constants_1 = __webpack_require__(86893);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
__webpack_require__(19250);
var limit = (function (_super) {
    tslib_1.__extends(limit, _super);
    function limit() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    limit.prototype.afterInit = function (jodit) {
        var _this = this;
        var _a = jodit.o, limitWords = _a.limitWords, limitChars = _a.limitChars;
        if (jodit && (limitWords || limitChars)) {
            var snapshot_1 = null;
            jodit.e
                .off('.limit')
                .on('beforePaste.limit', function () {
                snapshot_1 = jodit.history.snapshot.make();
            })
                .on('keydown.limit keyup.limit beforeEnter.limit', this.checkPreventKeyPressOrPaste)
                .on('change.limit', this.checkPreventChanging)
                .on('afterPaste.limit', function () {
                if (_this.__shouldDenyInput(true) && snapshot_1) {
                    jodit.history.snapshot.restore(snapshot_1);
                    jodit.e.fire('denyPaste.limit');
                    return false;
                }
            });
        }
    };
    limit.prototype.shouldPreventInsertHTML = function (event) {
        if (event &&
            (constants_1.COMMAND_KEYS.includes(event.key) || event.ctrlKey || event.metaKey)) {
            return false;
        }
        return this.__shouldDenyInput(false);
    };
    limit.prototype.__shouldDenyInput = function (strict) {
        var jodit = this.jodit;
        var _a = jodit.o, limitWords = _a.limitWords, limitChars = _a.limitChars;
        var text = jodit.o.limitHTML ? jodit.value : jodit.text;
        var words = this.__splitWords(text);
        if (limitWords && isGt(words.length, limitWords, strict)) {
            jodit.e.fire('denyWords.limit limit.limit');
            return true;
        }
        var should = Boolean(limitChars && isGt(words.join('').length, limitChars, strict));
        if (should) {
            jodit.e.fire('denyChars.limit limit.limit');
        }
        return should;
    };
    limit.prototype.checkPreventKeyPressOrPaste = function (event) {
        if (this.shouldPreventInsertHTML(event)) {
            return false;
        }
    };
    limit.prototype.checkPreventChanging = function (newValue, oldValue) {
        var jodit = this.jodit;
        if (this.__shouldDenyInput(true)) {
            jodit.value = oldValue;
        }
    };
    limit.prototype.__splitWords = function (text) {
        return text
            .replace((0, constants_1.INVISIBLE_SPACE_REG_EXP)(), '')
            .split((0, constants_1.SPACE_REG_EXP)())
            .filter(function (e) { return e.length; });
    };
    limit.prototype.beforeDestruct = function (jodit) {
        jodit.e.off('.limit');
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], limit.prototype, "checkPreventKeyPressOrPaste", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], limit.prototype, "checkPreventChanging", null);
    return limit;
}(plugin_1.Plugin));
exports.limit = limit;
function isGt(a, b, strict) {
    return strict ? a > b : a >= b;
}
global_1.pluginSystem.add('limit', limit);


/***/ }),

/***/ 29490:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var helpers_1 = __webpack_require__(40332);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.defaultLineHeight = null;
icon_1.Icon.set('line-height', __webpack_require__(7986));
config_1.Config.prototype.controls.lineHeight = {
    command: 'applyLineHeight',
    tags: ['ol'],
    tooltip: 'Line height',
    list: [1, 1.1, 1.2, 1.3, 1.4, 1.5, 2],
    exec: function (editor, event, _a) {
        var control = _a.control;
        return (0, helpers_1.memorizeExec)(editor, event, { control: control }, function (value) { return value; });
    }
};


/***/ }),

/***/ 26752:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.zh_tw = exports.zh_cn = exports.tr = exports.ru = exports.pt_br = exports.pl = exports.nl = exports.mn = exports.ko = exports.ja = exports.it = exports.id = exports.hu = exports.he = exports.fr = exports.fa = exports.es = exports.de = exports.cs_cz = exports.ar = void 0;
var ar = __webpack_require__(47762);
exports.ar = ar;
var cs_cz = __webpack_require__(97495);
exports.cs_cz = cs_cz;
var de = __webpack_require__(80131);
exports.de = de;
var es = __webpack_require__(1201);
exports.es = es;
var fa = __webpack_require__(89912);
exports.fa = fa;
var fr = __webpack_require__(3405);
exports.fr = fr;
var he = __webpack_require__(14129);
exports.he = he;
var hu = __webpack_require__(93729);
exports.hu = hu;
var id = __webpack_require__(16106);
exports.id = id;
var it = __webpack_require__(89690);
exports.it = it;
var ja = __webpack_require__(33216);
exports.ja = ja;
var ko = __webpack_require__(17282);
exports.ko = ko;
var mn = __webpack_require__(52841);
exports.mn = mn;
var nl = __webpack_require__(91761);
exports.nl = nl;
var pl = __webpack_require__(61675);
exports.pl = pl;
var pt_br = __webpack_require__(69709);
exports.pt_br = pt_br;
var ru = __webpack_require__(82591);
exports.ru = ru;
var tr = __webpack_require__(87649);
exports.tr = tr;
var zh_cn = __webpack_require__(60268);
exports.zh_cn = zh_cn;
var zh_tw = __webpack_require__(58214);
exports.zh_tw = zh_tw;


/***/ }),

/***/ 61421:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.lineHeight = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var helpers_1 = __webpack_require__(40332);
var decorators_1 = __webpack_require__(43441);
var dom_1 = __webpack_require__(24263);
var global_1 = __webpack_require__(17332);
__webpack_require__(29490);
var lineHeight = (function (_super) {
    tslib_1.__extends(lineHeight, _super);
    function lineHeight(jodit) {
        var _this = _super.call(this, jodit) || this;
        _this.buttons = [
            {
                name: 'lineHeight',
                group: 'font'
            }
        ];
        (0, global_1.extendLang)(__webpack_require__(26752));
        return _this;
    }
    lineHeight.prototype.afterInit = function (jodit) {
        (0, helpers_1.css)(jodit.editor, {
            lineHeight: jodit.o.defaultLineHeight
        });
        jodit.registerCommand('applyLineHeight', this.applyLineHeight);
    };
    lineHeight.prototype.applyLineHeight = function (ignore, ignoreA, value) {
        var _a = this.j, s = _a.s, c = _a.createInside, root = _a.editor, o = _a.o;
        if (!s.isFocused()) {
            s.focus();
        }
        s.save();
        var addStyle;
        var apply = function (node) {
            var parentBlock = dom_1.Dom.closest(node, dom_1.Dom.isBlock, root);
            if (!parentBlock) {
                parentBlock = dom_1.Dom.wrap(node, o.enter, c);
            }
            var previousValue = (0, helpers_1.css)(parentBlock, 'lineHeight');
            if (addStyle === undefined) {
                addStyle = previousValue.toString() !== value.toString();
            }
            (0, helpers_1.css)(parentBlock, 'lineHeight', addStyle ? value : null);
        };
        try {
            if (s.isCollapsed()) {
                var fake = c.fake();
                s.insertNode(fake, false, false);
                apply(fake);
                dom_1.Dom.safeRemove(fake);
            }
            else {
                s.eachSelection(apply);
            }
        }
        finally {
            s.restore();
        }
    };
    lineHeight.prototype.beforeDestruct = function (jodit) {
        (0, helpers_1.css)(jodit.editor, {
            lineHeight: null
        });
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], lineHeight.prototype, "applyLineHeight", null);
    return lineHeight;
}(plugin_1.Plugin));
exports.lineHeight = lineHeight;
global_1.pluginSystem.add('lineHeight', lineHeight);


/***/ }),

/***/ 56367:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var template_1 = __webpack_require__(54238);
var dom_1 = __webpack_require__(24263);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.link = {
    formTemplate: template_1.formTemplate,
    followOnDblClick: false,
    processVideoLink: true,
    processPastedLink: true,
    noFollowCheckbox: true,
    openInNewTabCheckbox: true,
    modeClassName: 'input',
    selectMultipleClassName: true,
    selectSizeClassName: 3,
    selectOptionsClassName: [],
    hotkeys: ['ctrl+k', 'cmd+k']
};
icon_1.Icon.set('link', __webpack_require__(23075)).set('unlink', __webpack_require__(10655));
config_1.Config.prototype.controls.unlink = {
    exec: function (editor, current) {
        var anchor = dom_1.Dom.closest(current, 'a', editor.editor);
        if (anchor) {
            dom_1.Dom.unwrap(anchor);
        }
        editor.synchronizeValues();
        editor.e.fire('hidePopup');
    },
    tooltip: 'Unlink'
};
config_1.Config.prototype.controls.link = {
    isActive: function (editor) {
        var current = editor.s.current();
        return Boolean(current && dom_1.Dom.closest(current, 'a', editor.editor));
    },
    popup: function (editor, current, self, close) {
        return editor.e.fire('generateLinkForm.link', current, close);
    },
    tags: ['a'],
    tooltip: 'Insert link'
};


/***/ }),

/***/ 27582:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.link = void 0;
var tslib_1 = __webpack_require__(20255);
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var plugin_1 = __webpack_require__(57549);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
__webpack_require__(56367);
var link = (function (_super) {
    tslib_1.__extends(link, _super);
    function link() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.buttons = [
            {
                name: 'link',
                group: 'insert'
            }
        ];
        return _this;
    }
    link.prototype.afterInit = function (jodit) {
        var _this = this;
        if (jodit.o.link.followOnDblClick) {
            jodit.e.on('dblclick.link', this.onDblClickOnLink);
        }
        if (jodit.o.link.processPastedLink) {
            jodit.e.on('processPaste.link', this.onProcessPasteLink);
        }
        jodit.e.on('generateLinkForm.link', this.__generateForm);
        jodit.registerCommand('openLinkDialog', {
            exec: function () {
                var dialog = jodit.dlg({
                    resizable: false
                });
                var htmlForm = _this.__generateForm(jodit.s.current(), function () {
                    dialog.close();
                });
                htmlForm.container.classList.add('jodit-dialog_alert');
                dialog.setContent(htmlForm);
                dialog.open();
                jodit.async.requestIdleCallback(function () {
                    var url_input = (0, helpers_1.refs)(htmlForm.container).url_input;
                    url_input === null || url_input === void 0 ? void 0 : url_input.focus();
                });
            },
            hotkeys: jodit.o.link.hotkeys
        });
    };
    link.prototype.onDblClickOnLink = function (e) {
        if (!dom_1.Dom.isTag(e.target, 'a')) {
            return;
        }
        var href = (0, helpers_1.attr)(e.target, 'href');
        if (href) {
            location.href = href;
            e.preventDefault();
        }
    };
    link.prototype.onProcessPasteLink = function (ignore, html) {
        var jodit = this.jodit;
        if (!(0, helpers_1.isURL)(html) || !jodit.o.link.processPastedLink) {
            return;
        }
        jodit.e.stopPropagation('processPaste');
        if (jodit.o.link.processVideoLink) {
            var embed = (0, helpers_1.convertMediaUrlToVideoEmbed)(html);
            if (embed !== html) {
                return jodit.createInside.fromHTML(embed);
            }
        }
        if (jodit.s.isCollapsed()) {
            var a = jodit.createInside.element('a');
            a.setAttribute('href', html);
            a.textContent = html;
            jodit.e.fire('applyLink', jodit, a, null);
            return a;
        }
        jodit.s.applyStyle(undefined, {
            element: 'a',
            attributes: {
                href: html
            }
        });
        return true;
    };
    link.prototype.__generateForm = function (current, close) {
        var jodit = this.jodit;
        var i18n = jodit.i18n.bind(jodit), _a = jodit.o.link, openInNewTabCheckbox = _a.openInNewTabCheckbox, noFollowCheckbox = _a.noFollowCheckbox, formTemplate = _a.formTemplate, formClassName = _a.formClassName, modeClassName = _a.modeClassName;
        var html = formTemplate(jodit), form = (0, helpers_1.isString)(html)
            ? jodit.c.fromHTML(html, {
                target_checkbox_box: openInNewTabCheckbox,
                nofollow_checkbox_box: noFollowCheckbox
            })
            : html, htmlForm = dom_1.Dom.isElement(form) ? form : form.container;
        var elements = (0, helpers_1.refs)(htmlForm), insert = elements.insert, unlink = elements.unlink, content_input_box = elements.content_input_box, _b = elements, target_checkbox = _b.target_checkbox, nofollow_checkbox = _b.nofollow_checkbox, url_input = _b.url_input, currentElement = current, isImageContent = dom_1.Dom.isImage(currentElement);
        var content_input = elements.content_input;
        var className_input = elements.className_input, className_select = elements.className_select;
        if (!content_input) {
            content_input = jodit.c.element('input', {
                type: 'hidden',
                ref: 'content_input'
            });
        }
        if (formClassName) {
            htmlForm.classList.add(formClassName);
        }
        if (isImageContent) {
            dom_1.Dom.hide(content_input_box);
        }
        var link;
        var getSelectionText = function () {
            return link
                ? link.innerText
                : (0, helpers_1.stripTags)(jodit.s.range.cloneContents(), jodit.ed);
        };
        if (current && dom_1.Dom.closest(current, 'a', jodit.editor)) {
            link = dom_1.Dom.closest(current, 'a', jodit.editor);
        }
        else {
            link = false;
        }
        if (!isImageContent && current) {
            content_input.value = getSelectionText();
        }
        if (link) {
            url_input.value = (0, helpers_1.attr)(link, 'href') || '';
            if (modeClassName) {
                switch (modeClassName) {
                    case 'input':
                        if (className_input) {
                            className_input.value = (0, helpers_1.attr)(link, 'class') || '';
                        }
                        break;
                    case 'select':
                        if (className_select) {
                            for (var i = 0; i < className_select.selectedOptions.length; i++) {
                                var option = className_select.options.item(i);
                                if (option) {
                                    option.selected = false;
                                }
                            }
                            var classNames = (0, helpers_1.attr)(link, 'class') || '';
                            classNames.split(' ').forEach(function (className) {
                                if (className) {
                                    for (var i = 0; i < className_select.options.length; i++) {
                                        var option = className_select.options.item(i);
                                        if ((option === null || option === void 0 ? void 0 : option.value) &&
                                            option.value === className) {
                                            option.selected = true;
                                        }
                                    }
                                }
                            });
                        }
                        break;
                }
            }
            if (openInNewTabCheckbox && target_checkbox) {
                target_checkbox.checked = (0, helpers_1.attr)(link, 'target') === '_blank';
            }
            if (noFollowCheckbox && nofollow_checkbox) {
                nofollow_checkbox.checked = (0, helpers_1.attr)(link, 'rel') === 'nofollow';
            }
            insert.textContent = i18n('Update');
        }
        else {
            dom_1.Dom.hide(unlink);
        }
        jodit.editor.normalize();
        var snapshot = jodit.history.snapshot.make();
        if (unlink) {
            jodit.e.on(unlink, 'click', function (e) {
                jodit.s.restore();
                jodit.history.snapshot.restore(snapshot);
                if (link) {
                    dom_1.Dom.unwrap(link);
                }
                jodit.synchronizeValues();
                close();
                e.preventDefault();
            });
        }
        var onSubmit = function () {
            if (!url_input.value.trim().length) {
                url_input.focus();
                url_input.classList.add('jodit_error');
                return false;
            }
            var links;
            jodit.s.restore();
            jodit.s.removeMarkers();
            jodit.editor.normalize();
            jodit.history.snapshot.restore(snapshot);
            var textWasChanged = getSelectionText() !== content_input.value.trim();
            var ci = jodit.createInside;
            if (!link) {
                if (!jodit.s.isCollapsed()) {
                    var node = jodit.s.current();
                    if (dom_1.Dom.isTag(node, ['img'])) {
                        links = [dom_1.Dom.wrap(node, 'a', ci)];
                    }
                    else {
                        links = jodit.s.wrapInTag('a');
                    }
                }
                else {
                    var a = ci.element('a');
                    jodit.s.insertNode(a, false, false);
                    links = [a];
                }
                links.forEach(function (link) { return jodit.s.select(link); });
            }
            else {
                links = [link];
            }
            links.forEach(function (a) {
                var _a;
                (0, helpers_1.attr)(a, 'href', url_input.value);
                if (modeClassName && (className_input !== null && className_input !== void 0 ? className_input : className_select)) {
                    if (modeClassName === 'input') {
                        if (className_input.value === '' &&
                            a.hasAttribute('class')) {
                            (0, helpers_1.attr)(a, 'class', null);
                        }
                        if (className_input.value !== '') {
                            (0, helpers_1.attr)(a, 'class', className_input.value);
                        }
                    }
                    else if (modeClassName === 'select') {
                        if (a.hasAttribute('class')) {
                            (0, helpers_1.attr)(a, 'class', null);
                        }
                        for (var i = 0; i < className_select.selectedOptions.length; i++) {
                            var className = (_a = className_select.selectedOptions.item(i)) === null || _a === void 0 ? void 0 : _a.value;
                            if (className) {
                                a.classList.add(className);
                            }
                        }
                    }
                }
                if (!isImageContent) {
                    var newContent = a.textContent;
                    if (content_input.value.trim().length) {
                        if (textWasChanged) {
                            newContent = content_input.value;
                        }
                    }
                    else {
                        newContent = url_input.value;
                    }
                    var content = a.textContent;
                    if (newContent !== content) {
                        a.textContent = newContent;
                    }
                }
                if (openInNewTabCheckbox && target_checkbox) {
                    (0, helpers_1.attr)(a, 'target', target_checkbox.checked ? '_blank' : null);
                }
                if (noFollowCheckbox && nofollow_checkbox) {
                    (0, helpers_1.attr)(a, 'rel', nofollow_checkbox.checked ? 'nofollow' : null);
                }
                jodit.e.fire('applyLink', jodit, a, form);
            });
            jodit.synchronizeValues();
            close();
            return false;
        };
        if (dom_1.Dom.isElement(form)) {
            jodit.e.on(form, 'submit', function (event) {
                event.preventDefault();
                event.stopImmediatePropagation();
                onSubmit();
                return false;
            });
        }
        else {
            form.onSubmit(onSubmit);
        }
        return form;
    };
    link.prototype.beforeDestruct = function (jodit) {
        jodit.e
            .off('generateLinkForm.link', this.__generateForm)
            .off('dblclick.link', this.onDblClickOnLink)
            .off('processPaste.link', this.onProcessPasteLink);
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], link.prototype, "onDblClickOnLink", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], link.prototype, "onProcessPasteLink", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], link.prototype, "__generateForm", null);
    return link;
}(plugin_1.Plugin));
exports.link = link;
global_1.pluginSystem.add('link', link);


/***/ }),

/***/ 54238:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.formTemplate = void 0;
var form_1 = __webpack_require__(95963);
var button_1 = __webpack_require__(96516);
var formTemplate = function (editor) {
    var _a = editor.o.link, openInNewTabCheckbox = _a.openInNewTabCheckbox, noFollowCheckbox = _a.noFollowCheckbox, modeClassName = _a.modeClassName, selectSizeClassName = _a.selectSizeClassName, selectMultipleClassName = _a.selectMultipleClassName, selectOptionsClassName = _a.selectOptionsClassName;
    return new form_1.UIForm(editor, [
        new form_1.UIBlock(editor, [
            new form_1.UIInput(editor, {
                name: 'url',
                type: 'text',
                ref: 'url_input',
                label: 'URL',
                placeholder: 'http://',
                required: true
            })
        ]),
        new form_1.UIBlock(editor, [
            new form_1.UIInput(editor, {
                name: 'content',
                ref: 'content_input',
                label: 'Text'
            })
        ], {
            ref: 'content_input_box'
        }),
        modeClassName
            ? new form_1.UIBlock(editor, [
                (function () {
                    if (modeClassName === 'input') {
                        return new form_1.UIInput(editor, {
                            name: 'className',
                            ref: 'className_input',
                            label: 'Class name'
                        });
                    }
                    if (modeClassName === 'select') {
                        return new form_1.UISelect(editor, {
                            name: 'className',
                            ref: 'className_select',
                            label: 'Class name',
                            size: selectSizeClassName,
                            multiple: selectMultipleClassName,
                            options: selectOptionsClassName
                        });
                    }
                    return null;
                })()
            ])
            : null,
        openInNewTabCheckbox
            ? new form_1.UICheckbox(editor, {
                name: 'target',
                ref: 'target_checkbox',
                label: 'Open in new tab'
            })
            : null,
        noFollowCheckbox
            ? new form_1.UICheckbox(editor, {
                name: 'nofollow',
                ref: 'nofollow_checkbox',
                label: 'No follow'
            })
            : null,
        new form_1.UIBlock(editor, [
            new button_1.UIButton(editor, {
                name: 'unlink',
                variant: 'default',
                text: 'Unlink'
            }),
            new button_1.UIButton(editor, {
                name: 'insert',
                type: 'submit',
                variant: 'primary',
                text: 'Insert'
            })
        ], {
            align: 'full'
        })
    ]);
};
exports.formTemplate = formTemplate;


/***/ }),

/***/ 11737:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.mediaFakeTag = 'jodit-media';
config_1.Config.prototype.mediaInFakeBlock = true;
config_1.Config.prototype.mediaBlocks = ['video', 'audio'];


/***/ }),

/***/ 76303:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.media = void 0;
var consts = __webpack_require__(86893);
var utils_1 = __webpack_require__(76502);
var global_1 = __webpack_require__(17332);
__webpack_require__(11737);
function media(editor) {
    var keyFake = 'jodit_fake_wrapper';
    var _a = editor.options, mediaFakeTag = _a.mediaFakeTag, mediaBlocks = _a.mediaBlocks, mediaInFakeBlock = _a.mediaInFakeBlock;
    var wrap = function (element) {
        var _a;
        if (element.parentNode &&
            (0, utils_1.attr)(element.parentNode, 'data-jodit_iframe_wrapper')) {
            element = element.parentNode;
        }
        else {
            var wrapper = editor.createInside.element(mediaFakeTag, (_a = {
                    'data-jodit-temp': 1,
                    contenteditable: false,
                    draggable: true
                },
                _a["data-".concat(keyFake)] = 1,
                _a));
            (0, utils_1.attr)(wrapper, 'style', (0, utils_1.attr)(element, 'style'));
            wrapper.style.display =
                element.style.display === 'inline-block'
                    ? 'inline-block'
                    : 'block';
            wrapper.style.width = element.offsetWidth + 'px';
            wrapper.style.height = element.offsetHeight + 'px';
            if (element.parentNode) {
                element.parentNode.insertBefore(wrapper, element);
            }
            wrapper.appendChild(element);
            element = wrapper;
        }
        editor.e
            .off(element, 'mousedown.select touchstart.select')
            .on(element, 'mousedown.select touchstart.select', function () {
            editor.s.setCursorAfter(element);
        });
    };
    if (mediaInFakeBlock) {
        editor.e
            .on('afterGetValueFromEditor', function (data) {
            var rxp = new RegExp("<".concat(mediaFakeTag, "[^>]+data-").concat(keyFake, "[^>]+>([^]+?)</").concat(mediaFakeTag, ">"), 'ig');
            if (rxp.test(data.value)) {
                data.value = data.value.replace(rxp, '$1');
            }
        })
            .on('change afterInit afterSetMode changePlace', editor.async.debounce(function () {
            if (!editor.isDestructed &&
                editor.getMode() !== consts.MODE_SOURCE) {
                (0, utils_1.$$)(mediaBlocks.join(','), editor.editor).forEach(function (elm) {
                    if (!(0, utils_1.dataBind)(elm, keyFake)) {
                        (0, utils_1.dataBind)(elm, keyFake, true);
                        wrap(elm);
                    }
                });
            }
        }, editor.defaultTimeout));
    }
}
exports.media = media;
global_1.pluginSystem.add('media', media);


/***/ }),

/***/ 8860:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var consts = __webpack_require__(86893);
var factory_1 = __webpack_require__(81438);
var helpers_1 = __webpack_require__(40332);
var collection_1 = __webpack_require__(72719);
config_1.Config.prototype.mobileTapTimeout = 300;
config_1.Config.prototype.toolbarAdaptive = true;
config_1.Config.prototype.controls.dots = {
    mode: consts.MODE_SOURCE + consts.MODE_WYSIWYG,
    popup: function (editor, current, control, close, button) {
        var store = control.data;
        if (store === undefined) {
            store = {
                toolbar: (0, factory_1.makeCollection)(editor),
                rebuild: function () {
                    var _a;
                    if (button) {
                        var buttons = editor.e.fire('getDiffButtons.mobile', button.closest(collection_1.ToolbarCollection));
                        if (buttons && store) {
                            store.toolbar.build((0, helpers_1.splitArray)(buttons));
                            var w = ((_a = editor.toolbar.firstButton) === null || _a === void 0 ? void 0 : _a.container.offsetWidth) || 36;
                            store.toolbar.container.style.width =
                                (w + 4) * 3 + 'px';
                        }
                    }
                }
            };
            control.data = store;
        }
        store.rebuild();
        return store.toolbar;
    },
    tooltip: 'Show all'
};


/***/ }),

/***/ 19806:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mobile = void 0;
var helpers_1 = __webpack_require__(40332);
var buttons_1 = __webpack_require__(97642);
var global_1 = __webpack_require__(17332);
__webpack_require__(8860);
function mobile(editor) {
    var timeout = 0, store = (0, helpers_1.splitArray)(editor.o.buttons);
    if (editor.o.mobileTapTimeout) {
        editor.e.on('touchend', function (e) {
            if (e.changedTouches && e.changedTouches.length) {
                var now = new Date().getTime(), diff = now - timeout;
                if (diff > editor.o.mobileTapTimeout) {
                    timeout = now;
                    if (diff < editor.o.mobileTapTimeout * 1.5) {
                        editor.s.insertCursorAtPoint(e.clientX, e.clientY);
                    }
                }
            }
        });
    }
    editor.e.on('getDiffButtons.mobile', function (toolbar) {
        if (toolbar === editor.toolbar) {
            var buttons = (0, buttons_1.flatButtonsSet)((0, helpers_1.splitArray)(editor.o.buttons), editor), flatStore_1 = (0, buttons_1.flatButtonsSet)(store, editor);
            return (0, helpers_1.toArray)(buttons).reduce(function (acc, item) {
                if (!flatStore_1.has(item)) {
                    acc.push(item);
                }
                return acc;
            }, []);
        }
    });
    if (editor.o.toolbarAdaptive) {
        editor.e
            .on('resize afterInit recalcAdaptive changePlace afterAddPlace', function () {
            var _a;
            if (!editor.o.toolbar) {
                return;
            }
            var width = ((_a = editor.container.parentElement) !== null && _a !== void 0 ? _a : editor.container).offsetWidth;
            var newStore = (function () {
                if (editor.isFullSize || width >= editor.o.sizeLG) {
                    return (0, helpers_1.splitArray)(editor.o.buttons);
                }
                if (width >= editor.o.sizeMD) {
                    return (0, helpers_1.splitArray)(editor.o.buttonsMD);
                }
                if (width >= editor.o.sizeSM) {
                    return (0, helpers_1.splitArray)(editor.o.buttonsSM);
                }
                return (0, helpers_1.splitArray)(editor.o.buttonsXS);
            })();
            if (newStore.toString() !== store.toString()) {
                store = newStore;
                editor.e.fire('closeAllPopups');
                editor.toolbar
                    .setRemoveButtons(editor.o.removeButtons)
                    .build(store.concat(editor.o.extraButtons));
            }
        })
            .on(editor.ow, 'load resize', function () {
            return editor.e.fire('recalcAdaptive');
        });
    }
}
exports.mobile = mobile;
global_1.pluginSystem.add('mobile', mobile);


/***/ }),

/***/ 73013:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var data_bind_1 = __webpack_require__(63122);
var icon_1 = __webpack_require__(77904);
var memoExec = function (jodit, _, _a) {
    var _b;
    var control = _a.control;
    var key = "button".concat(control.command);
    var value = (_b = (control.args && control.args[0])) !== null && _b !== void 0 ? _b : (0, data_bind_1.dataBind)(jodit, key);
    (0, data_bind_1.dataBind)(jodit, key, value);
    jodit.execCommand(control.command, false, value === 'default' ? null : value);
};
icon_1.Icon.set('ol', __webpack_require__(15476)).set('ul', __webpack_require__(59403));
config_1.Config.prototype.controls.ul = {
    command: 'insertUnorderedList',
    tags: ['ul'],
    tooltip: 'Insert Unordered List',
    list: {
        default: 'Default',
        circle: 'Circle',
        disc: 'Dot',
        square: 'Quadrate'
    },
    exec: memoExec
};
config_1.Config.prototype.controls.ol = {
    command: 'insertOrderedList',
    tags: ['ol'],
    tooltip: 'Insert Ordered List',
    list: {
        default: 'Default',
        'lower-alpha': 'Lower Alpha',
        'lower-greek': 'Lower Greek',
        'lower-roman': 'Lower Roman',
        'upper-alpha': 'Upper Alpha',
        'upper-roman': 'Upper Roman'
    },
    exec: memoExec
};


/***/ }),

/***/ 52598:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.orderedList = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
__webpack_require__(73013);
var orderedList = (function (_super) {
    tslib_1.__extends(orderedList, _super);
    function orderedList() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.buttons = [
            {
                name: 'ul',
                group: 'list'
            },
            {
                name: 'ol',
                group: 'list'
            }
        ];
        return _this;
    }
    orderedList.prototype.afterInit = function (jodit) {
        jodit
            .registerCommand('insertUnorderedList', this.onCommand)
            .registerCommand('insertOrderedList', this.onCommand);
    };
    orderedList.prototype.onCommand = function (command, _, type) {
        this.jodit.s.applyStyle({
            listStyleType: type !== null && type !== void 0 ? type : null
        }, {
            element: command === 'insertunorderedlist' ? 'ul' : 'ol'
        });
        this.jodit.synchronizeValues();
        return false;
    };
    orderedList.prototype.beforeDestruct = function (jodit) { };
    tslib_1.__decorate([
        decorators_1.autobind
    ], orderedList.prototype, "onCommand", null);
    return orderedList;
}(plugin_1.Plugin));
exports.orderedList = orderedList;
global_1.pluginSystem.add('orderedList', orderedList);


/***/ }),

/***/ 47470:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var constants_1 = __webpack_require__(86893);
config_1.Config.prototype.askBeforePasteFromWord = true;
config_1.Config.prototype.processPasteFromWord = true;
config_1.Config.prototype.defaultActionOnPasteFromWord = null;
config_1.Config.prototype.pasteFromWordActionList = [
    { value: constants_1.INSERT_AS_HTML, text: 'Keep' },
    { value: constants_1.INSERT_AS_TEXT, text: 'Clean' },
    { value: constants_1.INSERT_ONLY_TEXT, text: 'Insert only Text' }
];


/***/ }),

/***/ 15428:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pasteFromWord = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var helpers_1 = __webpack_require__(40332);
var constants_1 = __webpack_require__(86893);
var decorators_1 = __webpack_require__(43441);
var helpers_2 = __webpack_require__(64280);
var global_1 = __webpack_require__(17332);
__webpack_require__(47470);
var pasteFromWord = (function (_super) {
    tslib_1.__extends(pasteFromWord, _super);
    function pasteFromWord() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.requires = ['paste'];
        return _this;
    }
    pasteFromWord.prototype.afterInit = function (jodit) { };
    pasteFromWord.prototype.beforeDestruct = function (jodit) { };
    pasteFromWord.prototype.processWordHTML = function (e, text, texts) {
        var _this = this;
        var j = this.j, _a = j.o, processPasteFromWord = _a.processPasteFromWord, askBeforePasteFromWord = _a.askBeforePasteFromWord, defaultActionOnPasteFromWord = _a.defaultActionOnPasteFromWord, defaultActionOnPaste = _a.defaultActionOnPaste, pasteFromWordActionList = _a.pasteFromWordActionList;
        if (processPasteFromWord && (0, helpers_1.isHtmlFromWord)(text)) {
            if (askBeforePasteFromWord) {
                (0, helpers_2.askInsertTypeDialog)(j, 'The pasted content is coming from a Microsoft Word/Excel document. ' +
                    'Do you want to keep the format or clean it up?', 'Word Paste Detected', function (insertType) {
                    _this.insertFromWordByType(e, text, insertType, texts);
                }, pasteFromWordActionList);
            }
            else {
                this.insertFromWordByType(e, text, defaultActionOnPasteFromWord || defaultActionOnPaste, texts);
            }
            return true;
        }
        return false;
    };
    pasteFromWord.prototype.insertFromWordByType = function (e, html, insertType, texts) {
        var _a;
        switch (insertType) {
            case constants_1.INSERT_AS_HTML: {
                html = (0, helpers_1.applyStyles)(html);
                var value = (_a = this.j.events) === null || _a === void 0 ? void 0 : _a.fire('beautifyHTML', html);
                if ((0, helpers_1.isString)(value)) {
                    html = value;
                }
                break;
            }
            case constants_1.INSERT_AS_TEXT: {
                html = (0, helpers_1.cleanFromWord)(html);
                break;
            }
            case constants_1.INSERT_ONLY_TEXT: {
                html = (0, helpers_1.stripTags)((0, helpers_1.cleanFromWord)(html));
                break;
            }
        }
        (0, helpers_2.pasteInsertHtml)(e, this.j, html);
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)(':processHTML')
    ], pasteFromWord.prototype, "processWordHTML", null);
    return pasteFromWord;
}(plugin_1.Plugin));
exports.pasteFromWord = pasteFromWord;
global_1.pluginSystem.add('pasteFromWord', pasteFromWord);


/***/ }),

/***/ 47224:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pasteStorage = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(71708);
var constants_1 = __webpack_require__(86893);
var plugin_1 = __webpack_require__(85605);
var dom_1 = __webpack_require__(24263);
var helpers_1 = __webpack_require__(40332);
var button_1 = __webpack_require__(96031);
var global_1 = __webpack_require__(17332);
var pasteStorage = (function (_super) {
    tslib_1.__extends(pasteStorage, _super);
    function pasteStorage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.currentIndex = 0;
        _this.list = [];
        _this.container = null;
        _this.listBox = null;
        _this.previewBox = null;
        _this.dialog = null;
        _this.paste = function () {
            _this.j.s.focus();
            _this.j.s.insertHTML(_this.list[_this.currentIndex]);
            if (_this.currentIndex !== 0) {
                var buffer = _this.list[0];
                _this.list[0] = _this.list[_this.currentIndex];
                _this.list[_this.currentIndex] = buffer;
            }
            _this.dialog && _this.dialog.close();
            _this.j.synchronizeValues();
            _this.j.e.fire('afterPaste');
        };
        _this.onKeyDown = function (e) {
            var index = _this.currentIndex;
            if ([constants_1.KEY_UP, constants_1.KEY_DOWN, constants_1.KEY_ENTER].indexOf(e.key) === -1) {
                return;
            }
            if (e.key === constants_1.KEY_UP) {
                if (index === 0) {
                    index = _this.list.length - 1;
                }
                else {
                    index -= 1;
                }
            }
            if (e.key === constants_1.KEY_DOWN) {
                if (index === _this.list.length - 1) {
                    index = 0;
                }
                else {
                    index += 1;
                }
            }
            if (e.key === constants_1.KEY_ENTER) {
                _this.paste();
                return;
            }
            if (index !== _this.currentIndex) {
                _this.selectIndex(index);
            }
            e.stopImmediatePropagation();
            e.preventDefault();
        };
        _this.selectIndex = function (index) {
            if (_this.listBox) {
                (0, helpers_1.toArray)(_this.listBox.childNodes).forEach(function (a, i) {
                    a.classList.remove('jodit_active');
                    if (index === i && _this.previewBox) {
                        a.classList.add('jodit_active');
                        _this.previewBox.innerHTML = _this.list[index];
                        a.focus();
                    }
                });
            }
            _this.currentIndex = index;
        };
        _this.showDialog = function () {
            if (_this.list.length < 2) {
                return;
            }
            _this.dialog || _this.createDialog();
            if (_this.listBox) {
                _this.listBox.innerHTML = '';
            }
            if (_this.previewBox) {
                _this.previewBox.innerHTML = '';
            }
            _this.list.forEach(function (html, index) {
                var a = _this.j.c.element('a');
                a.textContent =
                    index + 1 + '. ' + html.replace((0, constants_1.SPACE_REG_EXP)(), '');
                _this.j.e.on(a, 'keydown', _this.onKeyDown);
                (0, helpers_1.attr)(a, 'href', '#');
                (0, helpers_1.attr)(a, 'data-index', index.toString());
                (0, helpers_1.attr)(a, 'tab-index', '-1');
                _this.listBox && _this.listBox.appendChild(a);
            });
            _this.dialog && _this.dialog.open();
            _this.j.async.setTimeout(function () {
                _this.selectIndex(0);
            }, 100);
        };
        return _this;
    }
    pasteStorage.prototype.createDialog = function () {
        var _this = this;
        this.dialog = this.j.dlg();
        var pasteButton = (0, button_1.Button)(this.j, 'paste', 'Paste', 'primary');
        pasteButton.onAction(this.paste);
        var cancelButton = (0, button_1.Button)(this.j, '', 'Cancel');
        cancelButton.onAction(this.dialog.close);
        this.container = this.j.c.div();
        this.container.classList.add('jodit-paste-storage');
        this.listBox = this.j.c.div();
        this.previewBox = this.j.c.div();
        this.container.appendChild(this.listBox);
        this.container.appendChild(this.previewBox);
        this.dialog.setHeader(this.j.i18n('Choose Content to Paste'));
        this.dialog.setContent(this.container);
        this.dialog.setFooter([pasteButton, cancelButton]);
        this.j.e.on(this.listBox, 'click dblclick', function (e) {
            var a = e.target;
            if (dom_1.Dom.isTag(a, 'a') && a.hasAttribute('data-index')) {
                _this.selectIndex(parseInt((0, helpers_1.attr)(a, '-index') || '0', 10));
            }
            if (e.type === 'dblclick') {
                _this.paste();
            }
            return false;
        });
    };
    pasteStorage.prototype.afterInit = function () {
        var _this = this;
        this.j.e
            .off('afterCopy.paste-storage')
            .on('pasteStorageList.paste-storage', function () { return _this.list.length; })
            .on('afterCopy.paste-storage', function (html) {
            if (_this.list.indexOf(html) !== -1) {
                _this.list.splice(_this.list.indexOf(html), 1);
            }
            _this.list.unshift(html);
            if (_this.list.length > 5) {
                _this.list.length = 5;
            }
        });
        this.j.registerCommand('showPasteStorage', {
            exec: this.showDialog,
            hotkeys: ['ctrl+shift+v', 'cmd+shift+v']
        });
    };
    pasteStorage.prototype.beforeDestruct = function () {
        this.dialog && this.dialog.destruct();
        this.j.e.off('.paste-storage');
        dom_1.Dom.safeRemove(this.previewBox);
        dom_1.Dom.safeRemove(this.listBox);
        dom_1.Dom.safeRemove(this.container);
        this.container = null;
        this.listBox = null;
        this.previewBox = null;
        this.dialog = null;
        this.list = [];
    };
    return pasteStorage;
}(plugin_1.Plugin));
exports.pasteStorage = pasteStorage;
global_1.pluginSystem.add('pasteStorage', pasteStorage);


/***/ }),

/***/ 24703:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
var constants_1 = __webpack_require__(86893);
var config_1 = __webpack_require__(93166);
var helpers_1 = __webpack_require__(64280);
config_1.Config.prototype.askBeforePasteHTML = true;
config_1.Config.prototype.processPasteHTML = true;
config_1.Config.prototype.pasteHTMLActionList = [
    { value: constants_1.INSERT_AS_HTML, text: 'Keep' },
    { value: constants_1.INSERT_AS_TEXT, text: 'Insert as Text' },
    { value: constants_1.INSERT_ONLY_TEXT, text: 'Insert only Text' }
];
config_1.Config.prototype.memorizeChoiceWhenPasteFragment = false;
config_1.Config.prototype.nl2brInPlainText = true;
var psKey = 'pasteStorage';
config_1.Config.prototype.controls.paste = {
    tooltip: 'Paste from clipboard',
    exec: function (editor, _, _a) {
        var control = _a.control;
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var text, error, items, textBlob, e_1, e_2, value;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (control.name === psKey) {
                            editor.execCommand('showPasteStorage');
                            return [2];
                        }
                        editor.s.focus();
                        text = '', error = true;
                        if (!navigator.clipboard) return [3, 11];
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 6, , 7]);
                        return [4, navigator.clipboard.read()];
                    case 2:
                        items = _b.sent();
                        if (!(items && items.length)) return [3, 5];
                        return [4, items[0].getType(constants_1.TEXT_PLAIN)];
                    case 3:
                        textBlob = _b.sent();
                        return [4, new Response(textBlob).text()];
                    case 4:
                        text = _b.sent();
                        _b.label = 5;
                    case 5:
                        error = false;
                        return [3, 7];
                    case 6:
                        e_1 = _b.sent();
                        if (false) {}
                        return [3, 7];
                    case 7:
                        if (!error) return [3, 11];
                        _b.label = 8;
                    case 8:
                        _b.trys.push([8, 10, , 11]);
                        return [4, navigator.clipboard.readText()];
                    case 9:
                        text = _b.sent();
                        error = false;
                        return [3, 11];
                    case 10:
                        e_2 = _b.sent();
                        if (false) {}
                        return [3, 11];
                    case 11:
                        if (error) {
                            text = editor.buffer.get(constants_1.CLIPBOARD_ID) || '';
                            error = text.length === 0;
                        }
                        value = editor.value;
                        if (error) {
                            editor.ed.execCommand('paste');
                            error = value === editor.value;
                            !error && editor.e.fire('afterPaste');
                        }
                        else if (text.length) {
                            (0, helpers_1.pasteInsertHtml)(null, editor, text);
                            editor.e.fire('afterPaste');
                        }
                        else {
                            if (error) {
                                editor.alert("Your browser doesn't support direct access to the clipboard.", function () { return void editor.s.focus(); });
                            }
                        }
                        return [2];
                }
            });
        });
    },
    list: (_a = {},
        _a[psKey] = 'Paste Storage',
        _a),
    isChildDisabled: function (j) {
        return j.e.fire('pasteStorageList') < 2;
    }
};


/***/ }),

/***/ 64280:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.askInsertTypeDialog = exports.getAllTypes = exports.pasteInsertHtml = void 0;
var tslib_1 = __webpack_require__(20255);
var checker_1 = __webpack_require__(10172);
var dom_1 = __webpack_require__(24263);
var constants_1 = __webpack_require__(86893);
var button_1 = __webpack_require__(96031);
function removeExtraFragments(html) {
    html = html.replace(/<meta[^>]+?>/g, '');
    var start = html.search(/<!--StartFragment-->/i);
    if (start !== -1) {
        html = html.substring(start + 20);
    }
    var end = html.search(/<!--EndFragment-->/i);
    if (end !== -1) {
        html = html.substring(0, end);
    }
    return html;
}
function isDragEvent(e) {
    return Boolean(e && e.type === 'drop');
}
function pasteInsertHtml(e, editor, html) {
    if (editor.isInDestruct) {
        return;
    }
    if (isDragEvent(e)) {
        editor.s.insertCursorAtPoint(e.clientX, e.clientY);
    }
    var result = editor.e.fire('beforePasteInsert', html);
    if (!(0, checker_1.isVoid)(result) &&
        ((0, checker_1.isString)(result) || (0, checker_1.isNumber)(result) || dom_1.Dom.isNode(result))) {
        html = result;
    }
    if ((0, checker_1.isString)(html)) {
        html = removeExtraFragments(html);
    }
    editor.s.insertHTML(html);
}
exports.pasteInsertHtml = pasteInsertHtml;
function getAllTypes(dt) {
    var types = dt.types;
    var types_str = '';
    if ((0, checker_1.isArray)(types) ||
        {}.toString.call(types) === '[object DOMStringList]') {
        for (var i = 0; i < types.length; i += 1) {
            types_str += types[i] + ';';
        }
    }
    else {
        types_str = (types || constants_1.TEXT_PLAIN).toString() + ';';
    }
    return types_str;
}
exports.getAllTypes = getAllTypes;
function askInsertTypeDialog(jodit, msg, title, callback, buttonList) {
    if (jodit.e.fire('beforeOpenPasteDialog', msg, title, callback, buttonList) === false) {
        return;
    }
    var dialog = jodit.confirm("<div style=\"word-break: normal; white-space: normal\">".concat(jodit.i18n(msg), "</div>"), jodit.i18n(title));
    var buttons = buttonList.map(function (_a) {
        var text = _a.text, value = _a.value;
        return (0, button_1.Button)(jodit, {
            text: text,
            name: text.toLowerCase(),
            tabIndex: 0
        }).onAction(function () {
            dialog.close();
            callback(value);
        });
    });
    dialog.e.one(dialog, 'afterClose', function () {
        if (!jodit.s.isFocused()) {
            jodit.s.focus();
        }
    });
    var cancel = (0, button_1.Button)(jodit, {
        text: 'Cancel',
        tabIndex: 0
    }).onAction(function () {
        dialog.close();
    });
    dialog.setFooter(tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read(buttons), false), [cancel], false));
    buttons[0].focus();
    buttons[0].state.variant = 'primary';
    jodit.e.fire('afterOpenPasteDialog', dialog, msg, title, callback, buttonList);
    return dialog;
}
exports.askInsertTypeDialog = askInsertTypeDialog;


/***/ }),

/***/ 19483:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.paste = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(85605);
var constants_1 = __webpack_require__(86893);
var dom_1 = __webpack_require__(24263);
var decorators_1 = __webpack_require__(43441);
var helpers_1 = __webpack_require__(40332);
var global_1 = __webpack_require__(17332);
var helpers_2 = __webpack_require__(64280);
__webpack_require__(24703);
var paste = (function (_super) {
    tslib_1.__extends(paste, _super);
    function paste() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.pasteStack = new helpers_1.LimitedStack(20);
        _this._isDialogOpened = false;
        return _this;
    }
    paste.prototype.afterInit = function (jodit) {
        var _this = this;
        jodit.e
            .on('paste.paste', this.onPaste)
            .on('pasteStack.paste', function (item) {
            return _this.pasteStack.push(item);
        });
        if (jodit.o.nl2brInPlainText) {
            this.j.e.on('processPaste.paste', this.onProcessPasteReplaceNl2Br);
        }
    };
    paste.prototype.beforeDestruct = function (jodit) {
        jodit.e
            .off('paste.paste', this.onPaste)
            .off('processPaste.paste', this.onProcessPasteReplaceNl2Br)
            .off('.paste');
    };
    paste.prototype.onPaste = function (e) {
        try {
            if (this.customPasteProcess(e) === false ||
                this.j.e.fire('beforePaste', e) === false) {
                e.preventDefault();
                return false;
            }
            this.defaultPasteProcess(e);
        }
        finally {
            this.j.e.fire('afterPaste', e);
        }
    };
    paste.prototype.customPasteProcess = function (e) {
        if (!this.j.o.processPasteHTML) {
            return;
        }
        var dt = (0, helpers_1.getDataTransfer)(e), texts = {
            html: dt === null || dt === void 0 ? void 0 : dt.getData(constants_1.TEXT_HTML),
            plain: dt === null || dt === void 0 ? void 0 : dt.getData(constants_1.TEXT_PLAIN),
            rtf: dt === null || dt === void 0 ? void 0 : dt.getData(constants_1.TEXT_RTF)
        };
        var key;
        for (key in texts) {
            var value = texts[key];
            if ((0, helpers_1.isHTML)(value) &&
                (this.j.e.fire('processHTML', e, value, texts) ||
                    this.processHTML(e, value))) {
                return false;
            }
        }
    };
    paste.prototype.defaultPasteProcess = function (e) {
        var dt = (0, helpers_1.getDataTransfer)(e);
        var text = (dt === null || dt === void 0 ? void 0 : dt.getData(constants_1.TEXT_HTML)) || (dt === null || dt === void 0 ? void 0 : dt.getData(constants_1.TEXT_PLAIN));
        if (dt && text && (0, helpers_1.trim)(text) !== '') {
            var result = this.j.e.fire('processPaste', e, text, (0, helpers_2.getAllTypes)(dt));
            if (result !== undefined) {
                text = result;
            }
            if ((0, helpers_1.isString)(text) || dom_1.Dom.isNode(text)) {
                this.insertByType(e, text, this.j.o.defaultActionOnPaste);
            }
            e.preventDefault();
            e.stopPropagation();
        }
    };
    paste.prototype.processHTML = function (e, html) {
        var _this = this;
        if (this.j.o.askBeforePasteHTML) {
            if (this.j.o.memorizeChoiceWhenPasteFragment) {
                var cached = this.pasteStack.find(function (cachedItem) { return cachedItem.html === html; });
                if (cached) {
                    this.insertByType(e, html, cached.action || this.j.o.defaultActionOnPaste);
                    return true;
                }
            }
            if (this._isDialogOpened) {
                return true;
            }
            var dialog = (0, helpers_2.askInsertTypeDialog)(this.j, 'Your code is similar to HTML. Keep as HTML?', 'Paste as HTML', function (insertType) {
                _this._isDialogOpened = false;
                _this.insertByType(e, html, insertType);
            }, this.j.o.pasteHTMLActionList);
            if (dialog) {
                this._isDialogOpened = true;
                dialog.e.on('beforeClose', function () {
                    _this._isDialogOpened = false;
                });
            }
            return true;
        }
        return false;
    };
    paste.prototype.insertByType = function (e, html, action) {
        this.pasteStack.push({ html: html, action: action });
        if ((0, helpers_1.isString)(html)) {
            this.j.buffer.set(constants_1.CLIPBOARD_ID, html);
            switch (action) {
                case constants_1.INSERT_CLEAR_HTML:
                    html = (0, helpers_1.cleanFromWord)(html);
                    break;
                case constants_1.INSERT_ONLY_TEXT:
                    html = (0, helpers_1.stripTags)(html);
                    break;
                case constants_1.INSERT_AS_TEXT:
                    html = (0, helpers_1.htmlspecialchars)(html);
                    break;
                default:
            }
        }
        (0, helpers_2.pasteInsertHtml)(e, this.j, html);
    };
    paste.prototype.onProcessPasteReplaceNl2Br = function (ignore, text, type) {
        if (type === constants_1.TEXT_PLAIN + ';' && !(0, helpers_1.isHTML)(text)) {
            return (0, helpers_1.nl2br)(text);
        }
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], paste.prototype, "onPaste", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], paste.prototype, "onProcessPasteReplaceNl2Br", null);
    return paste;
}(plugin_1.Plugin));
exports.paste = paste;
global_1.pluginSystem.add('paste', paste);


/***/ }),

/***/ 76952:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.showPlaceholder = true;
config_1.Config.prototype.placeholder = 'Type something';
config_1.Config.prototype.useInputsPlaceholder = true;


/***/ }),

/***/ 83211:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.placeholder = exports.isEditorEmpty = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(51629);
var consts = __webpack_require__(86893);
var utils_1 = __webpack_require__(67309);
var css_1 = __webpack_require__(26911);
var is_marker_1 = __webpack_require__(37204);
var dom_1 = __webpack_require__(24263);
var plugin_1 = __webpack_require__(85605);
var constants_1 = __webpack_require__(86893);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
__webpack_require__(76952);
function isEditorEmpty(root) {
    var _a;
    if (!root.firstChild) {
        return true;
    }
    var first = root.firstChild;
    if (constants_1.INSEPARABLE_TAGS.has((_a = first.nodeName) === null || _a === void 0 ? void 0 : _a.toLowerCase()) ||
        /^(TABLE)$/i.test(first.nodeName)) {
        return false;
    }
    var next = dom_1.Dom.next(first, function (node) { return node && !dom_1.Dom.isEmptyTextNode(node); }, root);
    if (dom_1.Dom.isText(first) && !next) {
        return dom_1.Dom.isEmptyTextNode(first);
    }
    return (!next &&
        dom_1.Dom.each(first, function (elm) {
            return !dom_1.Dom.isTag(elm, ['ul', 'li', 'ol']) &&
                (dom_1.Dom.isEmpty(elm) || dom_1.Dom.isTag(elm, 'br'));
        }));
}
exports.isEditorEmpty = isEditorEmpty;
var placeholder = (function (_super) {
    tslib_1.__extends(placeholder, _super);
    function placeholder() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.addNativeListeners = function () {
            _this.j.e
                .off(_this.j.editor, 'input.placeholder keydown.placeholder')
                .on(_this.j.editor, 'input.placeholder keydown.placeholder', _this.toggle);
        };
        _this.addEvents = function () {
            var editor = _this.j;
            if (editor.o.useInputsPlaceholder &&
                editor.element.hasAttribute('placeholder')) {
                _this.placeholderElm.innerHTML =
                    (0, utils_1.attr)(editor.element, 'placeholder') || '';
            }
            editor.e.fire('placeholder', _this.placeholderElm.innerHTML);
            editor.e
                .off('.placeholder')
                .on('changePlace.placeholder', _this.addNativeListeners)
                .on('change.placeholder focus.placeholder keyup.placeholder mouseup.placeholder keydown.placeholder ' +
                'mousedown.placeholder afterSetMode.placeholder changePlace.placeholder', _this.toggle)
                .on(window, 'load', _this.toggle);
            _this.addNativeListeners();
            _this.toggle();
        };
        return _this;
    }
    placeholder.prototype.afterInit = function (editor) {
        var _this = this;
        if (!editor.o.showPlaceholder) {
            return;
        }
        this.placeholderElm = editor.c.fromHTML("<span data-ref=\"placeholder\" style=\"display: none;\" class=\"jodit-placeholder\">".concat(editor.i18n(editor.o.placeholder), "</span>"));
        if (editor.o.direction === 'rtl') {
            this.placeholderElm.style.right = '0px';
            this.placeholderElm.style.direction = 'rtl';
        }
        editor.e
            .on('readonly', function (isReadOnly) {
            if (isReadOnly) {
                _this.hide();
            }
            else {
                _this.toggle();
            }
        })
            .on('changePlace', this.addEvents);
        this.addEvents();
    };
    placeholder.prototype.show = function () {
        var editor = this.j;
        if (editor.o.readonly) {
            return;
        }
        var marginTop = 0, marginLeft = 0;
        var current = editor.s.current(), wrapper = (current && dom_1.Dom.closest(current, dom_1.Dom.isBlock, editor.editor)) ||
            editor.editor;
        var style = editor.ew.getComputedStyle(wrapper);
        var styleEditor = editor.ew.getComputedStyle(editor.editor);
        editor.workplace.appendChild(this.placeholderElm);
        var firstChild = editor.editor.firstChild;
        if (dom_1.Dom.isElement(firstChild) && !(0, is_marker_1.isMarker)(firstChild)) {
            var style2 = editor.ew.getComputedStyle(firstChild);
            marginTop = parseInt(style2.getPropertyValue('margin-top'), 10);
            marginLeft = parseInt(style2.getPropertyValue('margin-left'), 10);
            this.placeholderElm.style.fontSize =
                parseInt(style2.getPropertyValue('font-size'), 10) + 'px';
            this.placeholderElm.style.lineHeight =
                style2.getPropertyValue('line-height');
        }
        else {
            this.placeholderElm.style.fontSize =
                parseInt(style.getPropertyValue('font-size'), 10) + 'px';
            this.placeholderElm.style.lineHeight =
                style.getPropertyValue('line-height');
        }
        (0, css_1.css)(this.placeholderElm, {
            display: 'block',
            textAlign: style.getPropertyValue('text-align'),
            paddingTop: parseInt(styleEditor.paddingTop, 10) + 'px',
            paddingLeft: parseInt(styleEditor.paddingLeft, 10) + 'px',
            paddingRight: parseInt(styleEditor.paddingRight, 10) + 'px',
            marginTop: Math.max(parseInt(style.getPropertyValue('margin-top'), 10), marginTop),
            marginLeft: Math.max(parseInt(style.getPropertyValue('margin-left'), 10), marginLeft)
        });
    };
    placeholder.prototype.hide = function () {
        dom_1.Dom.safeRemove(this.placeholderElm);
    };
    placeholder.prototype.toggle = function () {
        var editor = this.j;
        if (!editor.editor || editor.isInDestruct) {
            return;
        }
        if (editor.getRealMode() !== consts.MODE_WYSIWYG) {
            this.hide();
            return;
        }
        if (!isEditorEmpty(editor.editor)) {
            this.hide();
        }
        else {
            this.show();
        }
    };
    placeholder.prototype.beforeDestruct = function (jodit) {
        this.hide();
        jodit.e.off('.placeholder').off(window, 'load', this.toggle);
    };
    tslib_1.__decorate([
        (0, decorators_1.debounce)(function (ctx) { return ctx.defaultTimeout / 10; }, true)
    ], placeholder.prototype, "toggle", null);
    return placeholder;
}(plugin_1.Plugin));
exports.placeholder = placeholder;
global_1.pluginSystem.add('placeholder', placeholder);


/***/ }),

/***/ 88297:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.poweredByJodit = void 0;
var global_1 = __webpack_require__(17332);
function poweredByJodit(jodit) {
    var o = jodit.o;
    if (!o.hidePoweredByJodit &&
        !o.inline &&
        (o.showCharsCounter ||
            o.showWordsCounter ||
            o.showXPathInStatusbar)) {
        jodit.hookStatus('ready', function () {
            jodit.statusbar.append(jodit.create.fromHTML("<a\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\tstyle=\"text-transform: uppercase\"\n\t\t\t\t\t\tclass=\"jodit-status-bar-link\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref=\"https://xdsoft.net/jodit/\">\n\t\t\t\t\t\t\tPowered by Jodit\n\t\t\t\t\t\t</a>"), true);
        });
    }
}
exports.poweredByJodit = poweredByJodit;
global_1.pluginSystem.add('poweredByJodit', poweredByJodit);


/***/ }),

/***/ 72930:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.preview = void 0;
__webpack_require__(54860);
var config_1 = __webpack_require__(93166);
var constants_1 = __webpack_require__(86893);
var print_1 = __webpack_require__(21498);
var global_1 = __webpack_require__(17332);
config_1.Config.prototype.controls.preview = {
    icon: 'eye',
    command: 'preview',
    mode: constants_1.MODE_SOURCE + constants_1.MODE_WYSIWYG,
    tooltip: 'Preview'
};
function preview(editor) {
    editor.registerButton({
        name: 'preview'
    });
    editor.registerCommand('preview', function (_, _1, defaultValue) {
        var dialog = editor.dlg();
        dialog
            .setSize(1024, 600)
            .open('', editor.i18n('Preview'))
            .setModal(true);
        (0, print_1.previewBox)(editor, defaultValue, 'px', dialog.getElm('content'));
    });
}
exports.preview = preview;
global_1.pluginSystem.add('preview', preview);


/***/ }),

/***/ 20137:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.generateCriticalCSS = void 0;
var tslib_1 = __webpack_require__(20255);
var to_array_1 = __webpack_require__(1853);
function generateCriticalCSS(jodit) {
    var getMatchedCSSRules = function (el, css) {
        if (css === void 0) { css = el.ownerDocument.styleSheets; }
        var rules = (0, to_array_1.toArray)(css)
            .map(function (s) {
            try {
                return (0, to_array_1.toArray)(s.cssRules);
            }
            catch (_a) { }
            return [];
        })
            .flat();
        return rules.filter(function (r) {
            try {
                return Boolean(r && el.matches(r.selectorText));
            }
            catch (_a) { }
            return false;
        });
    };
    var CSSCriticalPath = (function () {
        function CSSCriticalPath(w, d, opts) {
            var _this = this;
            this.css = {};
            var opt = opts || {};
            var pushCSS = function (r) {
                var selectorText = r.selectorText
                    .split(',')
                    .map(function (a) { return a.trim(); })
                    .sort()
                    .join(',');
                if (Boolean(_this.css[selectorText]) === false) {
                    _this.css[selectorText] = {};
                }
                var styles = r.style.cssText.split(/;(?![A-Za-z0-9])/);
                for (var i = 0; i < styles.length; i++) {
                    if (!styles[i]) {
                        continue;
                    }
                    var pair = styles[i].split(':');
                    pair[0] = pair[0].trim();
                    pair[1] = pair[1].trim();
                    _this.css[selectorText][pair[0]] = pair[1].replace(/var\(([^)]+)\)/g, function (varValue, key) {
                        var _a = tslib_1.__read(key.split(','), 2), name = _a[0], def = _a[1];
                        return (jodit.ew
                            .getComputedStyle(jodit.editor)
                            .getPropertyValue(name.trim()) ||
                            def ||
                            varValue).trim();
                    });
                }
            };
            var parseTree = function () {
                var height = w.innerHeight;
                var walker = d.createTreeWalker(jodit.editor, NodeFilter.SHOW_ELEMENT, function () { return NodeFilter.FILTER_ACCEPT; });
                while (walker.nextNode()) {
                    var node = walker.currentNode;
                    var rect = node.getBoundingClientRect();
                    if (rect.top < height || opt.scanFullPage) {
                        var rules = getMatchedCSSRules(node);
                        if (rules) {
                            for (var r = 0; r < rules.length; r++) {
                                pushCSS(rules[r]);
                            }
                        }
                    }
                }
            };
            parseTree();
        }
        CSSCriticalPath.prototype.generateCSS = function () {
            var finalCSS = '';
            for (var k in this.css) {
                if (/:not\(/.test(k)) {
                    continue;
                }
                finalCSS += k + ' { ';
                for (var j in this.css[k]) {
                    finalCSS += j + ': ' + this.css[k][j] + '; ';
                }
                finalCSS += '}\n';
            }
            return finalCSS;
        };
        return CSSCriticalPath;
    }());
    try {
        var cp = new CSSCriticalPath(jodit.ew, jodit.ed, {
            scanFullPage: true
        });
        return cp.generateCSS();
    }
    catch (_a) { }
    return '';
}
exports.generateCriticalCSS = generateCriticalCSS;


/***/ }),

/***/ 51197:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.print = void 0;
var config_1 = __webpack_require__(93166);
var global_1 = __webpack_require__(17332);
var dom_1 = __webpack_require__(64968);
var default_language_1 = __webpack_require__(93351);
var consts = __webpack_require__(86893);
var global_2 = __webpack_require__(17332);
var icon_1 = __webpack_require__(77904);
var generate_critical_css_1 = __webpack_require__(20137);
var print_1 = __webpack_require__(21498);
icon_1.Icon.set('print', __webpack_require__(22860));
config_1.Config.prototype.controls.print = {
    exec: function (editor) {
        var iframe = editor.create.element('iframe');
        Object.assign(iframe.style, {
            position: 'fixed',
            right: 0,
            bottom: 0,
            width: 0,
            height: 0,
            border: 0
        });
        (0, global_1.getContainer)(editor, config_1.Config).appendChild(iframe);
        var afterFinishPrint = function () {
            editor.e.off(editor.ow, 'mousemove', afterFinishPrint);
            dom_1.Dom.safeRemove(iframe);
        };
        var myWindow = iframe.contentWindow;
        if (myWindow) {
            editor.e
                .on(myWindow, 'onbeforeunload onafterprint', afterFinishPrint)
                .on(editor.ow, 'mousemove', afterFinishPrint);
            if (editor.o.iframe) {
                editor.e.fire('generateDocumentStructure.iframe', myWindow.document, editor);
                myWindow.document.body.innerHTML = editor.value;
            }
            else {
                myWindow.document.write('<!doctype html><html lang="' +
                    (0, default_language_1.defaultLanguage)(editor.o.language) +
                    '"><head><title></title></head><style>' +
                    (0, generate_critical_css_1.generateCriticalCSS)(editor) +
                    '</style><body></body></html>');
                myWindow.document.close();
                (0, print_1.previewBox)(editor, undefined, 'px', myWindow.document.body);
            }
            var style = myWindow.document.createElement('style');
            style.innerHTML = "@media print {\n\t\t\t\t\tbody {\n\t\t\t\t\t\t\t-webkit-print-color-adjust: exact;\n\t\t\t\t\t}\n\t\t\t}";
            myWindow.document.head.appendChild(style);
            myWindow.focus();
            myWindow.print();
        }
    },
    mode: consts.MODE_SOURCE + consts.MODE_WYSIWYG,
    tooltip: 'Print'
};
function print(editor) {
    editor.registerButton({
        name: 'print'
    });
}
exports.print = print;
global_2.pluginSystem.add('print', print);


/***/ }),

/***/ 2327:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.redoUndo = void 0;
var tslib_1 = __webpack_require__(20255);
var config_1 = __webpack_require__(93166);
var consts = __webpack_require__(86893);
var plugin_1 = __webpack_require__(85605);
var global_1 = __webpack_require__(17332);
var icon_1 = __webpack_require__(77904);
icon_1.Icon.set('redo', __webpack_require__(95600)).set('undo', __webpack_require__(76214));
config_1.Config.prototype.controls.redo = {
    mode: consts.MODE_SPLIT,
    isDisabled: function (editor) { return !editor.history.canRedo(); },
    tooltip: 'Redo'
};
config_1.Config.prototype.controls.undo = {
    mode: consts.MODE_SPLIT,
    isDisabled: function (editor) { return !editor.history.canUndo(); },
    tooltip: 'Undo'
};
var redoUndo = (function (_super) {
    tslib_1.__extends(redoUndo, _super);
    function redoUndo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.buttons = [
            {
                name: 'undo',
                group: 'history'
            },
            {
                name: 'redo',
                group: 'history'
            }
        ];
        return _this;
    }
    redoUndo.prototype.beforeDestruct = function () {
    };
    redoUndo.prototype.afterInit = function (editor) {
        var callback = function (command) {
            editor.history[command]();
            return false;
        };
        editor.registerCommand('redo', {
            exec: callback,
            hotkeys: ['ctrl+y', 'ctrl+shift+z', 'cmd+y', 'cmd+shift+z']
        });
        editor.registerCommand('undo', {
            exec: callback,
            hotkeys: ['ctrl+z', 'cmd+z']
        });
    };
    return redoUndo;
}(plugin_1.Plugin));
exports.redoUndo = redoUndo;
global_1.pluginSystem.add('redoUndo', redoUndo);


/***/ }),

/***/ 52444:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.tableAllowCellResize = true;


/***/ }),

/***/ 47608:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resizeCells = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(47818);
var consts = __webpack_require__(86893);
var modules_1 = __webpack_require__(87837);
var helpers_1 = __webpack_require__(40332);
var decorators_1 = __webpack_require__(43441);
var dom_1 = __webpack_require__(24263);
var global_1 = __webpack_require__(17332);
__webpack_require__(52444);
var key = 'table_processor_observer-resize';
var resizeCells = (function (_super) {
    tslib_1.__extends(resizeCells, _super);
    function resizeCells() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selectMode = false;
        _this.resizeDelta = 0;
        _this.createResizeHandle = function () {
            if (!_this.resizeHandler) {
                _this.resizeHandler = _this.j.c.div('jodit-table-resizer');
                _this.j.e
                    .on(_this.resizeHandler, 'mousedown.table touchstart.table', _this.onHandleMouseDown)
                    .on(_this.resizeHandler, 'mouseenter.table', function () {
                    _this.j.async.clearTimeout(_this.hideTimeout);
                });
            }
        };
        _this.hideTimeout = 0;
        _this.drag = false;
        _this.minX = 0;
        _this.maxX = 0;
        _this.startX = 0;
        return _this;
    }
    Object.defineProperty(resizeCells.prototype, "module", {
        get: function () {
            return this.j.getInstance('Table', this.j.o);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(resizeCells.prototype, "isRTL", {
        get: function () {
            return this.j.o.direction === 'rtl';
        },
        enumerable: false,
        configurable: true
    });
    resizeCells.prototype.showResizeHandle = function () {
        this.j.async.clearTimeout(this.hideTimeout);
        this.j.workplace.appendChild(this.resizeHandler);
    };
    resizeCells.prototype.hideResizeHandle = function () {
        var _this = this;
        this.hideTimeout = this.j.async.setTimeout(function () {
            dom_1.Dom.safeRemove(_this.resizeHandler);
        }, {
            timeout: this.j.defaultTimeout,
            label: 'hideResizer'
        });
    };
    resizeCells.prototype.onHandleMouseDown = function (event) {
        var _this = this;
        if (this.j.isLocked) {
            return;
        }
        this.drag = true;
        this.j.e
            .on(this.j.ow, 'mouseup.resize-cells touchend.resize-cells', this.onMouseUp)
            .on(this.j.ew, 'mousemove.table touchmove.table', this.onMouseMove);
        this.startX = event.clientX;
        this.j.lock(key);
        this.resizeHandler.classList.add('jodit-table-resizer_moved');
        var box, tableBox = this.workTable.getBoundingClientRect();
        this.minX = 0;
        this.maxX = 1000000;
        if (this.wholeTable != null) {
            tableBox = this.workTable.parentNode.getBoundingClientRect();
            this.minX = tableBox.left;
            this.maxX = this.minX + tableBox.width;
        }
        else {
            var coordinate_1 = modules_1.Table.formalCoordinate(this.workTable, this.workCell, true);
            modules_1.Table.formalMatrix(this.workTable, function (td, i, j) {
                if (coordinate_1[1] === j) {
                    box = td.getBoundingClientRect();
                    _this.minX = Math.max(box.left + consts.NEARBY / 2, _this.minX);
                }
                if (coordinate_1[1] + (_this.isRTL ? -1 : 1) === j) {
                    box = td.getBoundingClientRect();
                    _this.maxX = Math.min(box.left + box.width - consts.NEARBY / 2, _this.maxX);
                }
            });
        }
        return false;
    };
    resizeCells.prototype.onMouseMove = function (event) {
        if (!this.drag) {
            return;
        }
        this.j.e.fire('closeAllPopups');
        var x = event.clientX;
        var workplacePosition = (0, helpers_1.offset)((this.resizeHandler.parentNode ||
            this.j.od.documentElement), this.j, this.j.od, true);
        if (x < this.minX) {
            x = this.minX;
        }
        if (x > this.maxX) {
            x = this.maxX;
        }
        this.resizeDelta =
            x - this.startX + (!this.j.o.iframe ? 0 : workplacePosition.left);
        this.resizeHandler.style.left =
            x - (this.j.o.iframe ? 0 : workplacePosition.left) + 'px';
        var sel = this.j.s.sel;
        sel && sel.removeAllRanges();
    };
    resizeCells.prototype.onMouseUp = function (e) {
        if (this.selectMode || this.drag) {
            this.selectMode = false;
            this.j.unlock();
        }
        if (!this.resizeHandler || !this.drag) {
            return;
        }
        this.drag = false;
        this.j.e.off(this.j.ew, 'mousemove.table touchmove.table', this.onMouseMove);
        this.resizeHandler.classList.remove('jodit-table-resizer_moved');
        if (this.startX !== e.clientX) {
            if (this.wholeTable == null) {
                this.resizeColumns();
            }
            else {
                this.resizeTable();
            }
        }
        this.j.synchronizeValues();
        this.j.s.focus();
    };
    resizeCells.prototype.resizeColumns = function () {
        var delta = this.resizeDelta;
        var marked = [];
        modules_1.Table.setColumnWidthByDelta(this.workTable, modules_1.Table.formalCoordinate(this.workTable, this.workCell, true)[1], delta, true, marked);
        var nextTD = (0, helpers_1.call)(this.isRTL ? dom_1.Dom.prev : dom_1.Dom.next, this.workCell, dom_1.Dom.isCell, this.workCell.parentNode);
        modules_1.Table.setColumnWidthByDelta(this.workTable, modules_1.Table.formalCoordinate(this.workTable, nextTD)[1], -delta, false, marked);
    };
    resizeCells.prototype.resizeTable = function () {
        var delta = this.resizeDelta * (this.isRTL ? -1 : 1);
        var width = this.workTable.offsetWidth, parentWidth = (0, helpers_1.getContentWidth)(this.workTable.parentNode, this.j.ew);
        var rightSide = !this.wholeTable;
        var needChangeWidth = this.isRTL ? !rightSide : rightSide;
        if (needChangeWidth) {
            this.workTable.style.width =
                ((width + delta) / parentWidth) * 100 + '%';
        }
        else {
            var side = this.isRTL ? 'marginRight' : 'marginLeft';
            var margin = parseInt(this.j.ew.getComputedStyle(this.workTable)[side] || '0', 10);
            this.workTable.style.width =
                ((width - delta) / parentWidth) * 100 + '%';
            this.workTable.style[side] =
                ((margin + delta) / parentWidth) * 100 + '%';
        }
    };
    resizeCells.prototype.setWorkCell = function (cell, wholeTable) {
        if (wholeTable === void 0) { wholeTable = null; }
        this.wholeTable = wholeTable;
        this.workCell = cell;
        this.workTable = dom_1.Dom.up(cell, function (elm) { return dom_1.Dom.isTag(elm, 'table'); }, this.j.editor);
    };
    resizeCells.prototype.calcHandlePosition = function (table, cell, offsetX, delta) {
        if (offsetX === void 0) { offsetX = 0; }
        if (delta === void 0) { delta = 0; }
        var box = (0, helpers_1.offset)(cell, this.j, this.j.ed);
        if (offsetX > consts.NEARBY && offsetX < box.width - consts.NEARBY) {
            this.hideResizeHandle();
            return;
        }
        var workplacePosition = (0, helpers_1.offset)(this.j.workplace, this.j, this.j.od, true), parentBox = (0, helpers_1.offset)(table, this.j, this.j.ed);
        this.resizeHandler.style.left =
            (offsetX <= consts.NEARBY ? box.left : box.left + box.width) -
                workplacePosition.left +
                delta +
                'px';
        Object.assign(this.resizeHandler.style, {
            height: parentBox.height + 'px',
            top: parentBox.top - workplacePosition.top + 'px'
        });
        this.showResizeHandle();
        if (offsetX <= consts.NEARBY) {
            var prevTD = (0, helpers_1.call)(this.isRTL ? dom_1.Dom.next : dom_1.Dom.prev, cell, dom_1.Dom.isCell, cell.parentNode);
            this.setWorkCell(prevTD || cell, prevTD ? null : true);
        }
        else {
            var nextTD = (0, helpers_1.call)(!this.isRTL ? dom_1.Dom.next : dom_1.Dom.prev, cell, dom_1.Dom.isCell, cell.parentNode);
            this.setWorkCell(cell, !nextTD ? false : null);
        }
    };
    resizeCells.prototype.afterInit = function (editor) {
        var _this = this;
        if (!editor.o.tableAllowCellResize) {
            return;
        }
        editor.e
            .off(this.j.ow, '.resize-cells')
            .off('.resize-cells')
            .on('change.resize-cells afterCommand.resize-cells afterSetMode.resize-cells', function () {
            (0, helpers_1.$$)('table', editor.editor).forEach(_this.observe);
        })
            .on(this.j.ow, 'scroll.resize-cells', function () {
            if (!_this.drag) {
                return;
            }
            var parent = dom_1.Dom.up(_this.workCell, function (elm) { return dom_1.Dom.isTag(elm, 'table'); }, editor.editor);
            if (parent) {
                var parentBox = parent.getBoundingClientRect();
                _this.resizeHandler.style.top = parentBox.top + 'px';
            }
        })
            .on('beforeSetMode.resize-cells', function () {
            _this.module.getAllSelectedCells().forEach(function (td) {
                _this.module.removeSelection(td);
                modules_1.Table.normalizeTable(dom_1.Dom.closest(td, 'table', editor.editor));
            });
        });
    };
    resizeCells.prototype.observe = function (table) {
        var _this = this;
        if ((0, helpers_1.dataBind)(table, key)) {
            return;
        }
        (0, helpers_1.dataBind)(table, key, true);
        this.j.e
            .on(table, 'mouseleave.resize-cells', function (e) {
            if (_this.resizeHandler &&
                _this.resizeHandler !== e.relatedTarget) {
                _this.hideResizeHandle();
            }
        })
            .on(table, 'mousemove.resize-cells touchmove.resize-cells', this.j.async.throttle(function (event) {
            if (_this.j.isLocked) {
                return;
            }
            var cell = dom_1.Dom.up(event.target, dom_1.Dom.isCell, table);
            if (!cell) {
                return;
            }
            _this.calcHandlePosition(table, cell, event.offsetX);
        }, {
            timeout: this.j.defaultTimeout
        }));
        this.createResizeHandle();
    };
    resizeCells.prototype.beforeDestruct = function (jodit) {
        if (jodit.events) {
            jodit.e.off(this.j.ow, '.resize-cells');
            jodit.e.off('.resize-cells');
        }
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizeCells.prototype, "onHandleMouseDown", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizeCells.prototype, "onMouseMove", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizeCells.prototype, "onMouseUp", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizeCells.prototype, "observe", null);
    return resizeCells;
}(modules_1.Plugin));
exports.resizeCells = resizeCells;
global_1.pluginSystem.add('resizeCells', resizeCells);


/***/ }),

/***/ 91637:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.allowResizeX = false;
config_1.Config.prototype.allowResizeY = true;


/***/ }),

/***/ 90523:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resizeHandler = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var dom_1 = __webpack_require__(64968);
var decorators_1 = __webpack_require__(43441);
var ui_1 = __webpack_require__(2074);
var global_1 = __webpack_require__(17332);
__webpack_require__(91637);
var resizeHandler = (function (_super) {
    tslib_1.__extends(resizeHandler, _super);
    function resizeHandler() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isResized = false;
        _this.start = {
            x: 0,
            y: 0,
            w: 0,
            h: 0
        };
        _this.handle = _this.j.c.div('jodit-editor__resize', ui_1.Icon.get('resize_handler'));
        return _this;
    }
    resizeHandler.prototype.afterInit = function (editor) {
        var _this = this;
        var _a = editor.o, height = _a.height, width = _a.width, allowResizeX = _a.allowResizeX;
        var allowResizeY = editor.o.allowResizeY;
        if (height === 'auto' && width !== 'auto') {
            allowResizeY = false;
        }
        if ((height !== 'auto' || width !== 'auto') &&
            (allowResizeX || allowResizeY)) {
            editor.statusbar.setMod('resize-handle', true);
            editor.e
                .on('toggleFullSize.resizeHandler', function () {
                _this.handle.style.display = editor.isFullSize
                    ? 'none'
                    : 'block';
            })
                .on(this.handle, 'mousedown touchstart', this.onHandleResizeStart)
                .on(editor.ow, 'mouseup touchend', this.onHandleResizeEnd);
            editor.container.appendChild(this.handle);
        }
    };
    resizeHandler.prototype.onHandleResizeStart = function (e) {
        this.isResized = true;
        this.start.x = e.clientX;
        this.start.y = e.clientY;
        this.start.w = this.j.container.offsetWidth;
        this.start.h = this.j.container.offsetHeight;
        this.j.lock();
        this.j.e.on(this.j.ow, 'mousemove touchmove', this.onHandleResize);
        e.preventDefault();
    };
    resizeHandler.prototype.onHandleResize = function (e) {
        if (!this.isResized) {
            return;
        }
        if (this.j.o.allowResizeY) {
            this.j.e.fire('setHeight', this.start.h + e.clientY - this.start.y);
        }
        if (this.j.o.allowResizeX) {
            this.j.e.fire('setWidth', this.start.w + e.clientX - this.start.x);
        }
        this.j.e.fire('resize');
    };
    resizeHandler.prototype.onHandleResizeEnd = function () {
        if (this.isResized) {
            this.isResized = false;
            this.j.e.off(this.j.ow, 'mousemove touchmove', this.onHandleResize);
            this.j.unlock();
        }
    };
    resizeHandler.prototype.beforeDestruct = function () {
        dom_1.Dom.safeRemove(this.handle);
        this.j.e.off(this.j.ow, 'mouseup touchsend', this.onHandleResizeEnd);
    };
    resizeHandler.requires = ['size'];
    resizeHandler = tslib_1.__decorate([
        decorators_1.autobind
    ], resizeHandler);
    return resizeHandler;
}(plugin_1.Plugin));
exports.resizeHandler = resizeHandler;
global_1.pluginSystem.add('resizeHandler', resizeHandler);


/***/ }),

/***/ 36560:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.allowResizeTags = ['img', 'iframe', 'table', 'jodit'];
config_1.Config.prototype.resizer = {
    showSize: true,
    hideSizeTimeout: 1000,
    forImageChangeAttributes: true,
    min_width: 10,
    min_height: 10,
    useAspectRatio: ['img']
};


/***/ }),

/***/ 69257:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resizer = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(6316);
var consts = __webpack_require__(86893);
var constants_1 = __webpack_require__(86893);
var dom_1 = __webpack_require__(24263);
var helpers_1 = __webpack_require__(40332);
var plugin_1 = __webpack_require__(85605);
var global_1 = __webpack_require__(17332);
var decorators_1 = __webpack_require__(43441);
var global_2 = __webpack_require__(17332);
__webpack_require__(36560);
var keyBInd = '__jodit-resizer_binded';
var resizer = (function (_super) {
    tslib_1.__extends(resizer, _super);
    function resizer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.LOCK_KEY = 'resizer';
        _this.element = null;
        _this.isResizeMode = false;
        _this.isShown = false;
        _this.startX = 0;
        _this.startY = 0;
        _this.width = 0;
        _this.height = 0;
        _this.ratio = 0;
        _this.rect = _this.j.c.fromHTML("<div title=\"".concat(_this.j.i18n('Press Alt for custom resizing'), "\" class=\"jodit-resizer\">\n\t\t\t\t<div class=\"jodit-resizer__top-left\"></div>\n\t\t\t\t<div class=\"jodit-resizer__top-right\"></div>\n\t\t\t\t<div class=\"jodit-resizer__bottom-right\"></div>\n\t\t\t\t<div class=\"jodit-resizer__bottom-left\"></div>\n\t\t\t\t<span>100x100</span>\n\t\t\t</div>"));
        _this.sizeViewer = _this.rect.getElementsByTagName('span')[0];
        _this.pointerX = 0;
        _this.pointerY = 0;
        _this.isAltMode = false;
        _this.onClickElement = function (element) {
            if (_this.isResizeMode) {
                return;
            }
            if (_this.element !== element || !_this.isShown) {
                _this.element = element;
                _this.show();
                if (dom_1.Dom.isTag(_this.element, 'img') && !_this.element.complete) {
                    _this.j.e.one(_this.element, 'load', _this.updateSize);
                }
            }
        };
        _this.updateSize = function () {
            if (_this.isInDestruct || !_this.isShown) {
                return;
            }
            if (_this.element && _this.rect) {
                var workplacePosition = _this.getWorkplacePosition();
                var pos = (0, helpers_1.offset)(_this.element, _this.j, _this.j.ed), left = parseInt(_this.rect.style.left || '0', 10), top = parseInt(_this.rect.style.top || '0', 10), w = _this.rect.offsetWidth, h = _this.rect.offsetHeight;
                var newTop = pos.top - workplacePosition.top, newLeft = pos.left - workplacePosition.left;
                if (top !== newTop ||
                    left !== newLeft ||
                    w !== _this.element.offsetWidth ||
                    h !== _this.element.offsetHeight) {
                    (0, helpers_1.css)(_this.rect, {
                        top: newTop,
                        left: newLeft,
                        width: _this.element.offsetWidth,
                        height: _this.element.offsetHeight
                    });
                    if (_this.j.events) {
                        _this.j.e.fire(_this.element, 'changesize');
                        if (!isNaN(left)) {
                            _this.j.e.fire('resize');
                        }
                    }
                }
            }
        };
        _this.hideSizeViewer = function () {
            _this.sizeViewer.style.opacity = '0';
        };
        return _this;
    }
    resizer.prototype.afterInit = function (editor) {
        var _this = this;
        (0, helpers_1.$$)('div', this.rect).forEach(function (resizeHandle) {
            editor.e.on(resizeHandle, 'mousedown.resizer touchstart.resizer', _this.onStartResizing.bind(_this, resizeHandle));
        });
        global_1.eventEmitter.on('hideHelpers', this.hide);
        editor.e
            .on('readonly', function (isReadOnly) {
            if (isReadOnly) {
                _this.hide();
            }
        })
            .on('afterInit changePlace', this.addEventListeners.bind(this))
            .on('afterGetValueFromEditor.resizer', function (data) {
            var rgx = /<jodit[^>]+data-jodit_iframe_wrapper[^>]+>(.*?<iframe[^>]*>.*?<\/iframe>.*?)<\/jodit>/gi;
            if (rgx.test(data.value)) {
                data.value = data.value.replace(rgx, '$1');
            }
        })
            .on('hideResizer', this.hide)
            .on('change afterInit afterSetMode', this.onChangeEditor);
        this.addEventListeners();
        this.onChangeEditor();
    };
    resizer.prototype.onEditorClick = function (e) {
        var node = e.target;
        var _a = this.j, editor = _a.editor, allowResizeTags = _a.options.allowResizeTags;
        while (node && node !== editor) {
            if (dom_1.Dom.isTag(node, allowResizeTags)) {
                this.bind(node);
                this.onClickElement(node);
                return;
            }
            node = node.parentNode;
        }
    };
    resizer.prototype.addEventListeners = function () {
        var _this = this;
        var editor = this.j;
        editor.e
            .off(editor.editor, '.resizer')
            .off(editor.ow, '.resizer')
            .on(editor.editor, 'keydown.resizer', function (e) {
            if (_this.isShown &&
                e.key === consts.KEY_DELETE &&
                _this.element &&
                !dom_1.Dom.isTag(_this.element, 'table')) {
                _this.onDelete(e);
            }
        })
            .on(editor.ow, 'resize.resizer', this.updateSize)
            .on('resize.resizer', this.updateSize)
            .on([editor.ow, editor.editor], 'scroll.resizer', function () {
            if (_this.isShown && !_this.isResizeMode) {
                _this.hide();
            }
        })
            .on(editor.ow, 'keydown.resizer', this.onKeyDown)
            .on(editor.ow, 'keyup.resizer', this.onKeyUp)
            .on(editor.ow, 'mouseup.resizer touchend.resizer', this.onClickOutside);
    };
    resizer.prototype.onStartResizing = function (resizeHandle, e) {
        if (!this.element || !this.element.parentNode) {
            this.hide();
            return false;
        }
        this.handle = resizeHandle;
        if (e.cancelable) {
            e.preventDefault();
        }
        e.stopImmediatePropagation();
        this.width = this.element.offsetWidth;
        this.height = this.element.offsetHeight;
        this.ratio = this.width / this.height;
        this.isResizeMode = true;
        this.startX = e.clientX;
        this.startY = e.clientY;
        this.pointerX = e.clientX;
        this.pointerY = e.clientY;
        var j = this.j;
        j.e.fire('hidePopup');
        j.lock(this.LOCK_KEY);
        j.e.on(j.ow, 'mousemove.resizer touchmove.resizer', this.onResize);
    };
    resizer.prototype.onEndResizing = function () {
        var j = this.j;
        j.unlock();
        this.isResizeMode = false;
        this.isAltMode = false;
        j.synchronizeValues();
        j.e.off(j.ow, 'mousemove.resizer touchmove.resizer', this.onResize);
    };
    resizer.prototype.onResize = function (e) {
        if (this.isResizeMode) {
            if (!this.element) {
                return;
            }
            this.pointerX = e.clientX;
            this.pointerY = e.clientY;
            var diff_x = void 0, diff_y = void 0;
            if (this.j.options.iframe) {
                var workplacePosition = this.getWorkplacePosition();
                diff_x = e.clientX + workplacePosition.left - this.startX;
                diff_y = e.clientY + workplacePosition.top - this.startY;
            }
            else {
                diff_x = this.pointerX - this.startX;
                diff_y = this.pointerY - this.startY;
            }
            var className = this.handle.className;
            var new_w = 0, new_h = 0;
            var uar = this.j.o.resizer.useAspectRatio;
            if (!this.isAltMode &&
                (uar === true ||
                    (Array.isArray(uar) && dom_1.Dom.isTag(this.element, uar)))) {
                if (diff_x) {
                    new_w =
                        this.width +
                            (className.match(/left/) ? -1 : 1) * diff_x;
                    new_h = Math.round(new_w / this.ratio);
                }
                else {
                    new_h =
                        this.height +
                            (className.match(/top/) ? -1 : 1) * diff_y;
                    new_w = Math.round(new_h * this.ratio);
                }
                if (new_w > (0, helpers_1.innerWidth)(this.j.editor, this.j.ow)) {
                    new_w = (0, helpers_1.innerWidth)(this.j.editor, this.j.ow);
                    new_h = Math.round(new_w / this.ratio);
                }
            }
            else {
                new_w =
                    this.width + (className.match(/left/) ? -1 : 1) * diff_x;
                new_h =
                    this.height + (className.match(/top/) ? -1 : 1) * diff_y;
            }
            if (new_w > this.j.o.resizer.min_width) {
                if (new_w < this.rect.parentNode.offsetWidth) {
                    this.applySize(this.element, 'width', new_w);
                }
                else {
                    this.applySize(this.element, 'width', '100%');
                }
            }
            if (new_h > this.j.o.resizer.min_height) {
                this.applySize(this.element, 'height', new_h);
            }
            this.updateSize();
            this.showSizeViewer(this.element.offsetWidth, this.element.offsetHeight);
            e.stopImmediatePropagation();
        }
    };
    resizer.prototype.onKeyDown = function (e) {
        this.isAltMode = e.key === constants_1.KEY_ALT;
        if (!this.isAltMode && this.isResizeMode) {
            this.onEndResizing();
        }
    };
    resizer.prototype.onKeyUp = function () {
        if (this.isAltMode && this.isResizeMode && this.element) {
            this.width = this.element.offsetWidth;
            this.height = this.element.offsetHeight;
            this.ratio = this.width / this.height;
            this.startX = this.pointerX;
            this.startY = this.pointerY;
        }
        this.isAltMode = false;
    };
    resizer.prototype.onClickOutside = function (e) {
        if (!this.isShown) {
            return;
        }
        if (!this.isResizeMode) {
            return this.hide();
        }
        e.stopImmediatePropagation();
        this.onEndResizing();
    };
    resizer.prototype.getWorkplacePosition = function () {
        return (0, helpers_1.offset)((this.rect.parentNode || this.j.od.documentElement), this.j, this.j.od, true);
    };
    resizer.prototype.applySize = function (element, key, value) {
        var changeAttrs = dom_1.Dom.isImage(element) && this.j.o.resizer.forImageChangeAttributes;
        if (changeAttrs) {
            (0, helpers_1.attr)(element, key, value);
        }
        if (!changeAttrs || element.style[key]) {
            (0, helpers_1.css)(element, key, value);
        }
    };
    resizer.prototype.onDelete = function (e) {
        if (!this.element) {
            return;
        }
        if (this.element.tagName !== 'JODIT') {
            this.j.s.select(this.element);
        }
        else {
            dom_1.Dom.safeRemove(this.element);
            this.hide();
            e.preventDefault();
        }
    };
    resizer.prototype.onChangeEditor = function () {
        if (this.isShown) {
            if (!this.element || !this.element.parentNode) {
                this.hide();
            }
            else {
                this.updateSize();
            }
        }
        (0, helpers_1.$$)('iframe', this.j.editor).forEach(this.bind);
    };
    resizer.prototype.bind = function (element) {
        var _this = this;
        if (!dom_1.Dom.isHTMLElement(element) ||
            !this.j.o.allowResizeTags.includes(element.tagName.toLowerCase()) ||
            (0, helpers_1.dataBind)(element, keyBInd)) {
            return;
        }
        (0, helpers_1.dataBind)(element, keyBInd, true);
        var wrapper;
        if (dom_1.Dom.isTag(element, 'iframe')) {
            var iframe_1 = element;
            if (dom_1.Dom.isHTMLElement(element.parentNode) &&
                (0, helpers_1.attr)(element.parentNode, '-jodit_iframe_wrapper')) {
                element = element.parentNode;
            }
            else {
                wrapper = this.j.createInside.element('jodit', {
                    'data-jodit-temp': 1,
                    contenteditable: false,
                    draggable: true,
                    'data-jodit_iframe_wrapper': 1
                });
                (0, helpers_1.attr)(wrapper, 'style', (0, helpers_1.attr)(element, 'style'));
                (0, helpers_1.css)(wrapper, {
                    display: element.style.display === 'inline-block'
                        ? 'inline-block'
                        : 'block',
                    width: element.offsetWidth,
                    height: element.offsetHeight
                });
                if (element.parentNode) {
                    element.parentNode.insertBefore(wrapper, element);
                }
                wrapper.appendChild(element);
                this.j.e.on(wrapper, 'click', function () {
                    (0, helpers_1.attr)(wrapper, 'data-jodit-wrapper_active', true);
                });
                element = wrapper;
            }
            this.j.e
                .off(element, 'mousedown.select touchstart.select')
                .on(element, 'mousedown.select touchstart.select', function () {
                _this.j.s.select(element);
            })
                .off(element, 'changesize')
                .on(element, 'changesize', function () {
                iframe_1.setAttribute('width', element.offsetWidth + 'px');
                iframe_1.setAttribute('height', element.offsetHeight + 'px');
            });
        }
        this.j.e.on(element, 'dragstart', this.hide);
        if ( true && constants_1.IS_IE) {
            this.j.e.on(element, 'mousedown', function (event) {
                if (dom_1.Dom.isTag(element, 'img')) {
                    event.preventDefault();
                }
            });
        }
    };
    resizer.prototype.showSizeViewer = function (w, h) {
        if (!this.j.o.resizer.showSize) {
            return;
        }
        if (w < this.sizeViewer.offsetWidth ||
            h < this.sizeViewer.offsetHeight) {
            this.hideSizeViewer();
            return;
        }
        this.sizeViewer.style.opacity = '1';
        this.sizeViewer.textContent = "".concat(w, " x ").concat(h);
        this.j.async.setTimeout(this.hideSizeViewer, {
            timeout: this.j.o.resizer.hideSizeTimeout,
            label: 'hideSizeViewer'
        });
    };
    resizer.prototype.show = function () {
        if (this.j.o.readonly || this.isShown) {
            return;
        }
        this.isShown = true;
        if (!this.rect.parentNode) {
            (0, helpers_1.markOwner)(this.j, this.rect);
            this.j.workplace.appendChild(this.rect);
        }
        if (this.j.isFullSize) {
            this.rect.style.zIndex = (0, helpers_1.css)(this.j.container, 'zIndex').toString();
        }
        this.updateSize();
    };
    resizer.prototype.hide = function () {
        if (!this.isResizeMode) {
            this.isResizeMode = false;
            this.isShown = false;
            this.element = null;
            dom_1.Dom.safeRemove(this.rect);
            (0, helpers_1.$$)("[data-jodit-wrapper_active='true']", this.j.editor).forEach(function (elm) { return (0, helpers_1.attr)(elm, 'data-jodit-wrapper_active', false); });
        }
    };
    resizer.prototype.beforeDestruct = function (jodit) {
        this.hide();
        global_1.eventEmitter.off('hideHelpers', this.hide);
        jodit.e.off(this.j.ow, '.resizer').off('.resizer');
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)(':click')
    ], resizer.prototype, "onEditorClick", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizer.prototype, "onStartResizing", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizer.prototype, "onEndResizing", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizer.prototype, "onResize", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizer.prototype, "onKeyDown", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizer.prototype, "onKeyUp", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizer.prototype, "onClickOutside", null);
    tslib_1.__decorate([
        (0, decorators_1.debounce)()
    ], resizer.prototype, "onChangeEditor", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizer.prototype, "bind", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], resizer.prototype, "hide", null);
    return resizer;
}(plugin_1.Plugin));
exports.resizer = resizer;
global_2.pluginSystem.add('resizer', resizer);


/***/ }),

/***/ 61975:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var icon_1 = __webpack_require__(77904);
__webpack_require__(59535);
config_1.Config.prototype.useSearch = true;
config_1.Config.prototype.search = {
    lazyIdleTimeout: 0
};
icon_1.Icon.set('search', __webpack_require__(41197));
config_1.Config.prototype.controls.find = {
    tooltip: 'Find',
    icon: 'search',
    exec: function (jodit, _, _a) {
        var control = _a.control;
        var value = control.args && control.args[0];
        switch (value) {
            case 'findPrevious':
                jodit.e.fire('searchPrevious');
                break;
            case 'findNext':
                jodit.e.fire('searchNext');
                break;
            case 'replace':
                jodit.execCommand('openReplaceDialog');
                break;
            default:
                jodit.execCommand('openSearchDialog');
        }
    },
    list: {
        search: 'Find',
        findNext: 'Find Next',
        findPrevious: 'Find Previous',
        replace: 'Replace'
    },
    childTemplate: function (_, k, v) { return v; }
};


/***/ }),

/***/ 73934:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(18562), exports);
tslib_1.__exportStar(__webpack_require__(3928), exports);


/***/ }),

/***/ 18562:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SentenceFinder = void 0;
var tslib_1 = __webpack_require__(20255);
var fuzzy_search_index_1 = __webpack_require__(93163);
var SentenceFinder = (function () {
    function SentenceFinder(searchIndex) {
        if (searchIndex === void 0) { searchIndex = fuzzy_search_index_1.fuzzySearchIndex; }
        this.searchIndex = searchIndex;
        this.queue = [];
        this.value = '';
    }
    SentenceFinder.prototype.add = function (node) {
        var _a;
        var value = ((_a = node.nodeValue) !== null && _a !== void 0 ? _a : '').toLowerCase();
        if (!value.length) {
            return;
        }
        var index = this.value.length;
        this.queue.push({
            startIndex: index,
            endIndex: index + value.length,
            node: node
        });
        this.value += value;
    };
    SentenceFinder.prototype.ranges = function (needle, position) {
        var _a;
        if (position === void 0) { position = 0; }
        var results = [];
        var index = position, len = 0, startQueueIndex = 0;
        do {
            _a = tslib_1.__read(this.searchIndex(needle, this.value, index), 2), index = _a[0], len = _a[1];
            if (index !== -1) {
                var startContainer = void 0, startOffset = 0, endContainer = void 0, endOffset = 0;
                for (var i = startQueueIndex; i < this.queue.length; i += 1) {
                    if (!startContainer && this.queue[i].endIndex > index) {
                        startContainer = this.queue[i].node;
                        startOffset = index - this.queue[i].startIndex;
                    }
                    if (startContainer &&
                        this.queue[i].endIndex >= index + len) {
                        endContainer = this.queue[i].node;
                        endOffset = index + len - this.queue[i].startIndex;
                        startQueueIndex = i;
                        break;
                    }
                }
                if (startContainer && endContainer) {
                    results.push({
                        startContainer: startContainer,
                        startOffset: startOffset,
                        endContainer: endContainer,
                        endOffset: endOffset
                    });
                }
                index += len;
            }
        } while (index !== -1);
        return results.length === 0 ? null : results;
    };
    return SentenceFinder;
}());
exports.SentenceFinder = SentenceFinder;


/***/ }),

/***/ 3928:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSelectionWrapper = exports.clearSelectionWrappersFromHTML = exports.clearSelectionWrappers = exports.getSelectionWrappers = exports.wrapRangesTextsInTmpSpan = void 0;
var tslib_1 = __webpack_require__(20255);
var dom_1 = __webpack_require__(24263);
var selector_1 = __webpack_require__(54188);
var TMP_ATTR = 'jd-tmp-selection';
function wrapRangesTextsInTmpSpan(rng, restRanges, ci, root) {
    var _a, e_1, _b;
    if (rng.startContainer.nodeValue == null ||
        rng.endContainer.nodeValue == null) {
        return;
    }
    var span = ci.element('span', (_a = {},
        _a[TMP_ATTR] = true,
        _a));
    dom_1.Dom.markTemporary(span);
    var startText = rng.startContainer.nodeValue;
    var diff = 0;
    if (rng.startOffset !== 0) {
        var text = ci.text(startText.substring(0, rng.startOffset));
        rng.startContainer.nodeValue = startText.substring(rng.startOffset);
        dom_1.Dom.before(rng.startContainer, text);
        if (rng.startContainer === rng.endContainer) {
            diff = rng.startOffset;
            rng.endOffset -= diff;
        }
        rng.startOffset = 0;
    }
    var endText = rng.endContainer.nodeValue;
    if (rng.endOffset !== endText.length) {
        var text = ci.text(endText.substring(rng.endOffset));
        rng.endContainer.nodeValue = endText.substring(0, rng.endOffset);
        dom_1.Dom.after(rng.endContainer, text);
        try {
            for (var restRanges_1 = tslib_1.__values(restRanges), restRanges_1_1 = restRanges_1.next(); !restRanges_1_1.done; restRanges_1_1 = restRanges_1.next()) {
                var range = restRanges_1_1.value;
                if (range.startContainer === rng.endContainer) {
                    range.startContainer = text;
                    range.startOffset = range.startOffset - rng.endOffset - diff;
                    if (range.endContainer === rng.endContainer) {
                        range.endContainer = text;
                        range.endOffset = range.endOffset - rng.endOffset - diff;
                    }
                }
                else {
                    break;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (restRanges_1_1 && !restRanges_1_1.done && (_b = restRanges_1.return)) _b.call(restRanges_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        rng.endOffset = rng.endContainer.nodeValue.length;
    }
    var next = rng.startContainer;
    do {
        if (!next) {
            break;
        }
        if (dom_1.Dom.isText(next) && !isSelectionWrapper(next.parentNode)) {
            dom_1.Dom.wrap(next, span.cloneNode(), ci);
        }
        if (next === rng.endContainer) {
            break;
        }
        var step = next.firstChild || next.nextSibling;
        if (!step) {
            while (next && !next.nextSibling && next !== root) {
                next = next.parentNode;
            }
            step = next === null || next === void 0 ? void 0 : next.nextSibling;
        }
        next = step;
    } while (next && next !== root);
}
exports.wrapRangesTextsInTmpSpan = wrapRangesTextsInTmpSpan;
function getSelectionWrappers(root) {
    return (0, selector_1.$$)("[".concat(TMP_ATTR, "]"), root);
}
exports.getSelectionWrappers = getSelectionWrappers;
function clearSelectionWrappers(root) {
    getSelectionWrappers(root).forEach(function (span) { return dom_1.Dom.unwrap(span); });
}
exports.clearSelectionWrappers = clearSelectionWrappers;
function clearSelectionWrappersFromHTML(root) {
    return root.replace(RegExp("<span[^>]+".concat(TMP_ATTR, "[^>]+>(.*?)</span>"), 'g'), '$1');
}
exports.clearSelectionWrappersFromHTML = clearSelectionWrappersFromHTML;
function isSelectionWrapper(node) {
    return dom_1.Dom.isElement(node) && node.hasAttribute(TMP_ATTR);
}
exports.isSelectionWrapper = isSelectionWrapper;


/***/ }),

/***/ 59535:
/***/ (function() {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */


/***/ }),

/***/ 14889:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.search = void 0;
var tslib_1 = __webpack_require__(20255);
var dom_1 = __webpack_require__(64968);
var plugin_1 = __webpack_require__(57549);
var decorators_1 = __webpack_require__(43441);
var search_1 = __webpack_require__(72235);
var helpers_1 = __webpack_require__(40332);
var global_1 = __webpack_require__(17332);
var helpers_2 = __webpack_require__(73934);
__webpack_require__(61975);
var search = (function (_super) {
    tslib_1.__extends(search, _super);
    function search() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.buttons = [
            {
                name: 'find',
                group: 'search'
            }
        ];
        _this.previousQuery = '';
        _this.drawPromise = null;
        _this.walker = null;
        _this.walkerCount = null;
        _this.cache = {};
        _this.wrapFrameRequest = 0;
        return _this;
    }
    Object.defineProperty(search.prototype, "ui", {
        get: function () {
            return new search_1.UISearch(this.j);
        },
        enumerable: false,
        configurable: true
    });
    search.prototype.updateCounters = function () {
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.ui.isOpened) {
                            return [2];
                        }
                        _a = this.ui;
                        return [4, this.calcCounts(this.ui.query)];
                    case 1:
                        _a.count = _b.sent();
                        return [2];
                }
            });
        });
    };
    search.prototype.onPressReplaceButton = function () {
        this.findAndReplace(this.ui.query);
        this.updateCounters();
    };
    search.prototype.tryScrollToElement = function (startContainer) {
        var parentBox = dom_1.Dom.closest(startContainer, dom_1.Dom.isElement, this.j.editor);
        if (!parentBox) {
            parentBox = dom_1.Dom.prev(startContainer, dom_1.Dom.isElement, this.j.editor);
        }
        parentBox &&
            parentBox !== this.j.editor &&
            (0, helpers_1.scrollIntoViewIfNeeded)(parentBox, this.j.editor, this.j.ed);
    };
    search.prototype.calcCounts = function (query) {
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.findQueryBounds(query, 'walkerCount')];
                    case 1: return [2, (_a.sent()).length];
                }
            });
        });
    };
    search.prototype.findQueryBounds = function (query, walkerKey) {
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            var walker;
            return tslib_1.__generator(this, function (_a) {
                walker = this[walkerKey];
                if (walker) {
                    walker.break();
                }
                walker = new dom_1.LazyWalker(this.j.async, {
                    timeout: this.j.o.search.lazyIdleTimeout
                });
                this[walkerKey] = walker;
                return [2, this.find(walker, query).catch(function (e) {
                         false && 0;
                        return [];
                    })];
            });
        });
    };
    search.prototype.findAndReplace = function (query) {
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            var bounds, currentIndex, bound, rng, textNode;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.findQueryBounds(query, 'walker')];
                    case 1:
                        bounds = _a.sent();
                        if (!bounds.length) {
                            return [2, false];
                        }
                        currentIndex = this.findCurrentIndexInRanges(bounds, this.j.s.range);
                        if (currentIndex === -1) {
                            currentIndex = 0;
                        }
                        bound = bounds[currentIndex];
                        if (!bound) return [3, 6];
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, , 4, 5]);
                        rng = this.j.ed.createRange();
                        rng.setStart(bound.startContainer, bound.startOffset);
                        rng.setEnd(bound.endContainer, bound.endOffset);
                        rng.deleteContents();
                        textNode = this.j.createInside.text(this.ui.replace);
                        dom_1.Dom.safeInsertNode(rng, textNode);
                        (0, helpers_2.clearSelectionWrappers)(this.j.editor);
                        this.j.s.setCursorAfter(textNode);
                        this.tryScrollToElement(textNode);
                        this.cache = {};
                        this.ui.currentIndex = currentIndex;
                        return [4, this.findAndSelect(query, true).catch(function (e) {
                                 false && 0;
                                return null;
                            })];
                    case 3:
                        _a.sent();
                        return [3, 5];
                    case 4:
                        this.j.synchronizeValues();
                        return [7];
                    case 5:
                        this.j.e.fire('afterFindAndReplace');
                        return [2, true];
                    case 6: return [2, false];
                }
            });
        });
    };
    search.prototype.findAndSelect = function (query, next) {
        var _a;
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            var bounds, currentIndex, bound, rng;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4, this.findQueryBounds(query, 'walker')];
                    case 1:
                        bounds = _b.sent();
                        if (!bounds.length) {
                            return [2, false];
                        }
                        if (this.previousQuery !== query ||
                            !(0, helpers_2.getSelectionWrappers)(this.j.editor).length) {
                            (_a = this.drawPromise) === null || _a === void 0 ? void 0 : _a.rejectCallback();
                            this.j.async.cancelAnimationFrame(this.wrapFrameRequest);
                            (0, helpers_2.clearSelectionWrappers)(this.j.editor);
                            this.drawPromise = this.drawSelectionRanges(bounds);
                        }
                        this.previousQuery = query;
                        currentIndex = this.ui.currentIndex - 1;
                        if (currentIndex === -1) {
                            currentIndex = 0;
                        }
                        else if (next) {
                            currentIndex =
                                currentIndex === bounds.length - 1 ? 0 : currentIndex + 1;
                        }
                        else {
                            currentIndex =
                                currentIndex === 0 ? bounds.length - 1 : currentIndex - 1;
                        }
                        this.ui.currentIndex = currentIndex + 1;
                        bound = bounds[currentIndex];
                        if (!bound) return [3, 4];
                        rng = this.j.ed.createRange();
                        try {
                            rng.setStart(bound.startContainer, bound.startOffset);
                            rng.setEnd(bound.endContainer, bound.endOffset);
                            this.j.s.selectRange(rng);
                        }
                        catch (e) {
                             false && 0;
                        }
                        this.tryScrollToElement(bound.startContainer);
                        return [4, this.updateCounters()];
                    case 2:
                        _b.sent();
                        return [4, this.drawPromise];
                    case 3:
                        _b.sent();
                        this.j.e.fire('afterFindAndSelect');
                        return [2, true];
                    case 4: return [2, false];
                }
            });
        });
    };
    search.prototype.findCurrentIndexInRanges = function (bounds, range) {
        return bounds.findIndex(function (bound) {
            return bound.startContainer === range.startContainer &&
                bound.startOffset === range.startOffset &&
                bound.endContainer === range.startContainer &&
                bound.endOffset === range.endOffset;
        });
    };
    search.prototype.isValidCache = function (promise) {
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, promise];
                    case 1:
                        res = _a.sent();
                        return [2, res.every(function (r) {
                                var _a, _b, _c, _d;
                                return r.startContainer.isConnected &&
                                    r.startOffset <= ((_b = (_a = r.startContainer.nodeValue) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) &&
                                    r.endContainer.isConnected &&
                                    r.endOffset <= ((_d = (_c = r.endContainer.nodeValue) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0);
                            })];
                }
            });
        });
    };
    search.prototype.find = function (walker, query) {
        return tslib_1.__awaiter(this, void 0, Promise, function () {
            var cache, _a;
            var _this = this;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!query.length) {
                            return [2, []];
                        }
                        cache = this.cache[query];
                        _a = cache;
                        if (!_a) return [3, 2];
                        return [4, this.isValidCache(cache)];
                    case 1:
                        _a = (_b.sent());
                        _b.label = 2;
                    case 2:
                        if (_a) {
                            return [2, cache];
                        }
                        this.cache[query] = this.j.async.promise(function (resolve) {
                            var sentence = new helpers_2.SentenceFinder(_this.j.o.search.fuzzySearch);
                            walker
                                .on('break', function () {
                                resolve([]);
                            })
                                .on('visit', function (elm) {
                                if (dom_1.Dom.isText(elm)) {
                                    sentence.add(elm);
                                }
                                return false;
                            })
                                .on('end', function () {
                                var _a;
                                resolve((_a = sentence.ranges(query)) !== null && _a !== void 0 ? _a : []);
                            })
                                .setWork(_this.j.editor);
                        });
                        return [2, this.cache[query]];
                }
            });
        });
    };
    search.prototype.drawSelectionRanges = function (ranges) {
        var _this = this;
        var _a = this.j, async = _a.async, ci = _a.createInside, editor = _a.editor;
        async.cancelAnimationFrame(this.wrapFrameRequest);
        var parts = tslib_1.__spreadArray([], tslib_1.__read(ranges), false);
        var sRange, total = 0;
        return async.promise(function (resolve) {
            var drawParts = function () {
                do {
                    sRange = parts.shift();
                    if (sRange) {
                        (0, helpers_2.wrapRangesTextsInTmpSpan)(sRange, parts, ci, editor);
                    }
                    total += 1;
                } while (sRange && total <= 5);
                if (parts.length) {
                    _this.wrapFrameRequest =
                        async.requestAnimationFrame(drawParts);
                }
                else {
                    resolve();
                }
            };
            drawParts();
        });
    };
    search.prototype.onAfterGetValueFromEditor = function (data) {
        data.value = (0, helpers_2.clearSelectionWrappersFromHTML)(data.value);
    };
    search.prototype.afterInit = function (editor) {
        var _this = this;
        if (editor.o.useSearch) {
            var self_1 = this;
            editor.e
                .on('beforeSetMode.search', function () {
                _this.ui.close();
            })
                .on(this.ui, 'afterClose', function () {
                (0, helpers_2.clearSelectionWrappers)(editor.editor);
                _this.ui.currentIndex = 0;
                _this.ui.count = 0;
                _this.cache = {};
            })
                .on('click', function () {
                _this.ui.currentIndex = 0;
                (0, helpers_2.clearSelectionWrappers)(editor.editor);
            })
                .on('change.search', function () {
                _this.cache = {};
            })
                .on('keydown.search mousedown.search', editor.async.debounce(function () {
                if (_this.ui.selInfo) {
                    editor.s.removeMarkers();
                    _this.ui.selInfo = null;
                }
                if (_this.ui.isOpened) {
                    _this.updateCounters();
                }
            }, editor.defaultTimeout))
                .on('searchNext.search searchPrevious.search', function () {
                if (!_this.ui.isOpened) {
                    _this.ui.open();
                }
                return self_1
                    .findAndSelect(self_1.ui.query, editor.e.current === 'searchNext')
                    .catch(function (e) {
                     false && 0;
                });
            })
                .on('search.search', function (value, next) {
                if (next === void 0) { next = true; }
                _this.ui.currentIndex = 0;
                return self_1.findAndSelect(value || '', next).catch(function (e) {
                     false && 0;
                });
            });
            editor
                .registerCommand('search', {
                exec: function (command, value, next) {
                    if (next === void 0) { next = true; }
                    value &&
                        self_1.findAndSelect(value, next).catch(function (e) {
                             false && 0;
                        });
                    return false;
                }
            })
                .registerCommand('openSearchDialog', {
                exec: function (command, value) {
                    self_1.ui.open(value);
                    return false;
                },
                hotkeys: ['ctrl+f', 'cmd+f']
            })
                .registerCommand('openReplaceDialog', {
                exec: function (command, query, replace) {
                    if (!editor.o.readonly) {
                        self_1.ui.open(query, replace, true);
                    }
                    return false;
                },
                hotkeys: ['ctrl+h', 'cmd+h']
            });
        }
    };
    search.prototype.beforeDestruct = function (jodit) {
        this.ui.destruct();
        jodit.e.off('.search');
    };
    tslib_1.__decorate([
        decorators_1.cache
    ], search.prototype, "ui", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('ui:needUpdateCounters')
    ], search.prototype, "updateCounters", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('ui:pressReplaceButton')
    ], search.prototype, "onPressReplaceButton", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], search.prototype, "findQueryBounds", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], search.prototype, "findAndReplace", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], search.prototype, "findAndSelect", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], search.prototype, "find", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':afterGetValueFromEditor')
    ], search.prototype, "onAfterGetValueFromEditor", null);
    return search;
}(plugin_1.Plugin));
exports.search = search;
global_1.pluginSystem.add('search', search);


/***/ }),

/***/ 72235:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UISearch = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(88582);
var ui_1 = __webpack_require__(2074);
var helpers_1 = __webpack_require__(40332);
var constants_1 = __webpack_require__(86893);
var consts = __webpack_require__(86893);
var decorators_1 = __webpack_require__(43441);
var dom_1 = __webpack_require__(64968);
var UISearch = (function (_super) {
    tslib_1.__extends(UISearch, _super);
    function UISearch(jodit) {
        var _this = _super.call(this, jodit) || this;
        _this.selInfo = null;
        _this._currentIndex = 0;
        _this.isOpened = false;
        var _a = (0, helpers_1.refs)(_this.container), query = _a.query, replace = _a.replace, cancel = _a.cancel, next = _a.next, prev = _a.prev, replaceBtn = _a.replaceBtn, current = _a.current, count = _a.count;
        _this.queryInput = query;
        _this.replaceInput = replace;
        _this.closeButton = cancel;
        _this.replaceButton = replaceBtn;
        _this.currentBox = current;
        _this.countBox = count;
        jodit.e
            .on(_this.closeButton, 'pointerdown', function () {
            _this.close();
            return false;
        })
            .on(_this.queryInput, 'input', function () {
            _this.currentIndex = 0;
        })
            .on(_this.queryInput, 'pointerdown', function () {
            if (jodit.s.isFocused()) {
                jodit.s.removeMarkers();
                _this.selInfo = jodit.s.save();
            }
        })
            .on(_this.replaceButton, 'pointerdown', function () {
            jodit.e.fire(_this, 'pressReplaceButton');
            return false;
        })
            .on(next, 'pointerdown', function () {
            jodit.e.fire('searchNext');
            return false;
        })
            .on(prev, 'pointerdown', function () {
            jodit.e.fire('searchPrevious');
            return false;
        })
            .on(_this.queryInput, 'input', function () {
            _this.setMod('empty-query', !(0, helpers_1.trim)(_this.queryInput.value).length);
        })
            .on(_this.queryInput, 'keydown', _this.j.async.debounce(function (e) {
            switch (e.key) {
                case consts.KEY_ENTER:
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    if (jodit.e.fire('searchNext')) {
                        _this.close();
                    }
                    break;
                default:
                    jodit.e.fire(_this, 'needUpdateCounters');
                    break;
            }
        }, _this.j.defaultTimeout));
        return _this;
    }
    UISearch.prototype.className = function () {
        return 'UISearch';
    };
    UISearch.prototype.render = function () {
        return "<div>\n\t\t\t<div class=\"&__box\">\n\t\t\t\t<div class=\"&__inputs\">\n\t\t\t\t\t<input data-ref=\"query\" tabindex=\"0\" placeholder=\"~Search for~\" type=\"text\"/>\n\t\t\t\t\t<input data-ref=\"replace\" tabindex=\"0\" placeholder=\"~Replace with~\" type=\"text\"/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"&__counts\">\n\t\t\t\t\t<span data-ref=\"counter-box\">\n\t\t\t\t\t\t<span data-ref=\"current\">0</span><span>/</span><span data-ref=\"count\">0</span>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"&__buttons\">\n\t\t\t\t\t<button data-ref=\"next\" tabindex=\"0\" type=\"button\">".concat(ui_1.Icon.get('angle-down'), "</button>\n\t\t\t\t\t<button data-ref=\"prev\" tabindex=\"0\" type=\"button\">").concat(ui_1.Icon.get('angle-up'), "</button>\n\t\t\t\t\t<button data-ref=\"cancel\" tabindex=\"0\" type=\"button\">").concat(ui_1.Icon.get('cancel'), "</button>\n\t\t\t\t\t<button data-ref=\"replace-btn\" tabindex=\"0\" type=\"button\" class=\"jodit-ui-button\">~Replace~</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>");
    };
    Object.defineProperty(UISearch.prototype, "currentIndex", {
        get: function () {
            return this._currentIndex;
        },
        set: function (value) {
            this._currentIndex = value;
            this.currentBox.innerText = value.toString();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UISearch.prototype, "count", {
        set: function (value) {
            this.countBox.innerText = value.toString();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UISearch.prototype, "query", {
        get: function () {
            return this.queryInput.value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(UISearch.prototype, "replace", {
        get: function () {
            return this.replaceInput.value;
        },
        enumerable: false,
        configurable: true
    });
    UISearch.prototype.onEditorKeyDown = function (e) {
        if (!this.isOpened) {
            return;
        }
        var j = this.j;
        if (j.getRealMode() !== constants_1.MODE_WYSIWYG) {
            return;
        }
        switch (e.key) {
            case consts.KEY_ESC:
                this.close();
                break;
            case consts.KEY_F3:
                if (this.queryInput.value) {
                    j.e.fire(!e.shiftKey ? 'searchNext' : 'searchPrevious');
                    e.preventDefault();
                }
                break;
        }
    };
    UISearch.prototype.open = function (query, replace, searchAndReplace) {
        if (searchAndReplace === void 0) { searchAndReplace = false; }
        if (!this.isOpened) {
            this.j.workplace.appendChild(this.container);
            this.isOpened = true;
        }
        this.calcSticky(this.j.e.fire('getStickyState.sticky') || false);
        this.j.e.fire('hidePopup');
        this.setMod('replace', searchAndReplace);
        var selStr = query !== null && query !== void 0 ? query : (this.j.s.sel || '').toString();
        if (selStr) {
            this.queryInput.value = selStr;
        }
        if (replace) {
            this.replaceInput.value = replace;
        }
        this.setMod('empty-query', !selStr.length);
        this.j.e.fire(this, 'needUpdateCounters');
        if (selStr) {
            this.queryInput.select();
        }
        else {
            this.queryInput.focus();
        }
    };
    UISearch.prototype.close = function () {
        if (!this.isOpened) {
            return;
        }
        this.j.s.restore();
        dom_1.Dom.safeRemove(this.container);
        this.isOpened = false;
        this.j.e.fire(this, 'afterClose');
    };
    UISearch.prototype.calcSticky = function (enabled) {
        if (this.isOpened) {
            this.setMod('sticky', enabled);
            if (enabled) {
                var pos = (0, helpers_1.position)(this.j.toolbarContainer);
                (0, helpers_1.css)(this.container, {
                    top: pos.top + pos.height,
                    left: pos.left + pos.width
                });
            }
            else {
                (0, helpers_1.css)(this.container, {
                    top: null,
                    left: null
                });
            }
        }
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)([':keydown', 'queryInput:keydown'])
    ], UISearch.prototype, "onEditorKeyDown", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], UISearch.prototype, "open", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], UISearch.prototype, "close", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':toggleSticky')
    ], UISearch.prototype, "calcSticky", null);
    UISearch = tslib_1.__decorate([
        decorators_1.component
    ], UISearch);
    return UISearch;
}(ui_1.UIElement));
exports.UISearch = UISearch;


/***/ }),

/***/ 14189:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.tableAllowCellSelection = true;


/***/ }),

/***/ 37458:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.selectCells = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var modules_1 = __webpack_require__(87837);
var dom_1 = __webpack_require__(24263);
var helpers_1 = __webpack_require__(40332);
var constants_1 = __webpack_require__(86893);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
__webpack_require__(14189);
var key = 'table_processor_observer';
var MOUSE_MOVE_LABEL = 'onMoveTableSelectCell';
var selectCells = (function (_super) {
    tslib_1.__extends(selectCells, _super);
    function selectCells() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.requires = ['select'];
        _this.selectedCell = null;
        _this.isSelectionMode = false;
        return _this;
    }
    Object.defineProperty(selectCells.prototype, "module", {
        get: function () {
            return this.j.getInstance('Table', this.j.o);
        },
        enumerable: false,
        configurable: true
    });
    selectCells.prototype.afterInit = function (jodit) {
        var _this = this;
        if (!jodit.o.tableAllowCellSelection) {
            return;
        }
        jodit.e
            .on('keydown.select-cells', function (event) {
            if (event.key === constants_1.KEY_TAB) {
                _this.unselectCells();
            }
        })
            .on('beforeCommand.select-cells', this.onExecCommand)
            .on('afterCommand.select-cells', this.onAfterCommand)
            .on([
            'clickEditor',
            'mousedownTd',
            'mousedownTh',
            'touchstartTd',
            'touchstartTh'
        ]
            .map(function (e) { return e + '.select-cells'; })
            .join(' '), this.onStartSelection)
            .on('clickTr clickTbody', function () {
            var _a;
            var cellsCount = _this.module.getAllSelectedCells().length;
            if (cellsCount) {
                if (cellsCount > 1) {
                    (_a = _this.j.s.sel) === null || _a === void 0 ? void 0 : _a.removeAllRanges();
                }
                return false;
            }
        });
    };
    selectCells.prototype.onStartSelection = function (cell) {
        if (this.j.o.readonly) {
            return;
        }
        this.unselectCells();
        if (cell === this.j.editor) {
            return;
        }
        var table = dom_1.Dom.closest(cell, 'table', this.j.editor);
        if (!cell || !table) {
            return;
        }
        if (!cell.firstChild) {
            cell.appendChild(this.j.createInside.element('br'));
        }
        this.isSelectionMode = true;
        this.selectedCell = cell;
        this.module.addSelection(cell);
        this.j.e
            .on(table, 'mousemove.select-cells touchmove.select-cells', this.j.async.throttle(this.onMove.bind(this, table), {
            label: MOUSE_MOVE_LABEL,
            timeout: this.j.defaultTimeout / 2
        }))
            .on(table, 'mouseup.select-cells touchend.select-cells', this.onStopSelection.bind(this, table));
        return false;
    };
    selectCells.prototype.onOutsideClick = function () {
        this.selectedCell = null;
        this.onRemoveSelection();
    };
    selectCells.prototype.onChange = function () {
        if (!this.j.isLocked && !this.isSelectionMode) {
            this.onRemoveSelection();
        }
    };
    selectCells.prototype.onMove = function (table, e) {
        var _this = this;
        var _a;
        if (this.j.o.readonly && !this.j.isLocked) {
            return;
        }
        if (this.j.isLockedNotBy(key)) {
            return;
        }
        var node = this.j.ed.elementFromPoint(e.clientX, e.clientY);
        if (!node) {
            return;
        }
        var cell = dom_1.Dom.closest(node, ['td', 'th'], table);
        if (!cell || !this.selectedCell) {
            return;
        }
        if (cell !== this.selectedCell) {
            this.j.lock(key);
        }
        this.unselectCells();
        var bound = modules_1.Table.getSelectedBound(table, [cell, this.selectedCell]), box = modules_1.Table.formalMatrix(table);
        for (var i = bound[0][0]; i <= bound[1][0]; i += 1) {
            for (var j = bound[0][1]; j <= bound[1][1]; j += 1) {
                this.module.addSelection(box[i][j]);
            }
        }
        var cellsCount = this.module.getAllSelectedCells().length;
        if (cellsCount > 1) {
            (_a = this.j.s.sel) === null || _a === void 0 ? void 0 : _a.removeAllRanges();
        }
        this.j.e.fire('hidePopup');
        e.stopPropagation();
        (function () {
            var n = _this.j.createInside.fromHTML('<div style="color:rgba(0,0,0,0.01);width:0;height:0">&nbsp;</div>');
            cell.appendChild(n);
            _this.j.async.setTimeout(function () {
                var _a;
                (_a = n.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(n);
            }, _this.j.defaultTimeout / 5);
        })();
    };
    selectCells.prototype.onRemoveSelection = function (e) {
        var _a;
        if (!((_a = e === null || e === void 0 ? void 0 : e.buffer) === null || _a === void 0 ? void 0 : _a.actionTrigger) &&
            !this.selectedCell &&
            this.module.getAllSelectedCells().length) {
            this.j.unlock();
            this.unselectCells();
            this.j.e.fire('hidePopup', 'cells');
            return;
        }
        this.isSelectionMode = false;
        this.selectedCell = null;
    };
    selectCells.prototype.onStopSelection = function (table, e) {
        var _this = this;
        if (!this.selectedCell) {
            return;
        }
        this.isSelectionMode = false;
        this.j.unlock();
        var node = this.j.ed.elementFromPoint(e.clientX, e.clientY);
        if (!node) {
            return;
        }
        var cell = dom_1.Dom.closest(node, ['td', 'th'], table);
        if (!cell) {
            return;
        }
        var ownTable = dom_1.Dom.closest(cell, 'table', table);
        if (ownTable && ownTable !== table) {
            return;
        }
        var bound = modules_1.Table.getSelectedBound(table, [cell, this.selectedCell]), box = modules_1.Table.formalMatrix(table);
        var max = box[bound[1][0]][bound[1][1]], min = box[bound[0][0]][bound[0][1]];
        this.j.e.fire('showPopup', table, function () {
            var minOffset = (0, helpers_1.position)(min, _this.j), maxOffset = (0, helpers_1.position)(max, _this.j);
            return {
                left: minOffset.left,
                top: minOffset.top,
                width: maxOffset.left - minOffset.left + maxOffset.width,
                height: maxOffset.top - minOffset.top + maxOffset.height
            };
        }, 'cells');
        (0, helpers_1.$$)('table', this.j.editor).forEach(function (table) {
            _this.j.e.off(table, 'mousemove.select-cells touchmove.select-cells mouseup.select-cells touchend.select-cells');
        });
        this.j.async.clearTimeout(MOUSE_MOVE_LABEL);
    };
    selectCells.prototype.unselectCells = function (currentCell) {
        var module = this.module;
        var cells = module.getAllSelectedCells();
        if (cells.length) {
            cells.forEach(function (cell) {
                if (!currentCell || currentCell !== cell) {
                    module.removeSelection(cell);
                }
            });
        }
    };
    selectCells.prototype.onExecCommand = function (command) {
        if (/table(splitv|splitg|merge|empty|bin|binrow|bincolumn|addcolumn|addrow)/.test(command)) {
            command = command.replace('table', '');
            var cells = this.module.getAllSelectedCells();
            if (cells.length) {
                var _a = tslib_1.__read(cells, 1), cell = _a[0];
                if (!cell) {
                    return;
                }
                var table_1 = dom_1.Dom.closest(cell, 'table', this.j.editor);
                if (!table_1) {
                    return;
                }
                switch (command) {
                    case 'splitv':
                        modules_1.Table.splitVertical(table_1, this.j);
                        break;
                    case 'splitg':
                        modules_1.Table.splitHorizontal(table_1, this.j);
                        break;
                    case 'merge':
                        modules_1.Table.mergeSelected(table_1, this.j);
                        break;
                    case 'empty':
                        cells.forEach(function (td) { return dom_1.Dom.detach(td); });
                        break;
                    case 'bin':
                        dom_1.Dom.safeRemove(table_1);
                        break;
                    case 'binrow':
                        new Set(cells.map(function (td) { return td.parentNode; })).forEach(function (row) {
                            modules_1.Table.removeRow(table_1, row.rowIndex);
                        });
                        break;
                    case 'bincolumn':
                        {
                            var columnsSet_1 = new Set(), columns = cells.reduce(function (acc, td) {
                                if (!columnsSet_1.has(td.cellIndex)) {
                                    acc.push(td);
                                    columnsSet_1.add(td.cellIndex);
                                }
                                return acc;
                            }, []);
                            columns.forEach(function (td) {
                                modules_1.Table.removeColumn(table_1, td.cellIndex);
                            });
                        }
                        break;
                    case 'addcolumnafter':
                    case 'addcolumnbefore':
                        modules_1.Table.appendColumn(table_1, cell.cellIndex, command === 'addcolumnafter', this.j.createInside);
                        break;
                    case 'addrowafter':
                    case 'addrowbefore':
                        modules_1.Table.appendRow(table_1, cell.parentNode, command === 'addrowafter', this.j.createInside);
                        break;
                }
            }
            return false;
        }
    };
    selectCells.prototype.onAfterCommand = function (command) {
        if (/^justify/.test(command)) {
            this.module
                .getAllSelectedCells()
                .forEach(function (elm) { return (0, helpers_1.alignElement)(command, elm); });
        }
    };
    selectCells.prototype.beforeDestruct = function (jodit) {
        this.onRemoveSelection();
        jodit.e.off('.select-cells');
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], selectCells.prototype, "onStartSelection", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':outsideClick')
    ], selectCells.prototype, "onOutsideClick", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':change')
    ], selectCells.prototype, "onChange", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], selectCells.prototype, "onRemoveSelection", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], selectCells.prototype, "onStopSelection", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], selectCells.prototype, "onExecCommand", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], selectCells.prototype, "onAfterCommand", null);
    return selectCells;
}(plugin_1.Plugin));
exports.selectCells = selectCells;
global_1.pluginSystem.add('selectCells', selectCells);


/***/ }),

/***/ 33100:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.select = {
    normalizeSelectionBeforeCutAndCopy: false
};


/***/ }),

/***/ 95323:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.select = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var decorators_1 = __webpack_require__(43441);
var camel_case_1 = __webpack_require__(26596);
var dom_1 = __webpack_require__(24263);
var ui_1 = __webpack_require__(2074);
var global_1 = __webpack_require__(17332);
__webpack_require__(33100);
var select = (function (_super) {
    tslib_1.__extends(select, _super);
    function select() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.proxyEventsList = [
            'click',
            'mousedown',
            'touchstart',
            'mouseup',
            'touchend'
        ];
        return _this;
    }
    select.prototype.afterInit = function (jodit) {
        var _this = this;
        this.proxyEventsList.forEach(function (eventName) {
            jodit.e.on(eventName + '.select', _this.onStartSelection);
        });
    };
    select.prototype.beforeDestruct = function (jodit) {
        var _this = this;
        this.proxyEventsList.forEach(function (eventName) {
            jodit.e.on(eventName + '.select', _this.onStartSelection);
        });
    };
    select.prototype.onStartSelection = function (e) {
        var j = this.j;
        var result, target = e.target;
        while (result === undefined && target && target !== j.editor) {
            result = j.e.fire((0, camel_case_1.camelCase)(e.type + '_' + target.nodeName.toLowerCase()), target, e);
            target = target.parentElement;
        }
        if (e.type === 'click' && result === undefined && target === j.editor) {
            j.e.fire(e.type + 'Editor', target, e);
        }
    };
    select.prototype.onOutsideClick = function (e) {
        var _this = this;
        var node = e.target;
        if (dom_1.Dom.up(node, function (elm) { return elm === _this.j.editor; })) {
            return;
        }
        var box = ui_1.UIElement.closestElement(node, ui_1.Popup);
        if (!box) {
            this.j.e.fire('outsideClick', e);
        }
    };
    select.prototype.beforeCommandCut = function (command) {
        var s = this.j.s;
        if (command === 'cut' && !s.isCollapsed()) {
            var current = s.current();
            if (current && dom_1.Dom.isOrContains(this.j.editor, current)) {
                this.onCopyNormalizeSelectionBound();
            }
        }
    };
    select.prototype.onCopyNormalizeSelectionBound = function (e) {
        var _a = this.j, s = _a.s, editor = _a.editor, o = _a.o;
        if (!o.select.normalizeSelectionBeforeCutAndCopy || s.isCollapsed()) {
            return;
        }
        if (e &&
            (!e.isTrusted ||
                !dom_1.Dom.isNode(e.target) ||
                !dom_1.Dom.isOrContains(editor, e.target))) {
            return;
        }
        this.jodit.s.expandSelection();
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], select.prototype, "onStartSelection", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)('ow:click')
    ], select.prototype, "onOutsideClick", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)([':beforeCommand'])
    ], select.prototype, "beforeCommandCut", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)([':copy', ':cut'])
    ], select.prototype, "onCopyNormalizeSelectionBound", null);
    return select;
}(plugin_1.Plugin));
exports.select = select;
global_1.pluginSystem.add('select', select);


/***/ }),

/***/ 53387:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.minWidth = 200;
config_1.Config.prototype.maxWidth = '100%';
config_1.Config.prototype.minHeight = 200;
config_1.Config.prototype.maxHeight = 'auto';
config_1.Config.prototype.saveHeightInStorage = false;


/***/ }),

/***/ 71003:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.size = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(30962);
var is_number_1 = __webpack_require__(61817);
var css_1 = __webpack_require__(26911);
var plugin_1 = __webpack_require__(85605);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
__webpack_require__(53387);
var size = (function (_super) {
    tslib_1.__extends(size, _super);
    function size() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.__resizeWorkspaces = _this.j.async.debounce(_this.__resizeWorkspaceImd, _this.j.defaultTimeout, true);
        return _this;
    }
    size.prototype.afterInit = function (editor) {
        editor.e
            .on('setHeight.size', this.__setHeight)
            .on('setWidth.size', this.__setWidth)
            .on('afterInit.size changePlace.size', this.__initialize, {
            top: true
        })
            .on(editor.ow, 'load.size', this.__resizeWorkspaces)
            .on('afterInit.size resize.size afterUpdateToolbar.size ' +
            'scroll.size afterResize.size', this.__resizeWorkspaces)
            .on('toggleFullSize.size toggleToolbar.size', this.__resizeWorkspaceImd);
        this.__initialize();
    };
    size.prototype.__initialize = function () {
        var j = this.j;
        if (j.o.inline) {
            return;
        }
        var height = j.o.height;
        if (j.o.saveHeightInStorage && height !== 'auto') {
            var localHeight = j.storage.get('height');
            if (localHeight) {
                height = localHeight;
            }
        }
        (0, css_1.css)(j.editor, {
            minHeight: '100%'
        });
        (0, css_1.css)(j.container, {
            minHeight: j.o.minHeight,
            maxHeight: j.o.maxHeight,
            minWidth: j.o.minWidth,
            maxWidth: j.o.maxWidth
        });
        this.__setHeight(height);
        this.__setWidth(j.o.width);
    };
    size.prototype.__setHeight = function (height) {
        if ((0, is_number_1.isNumber)(height)) {
            var _a = this.j.o, minHeight = _a.minHeight, maxHeight = _a.maxHeight;
            if ((0, is_number_1.isNumber)(minHeight) && minHeight > height) {
                height = minHeight;
            }
            if ((0, is_number_1.isNumber)(maxHeight) && maxHeight < height) {
                height = maxHeight;
            }
        }
        (0, css_1.css)(this.j.container, 'height', height);
        if (this.j.o.saveHeightInStorage) {
            this.j.storage.set('height', height);
        }
        this.__resizeWorkspaceImd();
    };
    size.prototype.__setWidth = function (width) {
        if ((0, is_number_1.isNumber)(width)) {
            var _a = this.j.o, minWidth = _a.minWidth, maxWidth = _a.maxWidth;
            if ((0, is_number_1.isNumber)(minWidth) && minWidth > width) {
                width = minWidth;
            }
            if ((0, is_number_1.isNumber)(maxWidth) && maxWidth < width) {
                width = maxWidth;
            }
        }
        (0, css_1.css)(this.j.container, 'width', width);
        this.__resizeWorkspaceImd();
    };
    size.prototype.__getNotWorkHeight = function () {
        var _a, _b;
        return ((((_a = this.j.toolbarContainer) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0) +
            (((_b = this.j.statusbar) === null || _b === void 0 ? void 0 : _b.getHeight()) || 0) +
            2);
    };
    size.prototype.__resizeWorkspaceImd = function () {
        if (!this.j || this.j.isDestructed || !this.j.o || this.j.o.inline) {
            return;
        }
        if (!this.j.container || !this.j.container.parentNode) {
            return;
        }
        var minHeight = ((0, css_1.css)(this.j.container, 'minHeight') || 0) -
            this.__getNotWorkHeight();
        if ((0, is_number_1.isNumber)(minHeight) && minHeight > 0) {
            [this.j.workplace, this.j.iframe, this.j.editor].map(function (elm) {
                elm && (0, css_1.css)(elm, 'minHeight', minHeight);
            });
            this.j.e.fire('setMinHeight', minHeight);
        }
        if ((0, is_number_1.isNumber)(this.j.o.maxHeight)) {
            var maxHeight_1 = this.j.o.maxHeight - this.__getNotWorkHeight();
            [this.j.workplace, this.j.iframe, this.j.editor].map(function (elm) {
                elm && (0, css_1.css)(elm, 'maxHeight', maxHeight_1);
            });
            this.j.e.fire('setMaxHeight', maxHeight_1);
        }
        if (this.j.container) {
            (0, css_1.css)(this.j.workplace, 'height', this.j.o.height !== 'auto' || this.j.isFullSize
                ? this.j.container.offsetHeight - this.__getNotWorkHeight()
                : 'auto');
        }
    };
    size.prototype.beforeDestruct = function (jodit) {
        jodit.e
            .off(jodit.ow, 'load.size', this.__resizeWorkspaces)
            .off('.size');
    };
    tslib_1.__decorate([
        (0, decorators_1.throttle)()
    ], size.prototype, "__initialize", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], size.prototype, "__resizeWorkspaceImd", null);
    size = tslib_1.__decorate([
        decorators_1.autobind
    ], size);
    return size;
}(plugin_1.Plugin));
exports.size = size;
global_1.pluginSystem.add('size', size);


/***/ }),

/***/ 13985:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var constants_1 = __webpack_require__(86893);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.beautifyHTML = !constants_1.IS_IE;
config_1.Config.prototype.sourceEditor = 'ace';
config_1.Config.prototype.sourceEditorNativeOptions = {
    showGutter: true,
    theme: 'ace/theme/idle_fingers',
    mode: 'ace/mode/html',
    wrap: true,
    highlightActiveLine: true
};
config_1.Config.prototype.sourceEditorCDNUrlsJS = [
    'https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.2/ace.js'
];
config_1.Config.prototype.beautifyHTMLCDNUrlsJS = [
    'https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.14.4/beautify.min.js',
    'https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.14.4/beautify-html.min.js'
];
icon_1.Icon.set('source', __webpack_require__(9342));
config_1.Config.prototype.controls.source = {
    mode: constants_1.MODE_SPLIT,
    exec: function (editor) {
        editor.toggleMode();
    },
    isActive: function (editor) {
        return editor.getRealMode() === constants_1.MODE_SOURCE;
    },
    tooltip: 'Change mode'
};


/***/ }),

/***/ 34186:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AceEditor = void 0;
var tslib_1 = __webpack_require__(20255);
var constants = __webpack_require__(86893);
var helpers_1 = __webpack_require__(40332);
var sourceEditor_1 = __webpack_require__(36729);
var AceEditor = (function (_super) {
    tslib_1.__extends(AceEditor, _super);
    function AceEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.className = 'jodit_ace_editor';
        _this.proxyOnBlur = function (e) {
            _this.j.e.fire('blur', e);
        };
        _this.proxyOnFocus = function (e) {
            _this.j.e.fire('focus', e);
        };
        _this.proxyOnMouseDown = function (e) {
            _this.j.e.fire('mousedown', e);
        };
        return _this;
    }
    AceEditor.prototype.aceExists = function () {
        return this.j.ow.ace !== undefined;
    };
    AceEditor.prototype.getLastColumnIndex = function (row) {
        return this.instance.session.getLine(row).length;
    };
    AceEditor.prototype.getLastColumnIndices = function () {
        var rows = this.instance.session.getLength();
        var lastColumnIndices = [];
        var lastColIndex = 0;
        for (var i = 0; i < rows; i++) {
            lastColIndex += this.getLastColumnIndex(i);
            if (i > 0) {
                lastColIndex += 1;
            }
            lastColumnIndices[i] = lastColIndex;
        }
        return lastColumnIndices;
    };
    AceEditor.prototype.getRowColumnIndices = function (characterIndex) {
        var lastColumnIndices = this.getLastColumnIndices();
        if (characterIndex <= lastColumnIndices[0]) {
            return { row: 0, column: characterIndex };
        }
        var row = 1;
        for (var i = 1; i < lastColumnIndices.length; i++) {
            if (characterIndex > lastColumnIndices[i]) {
                row = i + 1;
            }
        }
        var column = characterIndex - lastColumnIndices[row - 1] - 1;
        return { row: row, column: column };
    };
    AceEditor.prototype.setSelectionRangeIndices = function (start, end) {
        var startRowColumn = this.getRowColumnIndices(start);
        var endRowColumn = this.getRowColumnIndices(end);
        this.instance.getSelection().setSelectionRange({
            start: startRowColumn,
            end: endRowColumn
        });
    };
    AceEditor.prototype.getIndexByRowColumn = function (row, column) {
        var lastColumnIndices = this.getLastColumnIndices();
        return lastColumnIndices[row] - this.getLastColumnIndex(row) + column;
    };
    AceEditor.prototype.init = function (editor) {
        var _this = this;
        var tryInitAceEditor = function () {
            if (_this.instance !== undefined || !_this.aceExists()) {
                return;
            }
            var fakeMirror = _this.j.c.div('jodit-source__mirror-fake');
            _this.container.appendChild(fakeMirror);
            var ace = editor.ow.ace;
            _this.instance = ace.edit(fakeMirror);
            _this.instance.setTheme(editor.o.sourceEditorNativeOptions.theme);
            _this.instance.renderer.setShowGutter(editor.o.sourceEditorNativeOptions.showGutter);
            _this.instance
                .getSession()
                .setMode(editor.o.sourceEditorNativeOptions.mode);
            _this.instance.setHighlightActiveLine(editor.o.sourceEditorNativeOptions.highlightActiveLine);
            _this.instance.getSession().setUseWrapMode(true);
            _this.instance.setOption('indentedSoftWrap', false);
            _this.instance.setOption('wrap', editor.o.sourceEditorNativeOptions.wrap);
            _this.instance.getSession().setUseWorker(false);
            _this.instance.$blockScrolling = Infinity;
            _this.instance.on('change', _this.toWYSIWYG);
            _this.instance.on('focus', _this.proxyOnFocus);
            _this.instance.on('mousedown', _this.proxyOnMouseDown);
            _this.instance.on('blur', _this.proxyOnBlur);
            if (editor.getRealMode() !== constants.MODE_WYSIWYG) {
                _this.setValue(_this.getValue());
            }
            var onResize = _this.j.async.debounce(function () {
                if (editor.isInDestruct) {
                    return;
                }
                if (editor.o.height !== 'auto') {
                    _this.instance.setOption('maxLines', editor.workplace.offsetHeight /
                        _this.instance.renderer.lineHeight);
                }
                else {
                    _this.instance.setOption('maxLines', Infinity);
                }
                _this.instance.resize();
            }, _this.j.defaultTimeout * 2);
            editor.e.on('afterResize afterSetMode', onResize);
            onResize();
            _this.onReady();
        };
        editor.e.on('afterSetMode', function () {
            if (editor.getRealMode() !== constants.MODE_SOURCE &&
                editor.getMode() !== constants.MODE_SPLIT) {
                return;
            }
            _this.fromWYSIWYG();
            tryInitAceEditor();
        });
        tryInitAceEditor();
        if (!this.aceExists()) {
            (0, helpers_1.loadNext)(editor, editor.o.sourceEditorCDNUrlsJS)
                .then(function () {
                if (!editor.isInDestruct) {
                    tryInitAceEditor();
                }
            })
                .catch(function () { return null; });
        }
    };
    AceEditor.prototype.destruct = function () {
        var _a, _b;
        this.instance.off('change', this.toWYSIWYG);
        this.instance.off('focus', this.proxyOnFocus);
        this.instance.off('mousedown', this.proxyOnMouseDown);
        this.instance.destroy();
        (_b = (_a = this.j) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.off('aceInited.source');
    };
    AceEditor.prototype.setValue = function (value) {
        if (!this.j.o.editHTMLDocumentMode && this.j.o.beautifyHTML) {
            var html = this.j.e.fire('beautifyHTML', value);
            if ((0, helpers_1.isString)(html)) {
                value = html;
            }
        }
        this.instance.setValue(value);
        this.instance.clearSelection();
    };
    AceEditor.prototype.getValue = function () {
        return this.instance.getValue();
    };
    AceEditor.prototype.setReadOnly = function (isReadOnly) {
        this.instance.setReadOnly(isReadOnly);
    };
    Object.defineProperty(AceEditor.prototype, "isFocused", {
        get: function () {
            return this.instance.isFocused();
        },
        enumerable: false,
        configurable: true
    });
    AceEditor.prototype.focus = function () {
        this.instance.focus();
    };
    AceEditor.prototype.blur = function () {
        this.instance.blur();
    };
    AceEditor.prototype.getSelectionStart = function () {
        var range = this.instance.selection.getRange();
        return this.getIndexByRowColumn(range.start.row, range.start.column);
    };
    AceEditor.prototype.getSelectionEnd = function () {
        var range = this.instance.selection.getRange();
        return this.getIndexByRowColumn(range.end.row, range.end.column);
    };
    AceEditor.prototype.selectAll = function () {
        this.instance.selection.selectAll();
    };
    AceEditor.prototype.insertRaw = function (html) {
        var start = this.instance.selection.getCursor(), end = this.instance.session.insert(start, html);
        this.instance.selection.setRange({
            start: start,
            end: end
        }, false);
    };
    AceEditor.prototype.setSelectionRange = function (start, end) {
        this.setSelectionRangeIndices(start, end);
    };
    AceEditor.prototype.setPlaceHolder = function (title) {
    };
    AceEditor.prototype.replaceUndoManager = function () {
        var history = this.jodit.history;
        this.instance.commands.addCommand({
            name: 'Undo',
            bindKey: { win: 'Ctrl-Z', mac: 'Command-Z' },
            exec: function () {
                history.undo();
            }
        });
        this.instance.commands.addCommand({
            name: 'Redo',
            bindKey: { win: 'Ctrl-Shift-Z', mac: 'Command-Shift-Z' },
            exec: function () {
                history.redo();
            }
        });
    };
    return AceEditor;
}(sourceEditor_1.SourceEditor));
exports.AceEditor = AceEditor;


/***/ }),

/***/ 58633:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TextAreaEditor = void 0;
var tslib_1 = __webpack_require__(20255);
var css_1 = __webpack_require__(26911);
var dom_1 = __webpack_require__(24263);
var sourceEditor_1 = __webpack_require__(36729);
var TextAreaEditor = (function (_super) {
    tslib_1.__extends(TextAreaEditor, _super);
    function TextAreaEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.autosize = _this.j.async.debounce(function () {
            _this.instance.style.height = 'auto';
            _this.instance.style.height = _this.instance.scrollHeight + 'px';
        }, _this.j.defaultTimeout);
        return _this;
    }
    TextAreaEditor.prototype.init = function (editor) {
        var _this = this;
        this.instance = editor.c.element('textarea', {
            class: 'jodit-source__mirror'
        });
        this.container.appendChild(this.instance);
        editor.e
            .on(this.instance, 'mousedown keydown touchstart input', editor.async.debounce(this.toWYSIWYG, editor.defaultTimeout))
            .on('setMinHeight.source', function (minHeightD) {
            (0, css_1.css)(_this.instance, 'minHeight', minHeightD);
        })
            .on(this.instance, 'change keydown mousedown touchstart input', this.autosize)
            .on('afterSetMode.source', this.autosize)
            .on(this.instance, 'mousedown focus', function (e) {
            editor.e.fire(e.type, e);
        });
        this.autosize();
        this.onReady();
    };
    TextAreaEditor.prototype.destruct = function () {
        dom_1.Dom.safeRemove(this.instance);
    };
    TextAreaEditor.prototype.getValue = function () {
        return this.instance.value;
    };
    TextAreaEditor.prototype.setValue = function (raw) {
        this.instance.value = raw;
    };
    TextAreaEditor.prototype.insertRaw = function (raw) {
        var value = this.getValue();
        if (this.getSelectionStart() >= 0) {
            var startPos = this.getSelectionStart(), endPos = this.getSelectionEnd();
            this.setValue(value.substring(0, startPos) +
                raw +
                value.substring(endPos, value.length));
        }
        else {
            this.setValue(value + raw);
        }
    };
    TextAreaEditor.prototype.getSelectionStart = function () {
        return this.instance.selectionStart;
    };
    TextAreaEditor.prototype.getSelectionEnd = function () {
        return this.instance.selectionEnd;
    };
    TextAreaEditor.prototype.setSelectionRange = function (start, end) {
        if (end === void 0) { end = start; }
        this.instance.setSelectionRange(start, end);
    };
    Object.defineProperty(TextAreaEditor.prototype, "isFocused", {
        get: function () {
            return this.instance === this.j.od.activeElement;
        },
        enumerable: false,
        configurable: true
    });
    TextAreaEditor.prototype.focus = function () {
        this.instance.focus();
    };
    TextAreaEditor.prototype.blur = function () {
        this.instance.blur();
    };
    TextAreaEditor.prototype.setPlaceHolder = function (title) {
        this.instance.setAttribute('placeholder', title);
    };
    TextAreaEditor.prototype.setReadOnly = function (isReadOnly) {
        if (isReadOnly) {
            this.instance.setAttribute('readonly', 'true');
        }
        else {
            this.instance.removeAttribute('readonly');
        }
    };
    TextAreaEditor.prototype.selectAll = function () {
        this.instance.select();
    };
    TextAreaEditor.prototype.replaceUndoManager = function () {
        var _this = this;
        var history = this.jodit.history;
        this.j.e.on(this.instance, 'keydown', function (e) {
            if ((e.ctrlKey || e.metaKey) && e.key === 'z') {
                if (e.shiftKey) {
                    history.redo();
                }
                else {
                    history.undo();
                }
                _this.setSelectionRange(_this.getValue().length);
                return false;
            }
        });
    };
    return TextAreaEditor;
}(sourceEditor_1.SourceEditor));
exports.TextAreaEditor = TextAreaEditor;


/***/ }),

/***/ 52834:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(58633), exports);
tslib_1.__exportStar(__webpack_require__(34186), exports);


/***/ }),

/***/ 94785:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createSourceEditor = void 0;
var helpers_1 = __webpack_require__(40332);
var engines_1 = __webpack_require__(52834);
function createSourceEditor(type, editor, container, toWYSIWYG, fromWYSIWYG) {
    var sourceEditor;
    if ((0, helpers_1.isFunction)(type)) {
        sourceEditor = type(editor);
    }
    else {
        switch (type) {
            case 'ace':
                if (!editor.o.shadowRoot) {
                    sourceEditor = new engines_1.AceEditor(editor, container, toWYSIWYG, fromWYSIWYG);
                    break;
                }
            default:
                sourceEditor = new engines_1.TextAreaEditor(editor, container, toWYSIWYG, fromWYSIWYG);
        }
    }
    sourceEditor.init(editor);
    sourceEditor.onReadyAlways(function () {
        sourceEditor.setReadOnly(editor.o.readonly);
    });
    return sourceEditor;
}
exports.createSourceEditor = createSourceEditor;


/***/ }),

/***/ 36729:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SourceEditor = void 0;
var SourceEditor = (function () {
    function SourceEditor(jodit, container, toWYSIWYG, fromWYSIWYG) {
        this.jodit = jodit;
        this.container = container;
        this.toWYSIWYG = toWYSIWYG;
        this.fromWYSIWYG = fromWYSIWYG;
        this.className = '';
        this.isReady = false;
    }
    Object.defineProperty(SourceEditor.prototype, "j", {
        get: function () {
            return this.jodit;
        },
        enumerable: false,
        configurable: true
    });
    SourceEditor.prototype.onReady = function () {
        this.replaceUndoManager();
        this.isReady = true;
        this.j.e.fire(this, 'ready');
    };
    SourceEditor.prototype.onReadyAlways = function (onReady) {
        var _a;
        if (!this.isReady) {
            (_a = this.j.events) === null || _a === void 0 ? void 0 : _a.on(this, 'ready', onReady);
        }
        else {
            onReady();
        }
    };
    return SourceEditor;
}());
exports.SourceEditor = SourceEditor;


/***/ }),

/***/ 86030:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.source = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(68197);
var consts = __webpack_require__(86893);
var constants_1 = __webpack_require__(86893);
var plugin_1 = __webpack_require__(57549);
var dom_1 = __webpack_require__(24263);
var helpers_1 = __webpack_require__(40332);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
var factory_1 = __webpack_require__(94785);
__webpack_require__(13985);
var source = (function (_super) {
    tslib_1.__extends(source, _super);
    function source() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.buttons = [
            {
                name: 'source',
                group: 'source'
            }
        ];
        _this.__lock = false;
        _this.__oldMirrorValue = '';
        _this.tempMarkerStart = '{start-jodit-selection}';
        _this.tempMarkerStartReg = /{start-jodit-selection}/g;
        _this.tempMarkerEnd = '{end-jodit-selection}';
        _this.tempMarkerEndReg = /{end-jodit-selection}/g;
        _this.getSelectionStart = function () {
            var _a, _b;
            return (_b = (_a = _this.sourceEditor) === null || _a === void 0 ? void 0 : _a.getSelectionStart()) !== null && _b !== void 0 ? _b : 0;
        };
        _this.getSelectionEnd = function () {
            var _a, _b;
            return (_b = (_a = _this.sourceEditor) === null || _a === void 0 ? void 0 : _a.getSelectionEnd()) !== null && _b !== void 0 ? _b : 0;
        };
        return _this;
    }
    source.prototype.onInsertHTML = function (html) {
        var _a;
        if (!this.j.o.readonly && !this.j.isEditorMode()) {
            (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.insertRaw(html);
            this.toWYSIWYG();
            return false;
        }
    };
    source.prototype.fromWYSIWYG = function (force) {
        if (force === void 0) { force = false; }
        if (!this.__lock || force === true) {
            this.__lock = true;
            var new_value = this.j.getEditorValue(false, constants_1.SOURCE_CONSUMER);
            if (new_value !== this.getMirrorValue()) {
                this.setMirrorValue(new_value);
            }
            this.__lock = false;
        }
    };
    source.prototype.toWYSIWYG = function () {
        if (this.__lock) {
            return;
        }
        var value = this.getMirrorValue();
        if (value === this.__oldMirrorValue) {
            return;
        }
        this.__lock = true;
        this.j.value = value;
        this.__lock = false;
        this.__oldMirrorValue = value;
    };
    source.prototype.getNormalPosition = function (pos, str) {
        str = str.replace(/<(script|style|iframe)[^>]*>[^]*?<\/\1>/im, function (m) {
            var res = '';
            for (var i = 0; i < m.length; i += 1) {
                res += constants_1.INVISIBLE_SPACE;
            }
            return res;
        });
        while (pos > 0 && str[pos] === constants_1.INVISIBLE_SPACE) {
            pos--;
        }
        var start = pos;
        while (start > 0) {
            start--;
            if (str[start] === '<' &&
                str[start + 1] !== undefined &&
                str[start + 1].match(/[\w/]+/i)) {
                return start;
            }
            if (str[start] === '>') {
                return pos;
            }
        }
        return pos;
    };
    source.prototype.clnInv = function (str) {
        return str.replace(consts.INVISIBLE_SPACE_REG_EXP(), '');
    };
    source.prototype.onSelectAll = function (command) {
        var _a;
        if (command.toLowerCase() === 'selectall' &&
            this.j.getRealMode() === constants_1.MODE_SOURCE) {
            (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.selectAll();
            return false;
        }
    };
    source.prototype.getMirrorValue = function () {
        var _a;
        return ((_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.getValue()) || '';
    };
    source.prototype.setMirrorValue = function (value) {
        var _a;
        (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.setValue(value);
    };
    source.prototype.setFocusToMirror = function () {
        var _a;
        (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.focus();
    };
    source.prototype.saveSelection = function () {
        if (this.j.getRealMode() === consts.MODE_WYSIWYG) {
            this.j.s.save();
            this.j.synchronizeValues();
            this.fromWYSIWYG(true);
        }
        else {
            if (this.j.o.editHTMLDocumentMode) {
                return;
            }
            var value = this.getMirrorValue();
            if (this.getSelectionStart() === this.getSelectionEnd()) {
                var marker = this.j.s.marker(true);
                var selectionStart = this.getNormalPosition(this.getSelectionStart(), this.getMirrorValue());
                this.setMirrorValue(value.substring(0, selectionStart) +
                    this.clnInv(marker.outerHTML) +
                    value.substring(selectionStart));
            }
            else {
                var markerStart = this.j.s.marker(true);
                var markerEnd = this.j.s.marker(false);
                var selectionStart = this.getNormalPosition(this.getSelectionStart(), value);
                var selectionEnd = this.getNormalPosition(this.getSelectionEnd(), value);
                this.setMirrorValue(value.substring(0, selectionStart) +
                    this.clnInv(markerStart.outerHTML) +
                    value.substring(selectionStart, selectionEnd - selectionStart) +
                    this.clnInv(markerEnd.outerHTML) +
                    value.substring(selectionEnd));
            }
            this.toWYSIWYG();
        }
    };
    source.prototype.removeSelection = function () {
        if (this.j.getRealMode() === consts.MODE_WYSIWYG) {
            this.__lock = true;
            this.j.s.restore();
            this.__lock = false;
            return;
        }
        var value = this.getMirrorValue();
        var selectionStart = 0, selectionEnd = 0;
        try {
            value = value
                .replace(/<span[^>]+data-jodit-selection_marker=(["'])start\1[^>]*>[<>]*?<\/span>/gim, this.tempMarkerStart)
                .replace(/<span[^>]+data-jodit-selection_marker=(["'])end\1[^>]*>[<>]*?<\/span>/gim, this.tempMarkerEnd);
            if (!this.j.o.editHTMLDocumentMode && this.j.o.beautifyHTML) {
                var html = this.j.e.fire('beautifyHTML', value);
                if ((0, helpers_1.isString)(html)) {
                    value = html;
                }
            }
            selectionStart = value.indexOf(this.tempMarkerStart);
            selectionEnd = selectionStart;
            value = value.replace(this.tempMarkerStartReg, '');
            if (selectionStart !== -1) {
                var selectionEndCursor = value.indexOf(this.tempMarkerEnd);
                if (selectionEndCursor !== -1) {
                    selectionEnd = selectionEndCursor;
                }
            }
            value = value.replace(this.tempMarkerEndReg, '');
        }
        finally {
            value = value
                .replace(this.tempMarkerEndReg, '')
                .replace(this.tempMarkerStartReg, '');
        }
        this.setMirrorValue(value);
        this.setMirrorSelectionRange(selectionStart, selectionEnd);
        this.toWYSIWYG();
        this.setFocusToMirror();
    };
    source.prototype.setMirrorSelectionRange = function (start, end) {
        var _a;
        (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.setSelectionRange(start, end);
    };
    source.prototype.onReadonlyReact = function () {
        var _a;
        (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.setReadOnly(this.j.o.readonly);
    };
    source.prototype.afterInit = function (editor) {
        var _this = this;
        this.mirrorContainer = editor.c.div('jodit-source');
        editor.workplace.appendChild(this.mirrorContainer);
        editor.e.on('afterAddPlace changePlace afterInit', function () {
            editor.workplace.appendChild(_this.mirrorContainer);
        });
        this.sourceEditor = (0, factory_1.createSourceEditor)('area', editor, this.mirrorContainer, this.toWYSIWYG, this.fromWYSIWYG);
        editor.e.on(editor.ow, 'keydown', function (e) {
            var _a;
            if (e.key === constants_1.KEY_ESC && ((_a = _this.sourceEditor) === null || _a === void 0 ? void 0 : _a.isFocused)) {
                _this.sourceEditor.blur();
            }
        });
        this.onReadonlyReact();
        editor.e
            .on('placeholder.source', function (text) {
            var _a;
            (_a = _this.sourceEditor) === null || _a === void 0 ? void 0 : _a.setPlaceHolder(text);
        })
            .on('change.source', this.syncValueFromWYSIWYG)
            .on('beautifyHTML', function (html) { return html; });
        if (editor.o.beautifyHTML) {
            var addEventListener = function () {
                var _a;
                var html_beautify = editor.ow.html_beautify;
                if (html_beautify && !editor.isInDestruct) {
                    (_a = editor.events) === null || _a === void 0 ? void 0 : _a.off('beautifyHTML').on('beautifyHTML', function (html) { return html_beautify(html); });
                    return true;
                }
                return false;
            };
            if (!addEventListener()) {
                (0, helpers_1.loadNext)(editor, editor.o.beautifyHTMLCDNUrlsJS).then(addEventListener);
            }
        }
        this.syncValueFromWYSIWYG(true);
        this.initSourceEditor(editor);
    };
    source.prototype.syncValueFromWYSIWYG = function (force) {
        if (force === void 0) { force = false; }
        var editor = this.j;
        if (editor.getMode() === constants_1.MODE_SPLIT ||
            editor.getMode() === constants_1.MODE_SOURCE) {
            this.fromWYSIWYG(force);
        }
    };
    source.prototype.initSourceEditor = function (editor) {
        var _this = this;
        var _a;
        if (editor.o.sourceEditor !== 'area') {
            var sourceEditor_1 = (0, factory_1.createSourceEditor)(editor.o.sourceEditor, editor, this.mirrorContainer, this.toWYSIWYG, this.fromWYSIWYG);
            sourceEditor_1.onReadyAlways(function () {
                var _a, _b;
                (_a = _this.sourceEditor) === null || _a === void 0 ? void 0 : _a.destruct();
                _this.sourceEditor = sourceEditor_1;
                _this.syncValueFromWYSIWYG(true);
                (_b = editor.events) === null || _b === void 0 ? void 0 : _b.fire('sourceEditorReady', editor);
            });
        }
        else {
            (_a = this.sourceEditor) === null || _a === void 0 ? void 0 : _a.onReadyAlways(function () {
                var _a;
                _this.syncValueFromWYSIWYG(true);
                (_a = editor.events) === null || _a === void 0 ? void 0 : _a.fire('sourceEditorReady', editor);
            });
        }
    };
    source.prototype.beforeDestruct = function () {
        if (this.sourceEditor) {
            this.sourceEditor.destruct();
            delete this.sourceEditor;
        }
        dom_1.Dom.safeRemove(this.mirrorContainer);
    };
    tslib_1.__decorate([
        (0, decorators_1.watch)(':insertHTML.source')
    ], source.prototype, "onInsertHTML", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], source.prototype, "fromWYSIWYG", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], source.prototype, "toWYSIWYG", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], source.prototype, "getNormalPosition", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':beforeCommand.source')
    ], source.prototype, "onSelectAll", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':beforeSetMode.source')
    ], source.prototype, "saveSelection", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':afterSetMode.source')
    ], source.prototype, "removeSelection", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], source.prototype, "setMirrorSelectionRange", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':readonly.source')
    ], source.prototype, "onReadonlyReact", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], source.prototype, "syncValueFromWYSIWYG", null);
    return source;
}(plugin_1.Plugin));
exports.source = source;
global_1.pluginSystem.add('source', source);


/***/ }),

/***/ 50876:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.spellcheck = false;
icon_1.Icon.set('spellcheck', __webpack_require__(69546));
config_1.Config.prototype.controls.spellcheck = {
    isActive: function (e) {
        return e.o.spellcheck;
    },
    icon: __webpack_require__(69546),
    name: 'spellcheck',
    command: 'toggleSpellcheck',
    tooltip: 'Spellcheck'
};


/***/ }),

/***/ 87882:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.zh_tw = exports.zh_cn = exports.tr = exports.ru = exports.pt_br = exports.pl = exports.nl = exports.mn = exports.ko = exports.ja = exports.it = exports.id = exports.hu = exports.he = exports.fr = exports.fa = exports.es = exports.de = exports.cs_cz = exports.ar = void 0;
var ar = __webpack_require__(5586);
exports.ar = ar;
var cs_cz = __webpack_require__(66023);
exports.cs_cz = cs_cz;
var de = __webpack_require__(65860);
exports.de = de;
var es = __webpack_require__(86055);
exports.es = es;
var fa = __webpack_require__(50037);
exports.fa = fa;
var fr = __webpack_require__(7118);
exports.fr = fr;
var he = __webpack_require__(30298);
exports.he = he;
var hu = __webpack_require__(52107);
exports.hu = hu;
var id = __webpack_require__(31240);
exports.id = id;
var it = __webpack_require__(4101);
exports.it = it;
var ja = __webpack_require__(69286);
exports.ja = ja;
var ko = __webpack_require__(13402);
exports.ko = ko;
var mn = __webpack_require__(1242);
exports.mn = mn;
var nl = __webpack_require__(89574);
exports.nl = nl;
var pl = __webpack_require__(63630);
exports.pl = pl;
var pt_br = __webpack_require__(72212);
exports.pt_br = pt_br;
var ru = __webpack_require__(82570);
exports.ru = ru;
var tr = __webpack_require__(19323);
exports.tr = tr;
var zh_cn = __webpack_require__(50279);
exports.zh_cn = zh_cn;
var zh_tw = __webpack_require__(98364);
exports.zh_tw = zh_tw;


/***/ }),

/***/ 17002:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.spellcheck = void 0;
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var utils_1 = __webpack_require__(67309);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
__webpack_require__(50876);
var spellcheck = (function (_super) {
    tslib_1.__extends(spellcheck, _super);
    function spellcheck(jodit) {
        var _this = _super.call(this, jodit) || this;
        _this.buttons = [
            {
                group: 'state',
                name: 'spellcheck'
            }
        ];
        (0, global_1.extendLang)(__webpack_require__(87882));
        return _this;
    }
    spellcheck.prototype.afterInit = function (jodit) {
        var _this = this;
        jodit.e.on('afterInit afterAddPlace prepareWYSIWYGEditor', this.toggleSpellcheck);
        this.toggleSpellcheck();
        jodit.registerCommand('toggleSpellcheck', function () {
            _this.jodit.o.spellcheck = !_this.jodit.o.spellcheck;
            _this.toggleSpellcheck();
            _this.j.e.fire('updateToolbar');
        });
    };
    spellcheck.prototype.toggleSpellcheck = function () {
        (0, utils_1.attr)(this.jodit.editor, 'spellcheck', this.jodit.o.spellcheck);
    };
    spellcheck.prototype.beforeDestruct = function (jodit) { };
    tslib_1.__decorate([
        decorators_1.autobind
    ], spellcheck.prototype, "toggleSpellcheck", null);
    return spellcheck;
}(plugin_1.Plugin));
exports.spellcheck = spellcheck;
global_1.pluginSystem.add('spellcheck', spellcheck);


/***/ }),

/***/ 59818:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.showCharsCounter = true;
config_1.Config.prototype.countHTMLChars = false;
config_1.Config.prototype.showWordsCounter = true;


/***/ }),

/***/ 1557:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stat = void 0;
var tslib_1 = __webpack_require__(20255);
var constants_1 = __webpack_require__(86893);
var plugin_1 = __webpack_require__(85605);
var dom_1 = __webpack_require__(24263);
var global_1 = __webpack_require__(17332);
__webpack_require__(59818);
var stat = (function (_super) {
    tslib_1.__extends(stat, _super);
    function stat() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.charCounter = null;
        _this.wordCounter = null;
        _this.reInit = function () {
            if (_this.j.o.showCharsCounter && _this.charCounter) {
                _this.j.statusbar.append(_this.charCounter, true);
            }
            if (_this.j.o.showWordsCounter && _this.wordCounter) {
                _this.j.statusbar.append(_this.wordCounter, true);
            }
            _this.j.e.off('change keyup', _this.calc).on('change keyup', _this.calc);
            _this.calc();
        };
        _this.calc = _this.j.async.throttle(function () {
            var text = _this.j.text;
            if (_this.j.o.showCharsCounter && _this.charCounter) {
                var chars = _this.j.o.countHTMLChars
                    ? _this.j.value
                    : text.replace((0, constants_1.SPACE_REG_EXP)(), '');
                _this.charCounter.textContent = _this.j.i18n('Chars: %d', chars.length);
            }
            if (_this.j.o.showWordsCounter && _this.wordCounter) {
                _this.wordCounter.textContent = _this.j.i18n('Words: %d', text
                    .replace((0, constants_1.INVISIBLE_SPACE_REG_EXP)(), '')
                    .split((0, constants_1.SPACE_REG_EXP)())
                    .filter(function (e) { return e.length; }).length);
            }
        }, _this.j.defaultTimeout);
        return _this;
    }
    stat.prototype.afterInit = function () {
        this.charCounter = this.j.c.span();
        this.wordCounter = this.j.c.span();
        this.j.e.on('afterInit changePlace afterAddPlace', this.reInit);
        this.reInit();
    };
    stat.prototype.beforeDestruct = function () {
        dom_1.Dom.safeRemove(this.charCounter);
        dom_1.Dom.safeRemove(this.wordCounter);
        this.j.e.off('afterInit changePlace afterAddPlace', this.reInit);
        this.charCounter = null;
        this.wordCounter = null;
    };
    return stat;
}(plugin_1.Plugin));
exports.stat = stat;
global_1.pluginSystem.add('stat', stat);


/***/ }),

/***/ 40790:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.toolbarSticky = true;
config_1.Config.prototype.toolbarDisableStickyForMobile = true;
config_1.Config.prototype.toolbarStickyOffset = 0;


/***/ }),

/***/ 82808:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sticky = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(60057);
var constants_1 = __webpack_require__(86893);
var plugin_1 = __webpack_require__(85605);
var dom_1 = __webpack_require__(24263);
var helpers_1 = __webpack_require__(40332);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
__webpack_require__(40790);
var sticky = (function (_super) {
    tslib_1.__extends(sticky, _super);
    function sticky() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isToolbarSticked = false;
        _this.createDummy = function (toolbar) {
            if ( true && constants_1.IS_IE && !_this.dummyBox) {
                _this.dummyBox = _this.j.c.div();
                _this.dummyBox.classList.add('jodit_sticky-dummy_toolbar');
                _this.j.container.insertBefore(_this.dummyBox, toolbar);
            }
        };
        _this.addSticky = function (toolbar) {
            if (!_this.isToolbarSticked) {
                _this.createDummy(toolbar);
                _this.j.container.classList.add('jodit_sticky');
                _this.isToolbarSticked = true;
            }
            (0, helpers_1.css)(toolbar, {
                top: _this.j.o.toolbarStickyOffset || null,
                width: _this.j.container.offsetWidth - 2
            });
            if ( true && constants_1.IS_IE && _this.dummyBox) {
                (0, helpers_1.css)(_this.dummyBox, {
                    height: toolbar.offsetHeight
                });
            }
        };
        _this.removeSticky = function (toolbar) {
            if (_this.isToolbarSticked) {
                (0, helpers_1.css)(toolbar, {
                    width: '',
                    top: ''
                });
                _this.j.container.classList.remove('jodit_sticky');
                _this.isToolbarSticked = false;
            }
        };
        return _this;
    }
    sticky.prototype.afterInit = function (jodit) {
        var _this = this;
        jodit.e
            .on(jodit.ow, 'scroll.sticky wheel.sticky mousewheel.sticky resize.sticky', this.onScroll)
            .on('getStickyState.sticky', function () { return _this.isToolbarSticked; });
    };
    sticky.prototype.onScroll = function () {
        var jodit = this.jodit;
        var scrollWindowTop = jodit.ow.pageYOffset ||
            (jodit.od.documentElement &&
                jodit.od.documentElement.scrollTop) ||
            0, offsetEditor = (0, helpers_1.offset)(jodit.container, jodit, jodit.od, true), doSticky = jodit.getMode() === constants_1.MODE_WYSIWYG &&
            scrollWindowTop + jodit.o.toolbarStickyOffset >
                offsetEditor.top &&
            scrollWindowTop + jodit.o.toolbarStickyOffset <
                offsetEditor.top + offsetEditor.height &&
            !(jodit.o.toolbarDisableStickyForMobile && this.isMobile());
        if (jodit.o.toolbarSticky &&
            jodit.o.toolbar === true &&
            this.isToolbarSticked !== doSticky) {
            var container = jodit.toolbarContainer;
            if (container) {
                doSticky
                    ? this.addSticky(container)
                    : this.removeSticky(container);
            }
            jodit.e.fire('toggleSticky', doSticky);
        }
    };
    sticky.prototype.isMobile = function () {
        return (this.j &&
            this.j.options &&
            this.j.container &&
            this.j.o.sizeSM >= this.j.container.offsetWidth);
    };
    sticky.prototype.beforeDestruct = function (jodit) {
        this.dummyBox && dom_1.Dom.safeRemove(this.dummyBox);
        jodit.e
            .off(jodit.ow, 'scroll.sticky wheel.sticky mousewheel.sticky resize.sticky', this.onScroll)
            .off('.sticky');
    };
    tslib_1.__decorate([
        (0, decorators_1.throttle)()
    ], sticky.prototype, "onScroll", null);
    return sticky;
}(plugin_1.Plugin));
exports.sticky = sticky;
global_1.pluginSystem.add('sticky', sticky);


/***/ }),

/***/ 31750:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.usePopupForSpecialCharacters = false;
config_1.Config.prototype.specialCharacters = [
    '!',
    '&quot;',
    '#',
    '$',
    '%',
    '&amp;',
    "'",
    '(',
    ')',
    '*',
    '+',
    '-',
    '.',
    '/',
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    ':',
    ';',
    '&lt;',
    '=',
    '&gt;',
    '?',
    '@',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    '[',
    ']',
    '^',
    '_',
    '`',
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    '{',
    '|',
    '}',
    '~',
    '&euro;',
    '&lsquo;',
    '&rsquo;',
    '&ldquo;',
    '&rdquo;',
    '&ndash;',
    '&mdash;',
    '&iexcl;',
    '&cent;',
    '&pound;',
    '&curren;',
    '&yen;',
    '&brvbar;',
    '&sect;',
    '&uml;',
    '&copy;',
    '&ordf;',
    '&laquo;',
    '&raquo;',
    '&not;',
    '&reg;',
    '&macr;',
    '&deg;',
    '&sup2;',
    '&sup3;',
    '&acute;',
    '&micro;',
    '&para;',
    '&middot;',
    '&cedil;',
    '&sup1;',
    '&ordm;',
    '&frac14;',
    '&frac12;',
    '&frac34;',
    '&iquest;',
    '&Agrave;',
    '&Aacute;',
    '&Acirc;',
    '&Atilde;',
    '&Auml;',
    '&Aring;',
    '&AElig;',
    '&Ccedil;',
    '&Egrave;',
    '&Eacute;',
    '&Ecirc;',
    '&Euml;',
    '&Igrave;',
    '&Iacute;',
    '&Icirc;',
    '&Iuml;',
    '&ETH;',
    '&Ntilde;',
    '&Ograve;',
    '&Oacute;',
    '&Ocirc;',
    '&Otilde;',
    '&Ouml;',
    '&times;',
    '&Oslash;',
    '&Ugrave;',
    '&Uacute;',
    '&Ucirc;',
    '&Uuml;',
    '&Yacute;',
    '&THORN;',
    '&szlig;',
    '&agrave;',
    '&aacute;',
    '&acirc;',
    '&atilde;',
    '&auml;',
    '&aring;',
    '&aelig;',
    '&ccedil;',
    '&egrave;',
    '&eacute;',
    '&ecirc;',
    '&euml;',
    '&igrave;',
    '&iacute;',
    '&icirc;',
    '&iuml;',
    '&eth;',
    '&ntilde;',
    '&ograve;',
    '&oacute;',
    '&ocirc;',
    '&otilde;',
    '&ouml;',
    '&divide;',
    '&oslash;',
    '&ugrave;',
    '&uacute;',
    '&ucirc;',
    '&uuml;',
    '&yacute;',
    '&thorn;',
    '&yuml;',
    '&OElig;',
    '&oelig;',
    '&#372;',
    '&#374',
    '&#373',
    '&#375;',
    '&sbquo;',
    '&#8219;',
    '&bdquo;',
    '&hellip;',
    '&trade;',
    '&#9658;',
    '&bull;',
    '&rarr;',
    '&rArr;',
    '&hArr;',
    '&diams;',
    '&asymp;'
];
icon_1.Icon.set('symbols', __webpack_require__(43158));
config_1.Config.prototype.controls.symbols = {
    hotkeys: ['ctrl+shift+i', 'cmd+shift+i'],
    tooltip: 'Insert Special Character',
    popup: function (editor, current, control, close) {
        var container = editor.e.fire('generateSpecialCharactersTable.symbols');
        if (container) {
            if (editor.o.usePopupForSpecialCharacters) {
                var box = editor.c.div();
                box.classList.add('jodit-symbols');
                box.appendChild(container);
                editor.e.on(container, 'close_dialog', close);
                return box;
            }
            else {
                editor
                    .alert(container, 'Select Special Character', undefined, 'jodit-symbols')
                    .bindDestruct(editor);
                var a = container.querySelector('a');
                a && a.focus();
            }
        }
    }
};


/***/ }),

/***/ 21236:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.zh_tw = exports.zh_cn = exports.tr = exports.ru = exports.pt_br = exports.pl = exports.nl = exports.mn = exports.ko = exports.ja = exports.it = exports.id = exports.hu = exports.he = exports.fr = exports.fa = exports.es = exports.de = exports.cs_cz = exports.ar = void 0;
var ar = __webpack_require__(54261);
exports.ar = ar;
var cs_cz = __webpack_require__(60425);
exports.cs_cz = cs_cz;
var de = __webpack_require__(7057);
exports.de = de;
var es = __webpack_require__(48356);
exports.es = es;
var fa = __webpack_require__(11428);
exports.fa = fa;
var fr = __webpack_require__(29084);
exports.fr = fr;
var he = __webpack_require__(22876);
exports.he = he;
var hu = __webpack_require__(20890);
exports.hu = hu;
var id = __webpack_require__(75987);
exports.id = id;
var it = __webpack_require__(60379);
exports.it = it;
var ja = __webpack_require__(99950);
exports.ja = ja;
var ko = __webpack_require__(60934);
exports.ko = ko;
var mn = __webpack_require__(45913);
exports.mn = mn;
var nl = __webpack_require__(21994);
exports.nl = nl;
var pl = __webpack_require__(38128);
exports.pl = pl;
var pt_br = __webpack_require__(71515);
exports.pt_br = pt_br;
var ru = __webpack_require__(58194);
exports.ru = ru;
var tr = __webpack_require__(65802);
exports.tr = tr;
var zh_cn = __webpack_require__(86628);
exports.zh_cn = zh_cn;
var zh_tw = __webpack_require__(32210);
exports.zh_tw = zh_tw;


/***/ }),

/***/ 48560:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.symbols = void 0;
var tslib_1 = __webpack_require__(20255);
__webpack_require__(33393);
var constants_1 = __webpack_require__(86893);
var plugin_1 = __webpack_require__(85605);
var dom_1 = __webpack_require__(24263);
var utils_1 = __webpack_require__(76502);
var global_1 = __webpack_require__(17332);
__webpack_require__(31750);
var symbols = (function (_super) {
    tslib_1.__extends(symbols, _super);
    function symbols(jodit) {
        var _this = _super.call(this, jodit) || this;
        _this.buttons = [
            {
                name: 'symbols',
                group: 'insert'
            }
        ];
        _this.countInRow = 17;
        (0, global_1.extendLang)(__webpack_require__(21236));
        return _this;
    }
    symbols.prototype.afterInit = function (jodit) {
        var _this = this;
        jodit.e.on('generateSpecialCharactersTable.symbols', function () {
            var container = jodit.c.fromHTML("<div class=\"jodit-symbols__container\">\n\t\t\t\t\t\t<div class=\"jodit-symbols__container_table\">\n\t\t\t\t\t\t\t<table class=\"jodit-symbols__table\"><tbody></tbody></table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"jodit-symbols__container_preview\">\n\t\t\t\t\t\t\t<div class=\"jodit-symbols__preview\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>"), preview = container.querySelector('.jodit-symbols__preview'), table = container.querySelector('table'), body = table.tBodies[0], chars = [];
            for (var i = 0; i < jodit.o.specialCharacters.length;) {
                var tr = jodit.c.element('tr');
                for (var j = 0; j < _this.countInRow && i < jodit.o.specialCharacters.length; j += 1, i += 1) {
                    var td = jodit.c.element('td'), a = jodit.c.fromHTML("<a\n\t\t\t\t\t\t\t\t\tdata-index=\"".concat(i, "\"\n\t\t\t\t\t\t\t\t\tdata-index-j=\"").concat(j, "\"\n\t\t\t\t\t\t\t\t\trole=\"option\"\n\t\t\t\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\t\t>").concat(jodit.o.specialCharacters[i], "</a>"));
                    chars.push(a);
                    td.appendChild(a);
                    tr.appendChild(td);
                }
                body.appendChild(tr);
            }
            var self = _this;
            jodit.e
                .on(chars, 'focus', function () {
                preview.innerHTML = this.innerHTML;
            })
                .on(chars, 'mousedown', function (e) {
                if (dom_1.Dom.isTag(this, 'a')) {
                    jodit.s.focus();
                    jodit.s.insertHTML(this.innerHTML);
                    jodit.e.fire(this, 'close_dialog');
                    e && e.preventDefault();
                    e && e.stopImmediatePropagation();
                }
            })
                .on(chars, 'mouseenter', function () {
                if (dom_1.Dom.isTag(this, 'a')) {
                    this.focus();
                }
            })
                .on(chars, 'keydown', function (e) {
                var target = e.target;
                if (dom_1.Dom.isTag(target, 'a')) {
                    var index = parseInt((0, utils_1.attr)(target, '-index') || '0', 10), jIndex = parseInt((0, utils_1.attr)(target, 'data-index-j') || '0', 10);
                    var newIndex = void 0;
                    switch (e.key) {
                        case constants_1.KEY_UP:
                        case constants_1.KEY_DOWN:
                            newIndex =
                                e.key === constants_1.KEY_UP
                                    ? index - self.countInRow
                                    : index + self.countInRow;
                            if (chars[newIndex] === undefined) {
                                newIndex =
                                    e.key === constants_1.KEY_UP
                                        ? Math.floor(chars.length /
                                            self.countInRow) *
                                            self.countInRow +
                                            jIndex
                                        : jIndex;
                                if (newIndex > chars.length - 1) {
                                    newIndex -= self.countInRow;
                                }
                            }
                            chars[newIndex] && chars[newIndex].focus();
                            break;
                        case constants_1.KEY_RIGHT:
                        case constants_1.KEY_LEFT:
                            newIndex =
                                e.key === constants_1.KEY_LEFT ? index - 1 : index + 1;
                            if (chars[newIndex] === undefined) {
                                newIndex =
                                    e.key === constants_1.KEY_LEFT
                                        ? chars.length - 1
                                        : 0;
                            }
                            chars[newIndex] && chars[newIndex].focus();
                            break;
                        case constants_1.KEY_ENTER:
                            jodit.e.fire(target, 'mousedown');
                            e.stopImmediatePropagation();
                            e.preventDefault();
                            break;
                    }
                }
            });
            return container;
        });
    };
    symbols.prototype.beforeDestruct = function (jodit) {
        jodit.e.off('generateSpecialCharactersTable.symbols');
    };
    return symbols;
}(plugin_1.Plugin));
exports.symbols = symbols;
global_1.pluginSystem.add('symbols', symbols);


/***/ }),

/***/ 15797:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
tslib_1.__exportStar(__webpack_require__(41170), exports);


/***/ }),

/***/ 41170:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.onTabInsideLi = void 0;
var tslib_1 = __webpack_require__(20255);
var dom_1 = __webpack_require__(24263);
var assert_1 = __webpack_require__(603);
function onTabInsideLi(jodit, shift) {
    if (shift === void 0) { shift = false; }
    if (!jodit.o.tab.tabInsideLiInsertNewList) {
        return false;
    }
    var _a = tslib_1.__read(fakeCursors(jodit), 2), fake = _a[0], fake2 = _a[1];
    try {
        var li = getParentLeaf(jodit, fake, shift);
        if (!li) {
            return false;
        }
        if (!isSameLeftCursorPosition(li, jodit, fake)) {
            return false;
        }
        var list = dom_1.Dom.closest(li, ['ol', 'ul'], jodit.editor);
        if (!list || (shift && !dom_1.Dom.closest(list, 'li', jodit.editor))) {
            return false;
        }
        if (!shift) {
            appendNestedList(jodit, list, li);
        }
        else {
            removeNestedList(jodit, list, li);
        }
        return true;
    }
    finally {
        var range = jodit.s.createRange();
        range.setStartAfter(fake);
        range.setEndBefore(fake2);
        jodit.s.selectRange(range);
        dom_1.Dom.safeRemove(fake);
        dom_1.Dom.safeRemove(fake2);
    }
    return false;
}
exports.onTabInsideLi = onTabInsideLi;
function fakeCursors(jodit) {
    var fake = jodit.createInside.fake();
    var fake2 = jodit.createInside.fake();
    var r = jodit.s.range.cloneRange();
    r.collapse(true);
    r.insertNode(fake);
    var r2 = jodit.s.range.cloneRange();
    r2.collapse(false);
    r2.insertNode(fake2);
    return [fake, fake2];
}
function getParentLeaf(jodit, fake, shift) {
    var li = dom_1.Dom.closest(fake, 'li', jodit.editor);
    if (!li) {
        return false;
    }
    if (!shift && !dom_1.Dom.isTag(li.previousElementSibling, 'li')) {
        return false;
    }
    if (shift && !dom_1.Dom.closest(li, 'li', jodit.editor)) {
        return false;
    }
    return li;
}
function isSameLeftCursorPosition(li, jodit, fake) {
    var li2 = dom_1.Dom.closest(fake, 'li', jodit.editor);
    return !(!li2 || (li2 !== li && !li.contains(li2)));
}
function appendNestedList(jodit, list, li) {
    var previousLi = li.previousElementSibling;
    void 0;
    var lastElm = previousLi.lastElementChild;
    var newList = dom_1.Dom.isTag(lastElm, list.tagName)
        ? lastElm
        : jodit.createInside.element(list.tagName, Array.from(list.attributes).reduce(function (acc, attr) {
            acc[attr.name] = attr.value;
            return acc;
        }, {}));
    newList.appendChild(li);
    lastElm !== newList && previousLi.appendChild(newList);
}
function removeNestedList(jodit, list, li) {
    var parentLi = dom_1.Dom.closest(list, 'li', jodit.editor);
    void 0;
    var items = Array.from(list.children).filter(function (t) {
        return dom_1.Dom.isTag(t, 'li');
    });
    dom_1.Dom.after(parentLi, li);
    var index = items.indexOf(li);
    if (index === 0 || items.length === 1) {
        dom_1.Dom.safeRemove(list);
    }
    if (index !== items.length - 1) {
        var clone = list.cloneNode();
        dom_1.Dom.append(li, clone);
        for (var i = index + 1; i < items.length; i += 1) {
            dom_1.Dom.append(clone, items[i]);
        }
    }
}


/***/ }),

/***/ 56198:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.tab = {
    tabInsideLiInsertNewList: true
};


/***/ }),

/***/ 32246:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var decorators_1 = __webpack_require__(43441);
var constants_1 = __webpack_require__(86893);
var global_1 = __webpack_require__(17332);
var cases_1 = __webpack_require__(15797);
__webpack_require__(56198);
var tab = (function (_super) {
    tslib_1.__extends(tab, _super);
    function tab() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    tab.prototype.afterInit = function (jodit) { };
    tab.prototype.__onTab = function (event) {
        if (event.key === constants_1.KEY_TAB && this.__onShift(event.shiftKey)) {
            return false;
        }
    };
    tab.prototype.__onCommand = function (command) {
        if ((command === 'indent' || command === 'outdent') &&
            this.__onShift(command === 'outdent')) {
            return false;
        }
    };
    tab.prototype.__onShift = function (shift) {
        var res = (0, cases_1.onTabInsideLi)(this.j, shift);
        if (res) {
            this.j.e.fire('afterTab', shift);
        }
        return res;
    };
    tab.prototype.beforeDestruct = function (jodit) { };
    tslib_1.__decorate([
        (0, decorators_1.watch)(':keydown.tab')
    ], tab.prototype, "__onTab", null);
    tslib_1.__decorate([
        (0, decorators_1.watch)(':beforeCommand.tab')
    ], tab.prototype, "__onCommand", null);
    return tab;
}(plugin_1.Plugin));
global_1.pluginSystem.add('tab', tab);


/***/ }),

/***/ 23308:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.tableKeyboardNavigation = void 0;
var consts = __webpack_require__(86893);
var dom_1 = __webpack_require__(24263);
var table_1 = __webpack_require__(25120);
var global_1 = __webpack_require__(17332);
function tableKeyboardNavigation(editor) {
    editor.e
        .off('.tableKeyboardNavigation')
        .on('keydown.tableKeyboardNavigation', function (event) {
        var current, block;
        if (event.key === consts.KEY_TAB ||
            event.key === consts.KEY_LEFT ||
            event.key === consts.KEY_RIGHT ||
            event.key === consts.KEY_UP ||
            event.key === consts.KEY_DOWN) {
            current = editor.s.current();
            block = dom_1.Dom.up(current, function (elm) {
                return elm &&
                    elm.nodeName &&
                    /^td|th$/i.test(elm.nodeName);
            }, editor.editor);
            if (!block) {
                return;
            }
            var range = editor.s.range;
            if (event.key !== consts.KEY_TAB && current !== block) {
                if (((event.key === consts.KEY_LEFT ||
                    event.key === consts.KEY_UP) &&
                    (dom_1.Dom.prev(current, function (elm) {
                        return event.key === consts.KEY_UP
                            ? dom_1.Dom.isTag(elm, 'br')
                            : Boolean(elm);
                    }, block) ||
                        (event.key !== consts.KEY_UP &&
                            dom_1.Dom.isText(current) &&
                            range.startOffset !== 0))) ||
                    ((event.key === consts.KEY_RIGHT ||
                        event.key === consts.KEY_DOWN) &&
                        (dom_1.Dom.next(current, function (elm) {
                            return event.key === consts.KEY_DOWN
                                ? dom_1.Dom.isTag(elm, 'br')
                                : Boolean(elm);
                        }, block) ||
                            (event.key !== consts.KEY_DOWN &&
                                dom_1.Dom.isText(current) &&
                                current.nodeValue &&
                                range.startOffset !==
                                    current.nodeValue.length)))) {
                    return;
                }
            }
        }
        else {
            return;
        }
        var table = dom_1.Dom.up(block, function (elm) { return elm && /^table$/i.test(elm.nodeName); }, editor.editor);
        var next = null;
        switch (event.key) {
            case consts.KEY_TAB:
            case consts.KEY_LEFT: {
                var sibling = event.key === consts.KEY_LEFT || event.shiftKey
                    ? 'prev'
                    : 'next';
                next = dom_1.Dom[sibling](block, function (elm) {
                    return elm &&
                        /^td|th$/i.test(elm.tagName);
                }, table);
                if (!next) {
                    table_1.Table.appendRow(table, sibling === 'next'
                        ? false
                        : table.querySelector('tr'), sibling === 'next', editor.createInside);
                    next = dom_1.Dom[sibling](block, dom_1.Dom.isCell, table);
                }
                break;
            }
            case consts.KEY_UP:
            case consts.KEY_DOWN:
                {
                    var i_1 = 0, j_1 = 0;
                    var matrix = table_1.Table.formalMatrix(table, function (elm, _i, _j) {
                        if (elm === block) {
                            i_1 = _i;
                            j_1 = _j;
                        }
                    });
                    if (event.key === consts.KEY_UP) {
                        if (matrix[i_1 - 1] !== undefined) {
                            next = matrix[i_1 - 1][j_1];
                        }
                    }
                    else {
                        if (matrix[i_1 + 1] !== undefined) {
                            next = matrix[i_1 + 1][j_1];
                        }
                    }
                }
                break;
        }
        if (next) {
            if (!next.firstChild) {
                var first = editor.createInside.element('br');
                next.appendChild(first);
                editor.s.setCursorBefore(first);
            }
            else {
                if (event.key === consts.KEY_TAB) {
                    editor.s.select(next, true);
                }
                else {
                    editor.s.setCursorIn(next, event.key === consts.KEY_RIGHT ||
                        event.key === consts.KEY_DOWN);
                }
            }
            return false;
        }
    });
}
exports.tableKeyboardNavigation = tableKeyboardNavigation;
global_1.pluginSystem.add('tableKeyboardNavigation', tableKeyboardNavigation);


/***/ }),

/***/ 30739:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var dom_1 = __webpack_require__(64968);
var utils_1 = __webpack_require__(76502);
var helpers_1 = __webpack_require__(40332);
var icon_1 = __webpack_require__(77904);
config_1.Config.prototype.table = {
    selectionCellStyle: 'border: 1px double #1e88e5 !important;',
    useExtraClassesOptions: false
};
icon_1.Icon.set('table', __webpack_require__(51716));
config_1.Config.prototype.controls.table = {
    data: {
        cols: 10,
        rows: 10,
        classList: {
            'table table-bordered': 'Bootstrap Bordered',
            'table table-striped': 'Bootstrap Striped',
            'table table-dark': 'Bootstrap Dark'
        }
    },
    popup: function (editor, current, control, close, button) {
        var default_rows_count = control.data && control.data.rows ? control.data.rows : 10, default_cols_count = control.data && control.data.cols ? control.data.cols : 10;
        var generateExtraClasses = function () {
            if (!editor.o.table.useExtraClassesOptions) {
                return '';
            }
            var out = [];
            if (control.data) {
                var classList_1 = control.data.classList;
                Object.keys(classList_1).forEach(function (classes) {
                    out.push("<label class=\"jodit_vertical_middle\"><input class=\"jodit-checkbox\" value=\"".concat(classes, "\" type=\"checkbox\"/>").concat(classList_1[classes], "</label>"));
                });
            }
            return out.join('');
        };
        var form = editor.c.fromHTML('<form class="jodit-form jodit-form__inserter">' +
            '<div class="jodit-form__table-creator-box">' +
            '<div class="jodit-form__container"></div>' +
            '<div class="jodit-form__options">' +
            generateExtraClasses() +
            '</div>' +
            '</div>' +
            '<label class="jodit-form__center">' +
            '<span>1</span> &times; <span>1</span>' +
            '</label>' +
            '</form>'), rows = form.querySelectorAll('span')[0], cols = form.querySelectorAll('span')[1], blocksContainer = form.querySelector('.jodit-form__container'), options = form.querySelector('.jodit-form__options'), cells = [];
        var cnt = default_rows_count * default_cols_count;
        for (var i = 0; i < cnt; i += 1) {
            if (!cells[i]) {
                cells.push(editor.c.element('span', {
                    dataIndex: i
                }));
            }
        }
        var mouseenter = function (e, index) {
            var dv = e.target;
            if (!dom_1.Dom.isTag(dv, 'span')) {
                return;
            }
            var k = index === undefined || isNaN(index)
                ? parseInt((0, utils_1.attr)(dv, '-index') || '0', 10)
                : index || 0;
            var rows_count = Math.ceil((k + 1) / default_cols_count), cols_count = (k % default_cols_count) + 1;
            for (var i = 0; i < cells.length; i += 1) {
                if (cols_count >= (i % default_cols_count) + 1 &&
                    rows_count >= Math.ceil((i + 1) / default_cols_count)) {
                    cells[i].className = 'jodit_hovered';
                }
                else {
                    cells[i].className = '';
                }
            }
            cols.textContent = cols_count.toString();
            rows.textContent = rows_count.toString();
        };
        editor.e
            .on(blocksContainer, 'mousemove', mouseenter)
            .on(blocksContainer, 'touchstart mousedown', function (e) {
            var dv = e.target;
            e.preventDefault();
            e.stopImmediatePropagation();
            if (!dom_1.Dom.isTag(dv, 'span')) {
                return;
            }
            var k = parseInt((0, utils_1.attr)(dv, '-index') || '0', 10);
            var rows_count = Math.ceil((k + 1) / default_cols_count), cols_count = (k % default_cols_count) + 1;
            var crt = editor.createInside, tbody = crt.element('tbody'), table = crt.element('table');
            table.appendChild(tbody);
            var first_td = null, tr, td;
            for (var i = 1; i <= rows_count; i += 1) {
                tr = crt.element('tr');
                for (var j = 1; j <= cols_count; j += 1) {
                    td = crt.element('td');
                    if (!first_td) {
                        first_td = td;
                    }
                    (0, helpers_1.css)(td, 'width', (100 / cols_count).toFixed(4) + '%');
                    td.appendChild(crt.element('br'));
                    tr.appendChild(crt.text('\n'));
                    tr.appendChild(crt.text('\t'));
                    tr.appendChild(td);
                }
                tbody.appendChild(crt.text('\n'));
                tbody.appendChild(tr);
            }
            (0, helpers_1.$$)('input[type=checkbox]:checked', options).forEach(function (input) {
                input.value
                    .split(/[\s]+/)
                    .forEach(function (className) {
                    table.classList.add(className);
                });
            });
            if (editor.editor.firstChild) {
                editor.s.insertNode(crt.text('\n'), false, false);
            }
            editor.s.insertNode(table, false);
            if (first_td) {
                editor.s.setCursorIn(first_td);
                (0, helpers_1.scrollIntoViewIfNeeded)(first_td, editor.editor, editor.ed);
            }
            close();
        });
        if (button && button.parentElement) {
            for (var i = 0; i < default_rows_count; i += 1) {
                var row = editor.c.div();
                for (var j = 0; j < default_cols_count; j += 1) {
                    row.appendChild(cells[i * default_cols_count + j]);
                }
                blocksContainer.appendChild(row);
            }
            if (cells[0]) {
                cells[0].className = 'hovered';
            }
        }
        return form;
    },
    tooltip: 'Insert table'
};


/***/ }),

/***/ 45842:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.table = void 0;
__webpack_require__(51057);
var global_1 = __webpack_require__(17332);
__webpack_require__(30739);
function table(editor) {
    editor.registerButton({
        name: 'table',
        group: 'insert'
    });
}
exports.table = table;
global_1.pluginSystem.add('table', table);


/***/ }),

/***/ 79114:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
var widget_1 = __webpack_require__(718);
var helpers_1 = __webpack_require__(40332);
var form_1 = __webpack_require__(95963);
var button_1 = __webpack_require__(96516);
var icon_1 = __webpack_require__(77904);
icon_1.Icon.set('video', __webpack_require__(49222));
config_1.Config.prototype.controls.video = {
    popup: function (editor, current, control, close) {
        var formLink = new form_1.UIForm(editor, [
            new form_1.UIBlock(editor, [
                new form_1.UIInput(editor, {
                    name: 'url',
                    required: true,
                    label: 'URL',
                    placeholder: 'https://',
                    validators: ['url']
                })
            ]),
            new form_1.UIBlock(editor, [
                (0, button_1.Button)(editor, '', 'Insert', 'primary').onAction(function () {
                    return formLink.submit();
                })
            ])
        ]), formCode = new form_1.UIForm(editor, [
            new form_1.UIBlock(editor, [
                new form_1.UITextArea(editor, {
                    name: 'code',
                    required: true,
                    label: 'Embed code'
                })
            ]),
            new form_1.UIBlock(editor, [
                (0, button_1.Button)(editor, '', 'Insert', 'primary').onAction(function () {
                    return formCode.submit();
                })
            ])
        ]), tabs = [], insertCode = function (code) {
            editor.s.restore();
            editor.s.insertHTML(code);
            close();
        };
        editor.s.save();
        tabs.push({
            icon: 'link',
            name: 'Link',
            content: formLink.container
        }, {
            icon: 'source',
            name: 'Code',
            content: formCode.container
        });
        formLink.onSubmit(function (data) {
            insertCode((0, helpers_1.convertMediaUrlToVideoEmbed)(data.url));
        });
        formCode.onSubmit(function (data) {
            insertCode(data.code);
        });
        return (0, widget_1.TabsWidget)(editor, tabs);
    },
    tags: ['iframe'],
    tooltip: 'Insert youtube/vimeo video'
};


/***/ }),

/***/ 19889:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var global_1 = __webpack_require__(17332);
__webpack_require__(79114);
function video(editor) {
    editor.registerButton({
        name: 'video',
        group: 'media'
    });
}
global_1.pluginSystem.add('video', video);


/***/ }),

/***/ 64401:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.wrapNodes = {
    exclude: ['hr', 'style', 'br'],
    emptyBlockAfterInit: true
};


/***/ }),

/***/ 20728:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
var plugin_1 = __webpack_require__(57549);
var dom_1 = __webpack_require__(64968);
var is_string_1 = __webpack_require__(24421);
var decorators_1 = __webpack_require__(43441);
var global_1 = __webpack_require__(17332);
__webpack_require__(64401);
var wrapNodes = (function (_super) {
    tslib_1.__extends(wrapNodes, _super);
    function wrapNodes() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isSuitableStart = function (n) {
            return (dom_1.Dom.isText(n) && (0, is_string_1.isString)(n.nodeValue) && /[^\s]/.test(n.nodeValue)) ||
                (_this.isNotClosed(n) && !dom_1.Dom.isTemporary(n));
        };
        _this.isSuitable = function (n) {
            return dom_1.Dom.isText(n) || _this.isNotClosed(n);
        };
        _this.isNotClosed = function (n) {
            return dom_1.Dom.isElement(n) &&
                !(dom_1.Dom.isBlock(n) || dom_1.Dom.isTag(n, _this.j.o.wrapNodes.exclude));
        };
        return _this;
    }
    wrapNodes.prototype.afterInit = function (jodit) {
        if (jodit.o.enter.toLowerCase() === 'br') {
            return;
        }
        jodit.e
            .on('drop.wtn focus.wtn keydown.wtn mousedown.wtn afterInit.wtn', this.preprocessInput, {
            top: true
        })
            .on('afterInit.wtn postProcessSetEditorValue.wtn', this.postProcessSetEditorValue);
    };
    wrapNodes.prototype.beforeDestruct = function (jodit) {
        jodit.e.off('.wtn');
    };
    wrapNodes.prototype.postProcessSetEditorValue = function () {
        var jodit = this.jodit;
        if (!jodit.isEditorMode()) {
            return;
        }
        var child = jodit.editor.firstChild, isChanged = false;
        while (child) {
            child = this.checkAloneListLeaf(child, jodit);
            if (this.isSuitableStart(child)) {
                if (!isChanged) {
                    jodit.s.save();
                }
                isChanged = true;
                var box = jodit.createInside.element(jodit.o.enter);
                dom_1.Dom.before(child, box);
                while (child && this.isSuitable(child)) {
                    var next = child.nextSibling;
                    box.appendChild(child);
                    child = next;
                }
                box.normalize();
                child = box;
            }
            child = child && child.nextSibling;
        }
        if (isChanged) {
            jodit.s.restore();
            if (jodit.e.current === 'afterInit') {
                jodit.e.fire('internalChange');
            }
        }
    };
    wrapNodes.prototype.checkAloneListLeaf = function (child, jodit) {
        var result = child;
        var next = child;
        do {
            if (dom_1.Dom.isElement(next) &&
                dom_1.Dom.isTag(next, 'li') &&
                !dom_1.Dom.isTag(next.parentElement, ['ul', 'ol'])) {
                var nextChild = dom_1.Dom.findNotEmptySibling(next, false);
                if (dom_1.Dom.isTag(result, 'ul')) {
                    result.appendChild(next);
                }
                else {
                    result = dom_1.Dom.wrap(next, 'ul', jodit.createInside);
                }
                next = nextChild;
            }
            else {
                break;
            }
        } while (next);
        return result;
    };
    wrapNodes.prototype.preprocessInput = function () {
        var jodit = this.jodit, isAfterInitEvent = jodit.e.current === 'afterInit';
        if (!jodit.isEditorMode() ||
            jodit.editor.firstChild ||
            (!jodit.o.wrapNodes.emptyBlockAfterInit && isAfterInitEvent)) {
            return;
        }
        var box = jodit.createInside.element(jodit.o.enter);
        var br = jodit.createInside.element('br');
        dom_1.Dom.append(box, br);
        dom_1.Dom.append(jodit.editor, box);
        jodit.s.isFocused() && jodit.s.setCursorBefore(br);
        jodit.e.fire('internalChange');
    };
    tslib_1.__decorate([
        decorators_1.autobind
    ], wrapNodes.prototype, "postProcessSetEditorValue", null);
    tslib_1.__decorate([
        decorators_1.autobind
    ], wrapNodes.prototype, "preprocessInput", null);
    return wrapNodes;
}(plugin_1.Plugin));
global_1.pluginSystem.add('wrapNodes', wrapNodes);


/***/ }),

/***/ 71707:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var config_1 = __webpack_require__(93166);
config_1.Config.prototype.showXPathInStatusbar = true;


/***/ }),

/***/ 18238:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
var tslib_1 = __webpack_require__(20255);
__webpack_require__(64618);
var constants_1 = __webpack_require__(86893);
var context_menu_1 = __webpack_require__(60403);
var dom_1 = __webpack_require__(64968);
var helpers_1 = __webpack_require__(40332);
var plugin_1 = __webpack_require__(57549);
var factory_1 = __webpack_require__(81438);
var global_1 = __webpack_require__(17332);
__webpack_require__(71707);
var xpath = (function (_super) {
    tslib_1.__extends(xpath, _super);
    function xpath() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onContext = function (bindElement, event) {
            if (!_this.menu) {
                _this.menu = new context_menu_1.ContextMenu(_this.j);
            }
            _this.menu.show(event.clientX, event.clientY, [
                {
                    icon: 'bin',
                    title: bindElement === _this.j.editor ? 'Clear' : 'Remove',
                    exec: function () {
                        if (bindElement !== _this.j.editor) {
                            dom_1.Dom.safeRemove(bindElement);
                        }
                        else {
                            _this.j.value = '';
                        }
                        _this.j.synchronizeValues();
                    }
                },
                {
                    icon: 'select-all',
                    title: 'Select',
                    exec: function () {
                        _this.j.s.select(bindElement);
                    }
                }
            ]);
            return false;
        };
        _this.onSelectPath = function (bindElement, event) {
            _this.j.s.focus();
            var path = (0, helpers_1.attr)(event.target, '-path') || '/';
            if (path === '/') {
                _this.j.execCommand('selectall');
                return false;
            }
            try {
                var elm = _this.j.ed
                    .evaluate(path, _this.j.editor, null, XPathResult.ANY_TYPE, null)
                    .iterateNext();
                if (elm) {
                    _this.j.s.select(elm);
                    return false;
                }
            }
            catch (_a) { }
            _this.j.s.select(bindElement);
            return false;
        };
        _this.tpl = function (bindElement, path, name, title) {
            var item = _this.j.c.fromHTML("<span class=\"jodit-xpath__item\"><a role=\"button\" data-path=\"".concat(path, "\" title=\"").concat(title, "\" tabindex=\"-1\"'>").concat((0, helpers_1.trim)(name), "</a></span>"));
            var a = item.firstChild;
            _this.j.e
                .on(a, 'click', _this.onSelectPath.bind(_this, bindElement))
                .on(a, 'contextmenu', _this.onContext.bind(_this, bindElement));
            return item;
        };
        _this.removeSelectAll = function () {
            if (_this.selectAllButton) {
                _this.selectAllButton.destruct();
                delete _this.selectAllButton;
            }
        };
        _this.appendSelectAll = function () {
            _this.removeSelectAll();
            _this.selectAllButton = (0, factory_1.makeButton)(_this.j, tslib_1.__assign({ name: 'selectall' }, _this.j.o.controls.selectall));
            _this.selectAllButton.state.size = 'tiny';
            _this.container &&
                _this.container.insertBefore(_this.selectAllButton.container, _this.container.firstChild);
        };
        _this.calcPathImd = function () {
            if (_this.isDestructed) {
                return;
            }
            var current = _this.j.s.current();
            if (_this.container) {
                _this.container.innerHTML = constants_1.INVISIBLE_SPACE;
            }
            if (current) {
                var name_1, xpth_1, li_1;
                dom_1.Dom.up(current, function (elm) {
                    if (elm && _this.j.editor !== elm && !dom_1.Dom.isText(elm)) {
                        name_1 = elm.nodeName.toLowerCase();
                        xpth_1 = (0, helpers_1.getXPathByElement)(elm, _this.j.editor).replace(/^\//, '');
                        li_1 = _this.tpl(elm, xpth_1, name_1, _this.j.i18n('Select %s', name_1));
                        _this.container &&
                            _this.container.insertBefore(li_1, _this.container.firstChild);
                    }
                }, _this.j.editor);
            }
            _this.appendSelectAll();
        };
        _this.calcPath = _this.j.async.debounce(_this.calcPathImd, _this.j.defaultTimeout * 2);
        return _this;
    }
    xpath.prototype.afterInit = function () {
        var _this = this;
        if (this.j.o.showXPathInStatusbar) {
            this.container = this.j.c.div('jodit-xpath');
            this.j.e
                .off('.xpath')
                .on('mouseup.xpath change.xpath keydown.xpath changeSelection.xpath', this.calcPath)
                .on('afterSetMode.xpath afterInit.xpath changePlace.xpath', function () {
                if (!_this.j.o.showXPathInStatusbar || !_this.container) {
                    return;
                }
                _this.j.statusbar.append(_this.container);
                if (_this.j.getRealMode() === constants_1.MODE_WYSIWYG) {
                    _this.calcPath();
                }
                else {
                    if (_this.container) {
                        _this.container.innerHTML = constants_1.INVISIBLE_SPACE;
                    }
                    _this.appendSelectAll();
                }
            });
            this.calcPath();
        }
    };
    xpath.prototype.beforeDestruct = function () {
        if (this.j && this.j.events) {
            this.j.e.off('.xpath');
        }
        this.removeSelectAll();
        this.menu && this.menu.destruct();
        dom_1.Dom.safeRemove(this.container);
        delete this.menu;
        delete this.container;
    };
    return xpath;
}(plugin_1.Plugin));
global_1.pluginSystem.add('xpath', xpath);


/***/ }),

/***/ 89019:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
__webpack_require__(61227);
__webpack_require__(690);
__webpack_require__(66622);
__webpack_require__(69220);
__webpack_require__(10444);
if (!Array.prototype.includes) {
    Array.prototype.includes = function (value) {
        return this.indexOf(value) > -1;
    };
}
if (typeof Object.assign !== 'function') {
    Object.defineProperty(Object, 'assign', {
        value: function assign(target, varArgs) {
            if (target == null) {
                throw new TypeError('Cannot convert undefined or null to object');
            }
            var to = Object(target);
            for (var index = 1; index < arguments.length; index++) {
                var nextSource = arguments[index];
                if (nextSource != null) {
                    for (var nextKey in nextSource) {
                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                            to[nextKey] = nextSource[nextKey];
                        }
                    }
                }
            }
            return to;
        },
        writable: true,
        configurable: true
    });
}
if (!Array.prototype.find) {
    Array.prototype.find = function (value) {
        return this.indexOf(value) > -1 ? value : undefined;
    };
}
if (!String.prototype.endsWith) {
    String.prototype.endsWith = function (value) {
        return this[this.length - 1] === value;
    };
}


/***/ }),

/***/ 15261:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.valign = exports.upload = exports.update = exports.unlock = exports.settings = exports.save = exports.right = exports.resize_handler = exports.plus = exports.pencil = exports.ok = exports.lock = exports.left = exports.info_circle = exports.folder = exports.file = exports.eye = exports.dots = exports.chevron = exports.check = exports.center = exports.cancel = exports.bin = exports.angle_up = exports.angle_right = exports.angle_left = exports.angle_down = void 0;
var angle_down = __webpack_require__(1755);
exports.angle_down = angle_down;
var angle_left = __webpack_require__(74911);
exports.angle_left = angle_left;
var angle_right = __webpack_require__(8805);
exports.angle_right = angle_right;
var angle_up = __webpack_require__(16547);
exports.angle_up = angle_up;
var bin = __webpack_require__(10856);
exports.bin = bin;
var cancel = __webpack_require__(98441);
exports.cancel = cancel;
var center = __webpack_require__(52488);
exports.center = center;
var check = __webpack_require__(9370);
exports.check = check;
var chevron = __webpack_require__(66543);
exports.chevron = chevron;
var dots = __webpack_require__(608);
exports.dots = dots;
var eye = __webpack_require__(42840);
exports.eye = eye;
var file = __webpack_require__(79096);
exports.file = file;
var folder = __webpack_require__(33014);
exports.folder = folder;
var info_circle = __webpack_require__(91677);
exports.info_circle = info_circle;
var left = __webpack_require__(8259);
exports.left = left;
var lock = __webpack_require__(64467);
exports.lock = lock;
var ok = __webpack_require__(86934);
exports.ok = ok;
var pencil = __webpack_require__(76133);
exports.pencil = pencil;
var plus = __webpack_require__(45519);
exports.plus = plus;
var resize_handler = __webpack_require__(90265);
exports.resize_handler = resize_handler;
var right = __webpack_require__(81279);
exports.right = right;
var save = __webpack_require__(68899);
exports.save = save;
var settings = __webpack_require__(70744);
exports.settings = settings;
var unlock = __webpack_require__(19201);
exports.unlock = unlock;
var update = __webpack_require__(84930);
exports.update = update;
var upload = __webpack_require__(99704);
exports.upload = upload;
var valign = __webpack_require__(2304);
exports.valign = valign;


/***/ }),

/***/ 80078:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'نسخ التنسيق'
};


/***/ }),

/***/ 16986:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'Kopírovat formát'
};


/***/ }),

/***/ 59347:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'Format kopierenт'
};


/***/ }),

/***/ 63640:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'Copiar formato'
};


/***/ }),

/***/ 53434:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'کپی کردن قالب'
};


/***/ }),

/***/ 85638:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'Format de copie'
};


/***/ }),

/***/ 31743:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'העתק עיצוב'
};


/***/ }),

/***/ 66219:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'Formátum másolás'
};


/***/ }),

/***/ 50331:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'salin format'
};


/***/ }),

/***/ 25582:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'Copia il formato'
};


/***/ }),

/***/ 82066:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'copyformat'
};


/***/ }),

/***/ 71925:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': '복사 형식'
};


/***/ }),

/***/ 12689:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'Формат хуулах'
};


/***/ }),

/***/ 65274:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'opmaak kopiëren'
};


/***/ }),

/***/ 58548:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'format kopii'
};


/***/ }),

/***/ 82958:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'Copiar formato'
};


/***/ }),

/***/ 52315:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'Копировать формат'
};


/***/ }),

/***/ 87727:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': 'Kopyalama Biçimi'
};


/***/ }),

/***/ 9396:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': '复制格式'
};


/***/ }),

/***/ 28765:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'copy-format': '複製格式'
};


/***/ }),

/***/ 47762:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'ارتفاع الخط'
};


/***/ }),

/***/ 97495:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Výška čáry'
};


/***/ }),

/***/ 80131:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Zeilenhöhe'
};


/***/ }),

/***/ 1201:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Altura de la línea'
};


/***/ }),

/***/ 89912:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'ارتفاع خط'
};


/***/ }),

/***/ 3405:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Hauteur de ligne'
};


/***/ }),

/***/ 14129:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'גובה שורה'
};


/***/ }),

/***/ 93729:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Vonal magassága'
};


/***/ }),

/***/ 16106:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Tinggi baris'
};


/***/ }),

/***/ 89690:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Altezza linea'
};


/***/ }),

/***/ 33216:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'ラインの高さ'
};


/***/ }),

/***/ 17282:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': '선 높이'
};


/***/ }),

/***/ 52841:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Зураасны өндөр'
};


/***/ }),

/***/ 91761:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Lijnhoogte'
};


/***/ }),

/***/ 61675:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Wysokość linii'
};


/***/ }),

/***/ 69709:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Altura da linha'
};


/***/ }),

/***/ 82591:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Высота линии'
};


/***/ }),

/***/ 87649:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'Çizgi yüksekliği'
};


/***/ }),

/***/ 60268:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': '线高'
};


/***/ }),

/***/ 58214:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	'Line height': 'ความสูงเส้น'
};


/***/ }),

/***/ 5586:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'التدقيق الإملائي'
};


/***/ }),

/***/ 66023:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Kontrola pravopisu'
};


/***/ }),

/***/ 65860:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Rechtschreibprüfung'
};


/***/ }),

/***/ 86055:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Corrección ortográfica'
};


/***/ }),

/***/ 50037:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'غلطیابی املایی'
};


/***/ }),

/***/ 7118:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Vérification Orthographique'
};


/***/ }),

/***/ 30298:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'בדיקת איות'
};


/***/ }),

/***/ 52107:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Helyesírás-ellenőrzés'
};


/***/ }),

/***/ 31240:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Spellchecking'
};


/***/ }),

/***/ 4101:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Controllo ortografico'
};


/***/ }),

/***/ 69286:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'スペルチェック'
};


/***/ }),

/***/ 13402:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: '맞춤법 검사'
};


/***/ }),

/***/ 1242:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Дүрмийн алдаа шалгах'
};


/***/ }),

/***/ 89574:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Spellingcontrole'
};


/***/ }),

/***/ 63630:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Sprawdzanie pisowni'
};


/***/ }),

/***/ 72212:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Verificação ortográfica'
};


/***/ }),

/***/ 82570:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Проверка орфографии'
};


/***/ }),

/***/ 19323:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'Yazım denetimi'
};


/***/ }),

/***/ 50279:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: '拼写检查'
};


/***/ }),

/***/ 98364:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	Spellcheck: 'สะกดคำ'
};


/***/ }),

/***/ 54261:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'رمز'
};


/***/ }),

/***/ 60425:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'symbol'
};


/***/ }),

/***/ 7057:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'Symbol'
};


/***/ }),

/***/ 48356:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'Símbolo'
};


/***/ }),

/***/ 11428:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'سمبل'
};


/***/ }),

/***/ 29084:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'caractère'
};


/***/ }),

/***/ 22876:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'תו מיוחד'
};


/***/ }),

/***/ 20890:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'Szimbólum'
};


/***/ }),

/***/ 75987:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'simbol'
};


/***/ }),

/***/ 60379:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'Simbolo'
};


/***/ }),

/***/ 99950:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'symbol'
};


/***/ }),

/***/ 60934:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: '기호'
};


/***/ }),

/***/ 45913:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'тэмдэгт'
};


/***/ }),

/***/ 21994:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'symbool'
};


/***/ }),

/***/ 38128:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'symbol'
};


/***/ }),

/***/ 71515:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'Símbolo'
};


/***/ }),

/***/ 58194:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'символ'
};


/***/ }),

/***/ 65802:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: 'Sembol'
};


/***/ }),

/***/ 86628:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: '符号'
};


/***/ }),

/***/ 32210:
/***/ (function(module) {

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */

module.exports = {
	symbols: '符號'
};


/***/ }),

/***/ 52378:
/***/ (function(module) {

"use strict";
module.exports = {assert(){}};;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	!function() {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = function(result, chunkIds, fn, priority) {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var chunkIds = deferred[i][0];
/******/ 				var fn = deferred[i][1];
/******/ 				var priority = deferred[i][2];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			670: 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkjodit"] = self["webpackChunkjodit"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";
var exports = __webpack_exports__;

/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2023 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommitMode = exports.Jodit = void 0;
__webpack_require__(90176);
if ( true && typeof window !== 'undefined') {
    __webpack_require__(89019);
}
var jodit_1 = __webpack_require__(37920);
Object.defineProperty(exports, "Jodit", ({ enumerable: true, get: function () { return jodit_1.Jodit; } }));
var langs_1 = __webpack_require__(26435);
var decorators = __webpack_require__(43441);
var constants = __webpack_require__(86893);
var Modules = __webpack_require__(87837);
var Icons = __webpack_require__(15261);
__webpack_require__(70022);
__webpack_require__(91147);
Object.keys(constants).forEach(function (key) {
    jodit_1.Jodit[key] = constants[key];
});
var esFilter = function (key) { return key !== '__esModule'; };
Object.keys(Icons)
    .filter(esFilter)
    .forEach(function (key) {
    Modules.Icon.set(key.replace('_', '-'), Icons[key]);
});
Object.keys(Modules)
    .filter(esFilter)
    .forEach(function (key) {
    jodit_1.Jodit.modules[key] = Modules[key];
});
Object.keys(decorators)
    .filter(esFilter)
    .forEach(function (key) {
    jodit_1.Jodit.decorators[key] = decorators[key];
});
['Confirm', 'Alert', 'Prompt'].forEach(function (key) {
    jodit_1.Jodit[key] = Modules[key];
});
Object.keys(langs_1.default)
    .filter(esFilter)
    .forEach(function (key) {
    jodit_1.Jodit.lang[key] = langs_1.default[key];
});
var CommitMode = (function () {
    function CommitMode() {
    }
    return CommitMode;
}());
exports.CommitMode = CommitMode;

}();
__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	return __webpack_exports__;
/******/ })()
;
});